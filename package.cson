
# NPM package file, see https://docs.npmjs.com/files/package.json
# Oh, this is CSON, not JSON ( see CoffeeScript-Object-Notation https://github.com/bevry/cson )

#####################################################################
#####################################################################

# Master source file used to generate package.json

# DEFAULT METHOD (if package.json is intact):
# npm run cson2json
#
# ALTERNATIVE METHOD (if package.json is corrupted):
# npm install cson
# node ./node_modules/cson/bin/cson2json package.cson > package.json
# Note that on some Windows terminals (e.g. GitShell),
# unfortunately the package.json file might need its encoding
# converted to UTF-no-BOM :(
# This is somehow due to the piped stdout-stdin result being UCS2-little-endian
# (yet this works just fine when the same command is invoked from
# "npm run cson2json" instead of from Node!)

#####################################################################
#####################################################################

'/*': '----------------------------------------------------------------------------'
'..': 'This package.json (JSON) is automatically generated from package.cson (CSON)'
'.-': "DO NOT invoke 'npm init' or 'npm install --save' ('--save-dev' / '--save-optional')"
'._': 'as this would overwrite / update the JSON, not the master CSON!'
'*/': '----------------------------------------------------------------------------'

#####################################################################

name: "readium-shared-js"

version: "0.20.0-alpha"

description: "Readium - shared javascript module"

keywords: [
    "readium"
    "epub"
    "epub3"
]

author:
    name: "Readium (Daniel Weck)"
    email: "daniel.weck@gmail.com"
    url: "http://github.com/readium"

licenses: [
    type: "BSD-3-Clause"
    url: "http://opensource.org/licenses/BSD-3-Clause"
]

homepage: "http://github.com/readium/readium-shared-js"

bugs:
    url: "http://github.com/readium/readium-shared-js/issues"
    email: "daniel.weck@gmail.com"

repository:
    type: "git"
    url: "git://github.com/readium/readium-shared-js.git"

#####################################################################
files: [

    "build-output/"

    "build-output-usage-example/"

    "license.txt"

    "README.md"
]

# "main" is designed for Node/CommonJS modules, not RequireJS/AMD ones.
# See http://requirejs.org/docs/commonjs.html
# See http://requirejs.org/docs/node.html
#
#main: "build-output/_multiple-bundles/readium-shared-js.js"

#####################################################################
dependencies:

    "parallelshell": 'latest'

    "opener": 'latest'

    #"http-server": 'latest'
    "http-server": 'danielweck/http-server'
    # SEE: https://github.com/indexzero/http-server/issues/154


#####################################################################
# These dependencies can be fetched by using the "--dev" option
# in "npm install --dev readium-shared-js".
devDependencies:

# see readium-cfi-js:
# "requirejs", "almond", "jquery"


    "jquerySizes": 'bramstein/jsizes'

    "domReady": 'requirejs/domReady'

    "backbone": 'latest'

    "underscore": 'latest'

    "URIjs": 'latest'

    "eventemitter3": 'latest'


# Below dependencies are only used for building tasks (above are runtime deps):

# see readium-cfi-js:
# "cson", "jshint", "glob", "rimraf", "mkdirp", "watch", "live-reload"


#####################################################################
scripts:


#=====================
    cson2json: '

        node readium-cfi-js/node_modules/cson/bin/cson2json package.cson
        &&
        node readium-cfi-js/node_modules/cson/bin/cson2json package.cson > package.json
    '


#=====================
    'prepare': '

        npm run
            prepare:submodule
        &&
        npm run
            prepare:dependencies
        &&
        npm run
            prepare:patch
    '

#=====================
    'prepare:dependencies': '

        npm install
        &&
        npm update
    '

#=====================
    'prepare:submodule': '

        cd readium-cfi-js
        &&
        npm run prepare
        &&
        cd ..
        &&
        ls
    '

#=====================
    'prepare:patch': '

        node readium-cfi-js/node_modules/rimraf/bin.js
            node_modules/eventemitter3/_rjs/**
        &&
        node readium-cfi-js/node_modules/requirejs/bin/r.js -convert
            node_modules/eventemitter3/
            node_modules/eventemitter3/_rjs/
    '

#=====================
    clean: '
        node --version
        &&
        npm --version
        &&
        node readium-cfi-js/node_modules/rimraf/bin.js
            build-output/*
    '


#=====================
    'prebuild': '

        npm run clean
    '

#=====================
    build: '

        npm run
            build:styles
        &&
        npm run
            build:scripts
    '

#=====================
    lint: '

        node
            readium-cfi-js/readium-build-tools/jshint_glob.js
            js/**.js
    '

#=====================
#    'prebuild:scripts': '
#
#        npm run
#            lint
#    '

#=====================
#    'postbuild:scripts': '
#
#        node readium-cfi-js/node_modules/rimraf/bin.js
#                build-output/_SOURCES
#    '

#=====================
    'build:scripts': '

        npm run
            build:scripts:multiple
        &&
        npm run
            build:scripts:single
    '

#=====================
    'build:scripts:multiple': '
        node readium-cfi-js/node_modules/requirejs/bin/r.js
             -o
             readium-cfi-js/readium-build-tools/RequireJS_config.js
             --rjs_bundle=multiple
    '

#=====================
    'build:scripts:single': '
        node readium-cfi-js/node_modules/requirejs/bin/r.js
             -o
             readium-cfi-js/readium-build-tools/RequireJS_config.js
             --rjs_bundle=single
    '

#=====================
    'prebuild:styles': '

        node readium-cfi-js/node_modules/mkdirp/bin/cmd.js
            build-output/css/
    '

#=====================
# TODO use cssminify
    'build:styles': '

        node readium-cfi-js/node_modules/cpy/cli.js
            static/sdk.css build-output/css/
    '

#=====================
#### BLOCKING! (CTRL-C) [watch][live-reload][http]
    'example:watch': '
        echo > open_webbrowser.js
        &&
        parallelshell
            \"npm run watch\"
            \"npm run http\"
    '
# \"npm run live-reload\"

#=====================
#### BLOCKING! (CTRL-C) [http]
    'example': '
        parallelshell
            \"npm run http\"
            \"npm run webbrowser\"
    '

#=====================
#### BLOCKING! (CTRL-C) [watch or nodemon]
    'watch': '
        node readium-cfi-js/node_modules/watch/cli.js
            \"npm run build
                && node readium-cfi-js/readium-build-tools/webbrowser.js
                && npm run webbrowser
                && node readium-cfi-js/node_modules/rimraf/bin.js
                      open_webbrowser.js\"
            build-output-usage-example/ js/ plugins/ readium-cfi-js/js/
    '
    #    nodemon -q
    #    -w build-output-usage-example/
    #    --ext \".\"
    #    --exec \"npm run build
    #            && node readium-cfi-js/readium-build-tools/webbrowser.js
    #            && npm run webbrowser
    #            && node readium-cfi-js/node_modules/rimraf/bin.js
    #                  open_webbrowser.js\"

#=====================
    'http': '
        http-server -p 9090 --cors ./
    '

#=====================
#    'live-reload': '
#
#        live-reload --port 9091 --delay 1000 build-output/
#    '

#=====================
    'webbrowser': '

        opener http://127.0.0.1:9090/build-output-usage-example/
    '
