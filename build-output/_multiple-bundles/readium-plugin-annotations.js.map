{"version":3,"file":"readium-plugin-annotations.js","sources":["backbone.js","../../plugins/annotations/annotations_module.js","../../plugins/annotations/annotations_manager.js","../../plugins/annotations/main.js"],"names":["factory","root","self","global","define","amd","_","$","exports","Backbone","require","e","jQuery","Zepto","ender","previousBackbone","array","slice","VERSION","noConflict","this","emulateHTTP","emulateJSON","Events","eventSplitter","eventsApi","iteratee","memo","name","callback","opts","names","i","keys","length","test","split","on","context","internalOn","obj","listening","_events","onApi","ctx","listeners","_listeners","id","listenTo","_listenId","uniqueId","listeningTo","_listeningTo","thisId","objId","count","events","options","handlers","push","off","offApi","stopListening","ids","isEmpty","remaining","j","handler","_callback","size","once","onceMap","bind","listenToOnce","map","offer","apply","arguments","trigger","Math","max","args","Array","triggerApi","objEvents","cb","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","call","addMethod","method","attribute","value","defaultVal","unshift","addUnderscoreMethods","Class","methods","each","prototype","unbind","extend","Model","attributes","attrs","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","matches","key","val","unset","changes","silent","changing","prev","current","_validate","_changing","_previousAttributes","isEqual","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","wrapError","save","xhr","wait","validate","serverAttrs","isObject","isNew","patch","destroy","defer","url","base","urlError","replace","encodeURIComponent","constructor","isValid","error","modelMethods","values","pairs","invert","pick","omit","chain","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","removed","singular","isArray","_removeModels","existing","sort","at","sortable","sortAttr","isString","toAdd","toRemove","modelMap","order","orderChanged","_isModel","_prepareModel","_addReference","modelId","splice","orderedModels","addOpts","index","_removeReference","previousModels","pop","shift","_byId","where","first","findWhere","Error","sortBy","pluck","invoke","create","callbackOpts","indexOf","_onModelEvent","event","prevId","collectionMethods","forEach","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","some","any","include","contains","min","toArray","head","take","initial","rest","tail","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","attributeMethods","iterator","isFunction","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","listener","undelegate","_createElement","document","createElement","className","_setAttributes","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","bindAll","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","checkUrl","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","frameElement","clearInterval","title","assign","_updateHash","protoProps","staticProps","child","parent","Surrogate","__super__","EpubAnnotationsModule","contentDocumentDOM","bbPageSetView","annotationCSSUrl","EpubAnnotations","TextLineInferrer","inferLines","rectList","currLine","currRect","rectAppended","inferredLines","numRects","numLines","currRectNum","currLineNum","includeRectInLine","top","left","width","height","expandLine","createNewLine","rectTop","rectLeft","rectWidth","rectHeight","rectIsWithinLineVertically","maxTop","maxBottom","rectIsWithinLineHorizontally","avgHeight","currLineMaxTop","currLineMaxBottom","rectBottom","lineHeight","lineHeightAdjustment","rectHeightAdjustment","currLineLeft","currLineWidth","currLineAvgHeight","lineGapHeuristic","rectRight","currLineRight","startTop","numRectsPlusOne","currSumHeights","expandLineVertically","expandLineHorizontally","newLineLeft","lineRight","newLineRight","newLineWidth","Highlight","isVisible","HighlightGroup","selectedNodes","highlightViews","scale","constructHighlightViews","highlightGroupCallback","that","highlightView","setHoverHighlight","setBaseHighlight","inferrer","node","rects","range","createRange","selectNodeContents","getClientRects","rect","line","highlightTop","highlightLeft","highlightHeight","highlightWidth","HighlightView","CFI","styles","callbackContext","resetHighlights","viewportElement","offsetTop","offsetLeft","offsetTopAddition","offsetLeftAddition","destroyCurrentHighlights","renderHighlights","view","append","toInfo","setStyles","Underline","UnderlineGroup","underlineViews","constructUnderlineViews","underlineGroupCallback","underlineView","setHoverUnderline","setBaseUnderline","underlineTop","underlineLeft","underlineHeight","underlineWidth","UnderlineView","resetUnderlines","destroyCurrentUnderlines","renderUnderlines","Bookmark","bookmarkCenteringAdjustment","bookmarkTopAdjustment","getAbsoluteTop","targetElementTop","offset","bookmarkAbsoluteTop","getAbsoluteLeft","targetElementLeft","bookmarkAbsoluteLeft","ReflowableAnnotations","epubCFI","EPUBcfi","annotations","Annotations","readerBoundElement","injectAnnotationCSS","epubWindow","getCurrentSelectionRange","undefined","startOffset","endOffset","redraw","leftAddition","getPaginationLeftOffset","redrawAnnotations","removeHighlight","annotationId","addHighlight","CFIRangeInfo","rangeStartNode","rangeEndNode","startMarkerHtml","getRangeStartMarker","endMarkerHtml","getRangeEndMarker","$html","matrix","css","WebKitCSSMatrix","a","injectRangeElements","startElement","nextSibling","endElement","previousSibling","setStart","setEnd","selectionInfo","getSelectionInfo","selectedElements","addUnderline","console","log","message","addBookmark","$injectedElement","bookmarkMarkerHtml","getBookmarkMarker","injectElement","addImageAnnotation","$targetImage","getTargetElement","getCurrentSelectionCFI","currentSelection","getCurrentSelectionOffsetCFI","generateCharOffsetCFI","addSelectionHighlight","generatedContentDocCFI","annotationInfo","arbitraryPackageDocCFI","addSelectionBookmark","addSelectionImageAnnotation","firstSelectedImage","generateElementCFIComponent","updateAnnotationView","annotationViews","selectedRange","elementType","generateRangeCFI","intervalState","startElementFound","endElementFound","findSelectedElements","commonAncestorContainer","startContainer","endContainer","rangeCFIComponent","startNode","endNode","nodeType","Node","TEXT_NODE","generateCharOffsetRangeComponent","charOffsetCFI","generateCharacterOffsetCFIComponent","currElement","elementTypes","addElement","is","iframeDocument","getSelection","rangeCount","anchorOffset","focusOffset","getRangeAt","selection","$htmlElement","offsetLeftPixels","parseInt","$contentDocHead","rel","bookmarkViews","highlights","markers","underlines","imageAnnotations","annotationHash","highlightGroup","bookmarkView","resetBookmark","underlineGroup","getBookmark","bookmark","getHighlight","highlight","getUnderline","underline","getBookmarks","bookmarks","getHighlights","getUnderlines","getImageAnnotations","imageAnnotation","targetElement","toString","validateAnnotationId","BookmarkView","startMarker","endMarker","parentNode","highlightedTextNodes","underlinedTextNodes","imageNode","ImageAnnotation","mouseenter","mouseleave","click","setCSS","absoluteTop","absoluteLeft","position","addClass","setHoverBookmark","stopPropagation","hasClass","removeClass","setBaseBookmark","clickHandler","contextmenu","resetPosition","background-color","fill_color","highlightEvent","highlightGroupContext","$transparentElement","$underlineElement","underlineEvent","underlineGroupContext","$imageElement","setMouseenterBorder","setMouseleaveBorder","border","-webkit-background-clip","background-clip","reflowableAnnotations","getImageAnnotation","removeAnnotation","EventEmitter","AnnotationsManager","proxyObj","getPartialCfi","cfiWrapperPattern","partiallyNakedCfi","nakedCfi","substring","liveAnnotations","spines","proxy","warn","originalEmit","triggerEmitPatch","debug","annotationClickedEvent","spineIndex","jQueryEvent","fullFakeCfi","idref","partialCfi","emit","attachAnnotations","$iframe","spineItem","epubDocument","contentDocument","abs","getCurrentSelectionCfi","spine","annotationsForView","cfi","annotation","spineIdRef","fakeCfi","Plugins","config","register","api","_annotationsManager","_annotationsApi","_initialized","_initializedLate","isInitialized","plugin","Cfi","reader","ReadiumSDK","CONTENT_DOCUMENT_LOADED","extendReader","main"],"mappings":"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","sourcesContent":["//     Backbone.js 1.2.0\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define('backbone',['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create local references to array methods we'll want to use later.\n  var array = [];\n  var slice = array.slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.0';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`), reducing them by manipulating `memo`.\n  // Passes a normalized single event name and callback, as well as any\n  // optional `opts`.\n  var eventsApi = function(iteratee, memo, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      for (names = _.keys(name); i < names.length ; i++) {\n        memo = iteratee(memo, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        memo = iteratee(memo, names[i], callback, opts);\n      }\n    } else {\n      memo = iteratee(memo, name, callback, opts);\n    }\n    return memo;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // An internal use `on` function, used to guard the `listening` argument from\n  // the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    // No events to consider.\n    if (!events) return;\n\n    var i = 0, length, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed. When multiple events are\n  // passed in using the space-separated syntax, the event will fire once for every\n  // event you passed in, not once for a combination of all events\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it as been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Proxy Underscore methods to a Backbone class' prototype using a\n  // particular attribute as the data argument\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], iteratee, context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], iteratee, defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      var attr, attrs, unset, changes, silent, changing, prev, current;\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      unset           = options.unset;\n      silent          = options.silent;\n      changes         = [];\n      changing        = this._changing;\n      this._changing  = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n      current = this.attributes, prev = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          this.changed[attr] = val;\n        } else {\n          delete this.changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var val, changed = false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      for (var attr in diff) {\n        if (_.isEqual(old[attr], (val = diff[attr]))) continue;\n        (changed || (changed = {}))[attr] = val;\n      }\n      return changed;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        if (!model.set(model.parse(resp, options), options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      var attrs, method, xhr, attributes = this.attributes, wait;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true}, options);\n      wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // Set temporary attributes if `{wait: true}`.\n      if (attrs && wait) {\n        this.attributes = _.extend({}, attributes, attrs);\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      if (options.parse === void 0) options.parse = true;\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend(attrs || {}, serverAttrs);\n        if (_.isObject(serverAttrs) && !model.set(serverAttrs, options)) {\n          return false;\n        }\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      if (attrs && wait) this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.id || this.attributes[this.idAttribute];\n      return base.replace(/([^\\/])$/, '$1/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.extend(options || {}, { validate: true }));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model){ return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      var singular = !_.isArray(models), removed;\n      models = singular ? [models] : _.clone(models);\n      options || (options = {});\n      removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? models[0] : models;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : models.slice();\n      var id, model, attrs, existing, sort;\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n      var orderChanged = false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (var i = 0; i < models.length; i++) {\n        attrs = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(attrs)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge && attrs !== existing) {\n            attrs = this._isModel(attrs) ? attrs.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (!model) continue;\n        id = this.modelId(model.attributes);\n        if (order && (model.isNew() || !modelMap[id])) {\n          order.push(model);\n\n          // Check to see if this is actually a new model at this index.\n          orderChanged = orderChanged || !this.models[i] || model.cid !== this.models[i].cid;\n        }\n\n        modelMap[id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (var i = 0; i < this.length; i++) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || orderChanged) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (var i = 0; i < toAdd.length; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (var i = 0; i < orderedModels.length; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        var addOpts = at != null ? _.clone(options) : options;\n        for (var i = 0; i < toAdd.length; i++) {\n          if (at != null) addOpts.index = at + i;\n          (model = toAdd[i]).trigger('add', model, this, addOpts);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      this.remove(model, options);\n      return model;\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      var matches = _.matches(attrs);\n      return this[first ? 'find' : 'filter'](function(model) {\n        return matches(model.attributes);\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = options ? _.clone(options) : {};\n      if (options.parse === void 0) options.parse = true;\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      if (!(model = this._prepareModel(model, options))) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set. Does not trigger any\n    // additional events. Returns true if anything was actually removed.\n    _removeModels: function(models, options) {\n      var i, l, index, model, removed = false;\n      for (var i = 0, j = 0; i < models.length; i++) {\n        var model = models[i] = this.get(models[i]);\n        if (!model) continue;\n        var id = this.modelId(model.attributes);\n        if (id != null) delete this._byId[id];\n        delete this._byId[model.cid];\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n        models[j++] = model;\n        this._removeReference(model, options);\n        removed = true;\n      }\n      // We only need to slice if models array should be smaller, which is\n      // caused by some models not actually getting removed.\n      if (models.length !== j) models = models.slice(0, j);\n      return removed;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 2,\n      contains: 2, invoke: 2, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3 };\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    if (!_[method]) return;\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    options || (options = {});\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      if (!(events || (events = _.result(this, 'events')))) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[events[key]];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window;\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        var iframe = document.createElement('iframe');\n        iframe.src = 'javascript:0';\n        iframe.style.display = 'none';\n        iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        this.iframe = body.insertBefore(iframe, body.firstChild).contentWindow;\n        this.iframe.document.open().close();\n        this.iframe.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe.frameElement);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe))) {\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) this.iframe.document.open().close();\n          this._updateHash(this.iframe.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n\n","define('readium_plugin_annotations/annotations_module',['backbone'], function(Backbone) {\r\nvar EpubAnnotationsModule = function (contentDocumentDOM, bbPageSetView, annotationCSSUrl) {\r\n    \r\n    var EpubAnnotations = {};\r\n\r\n    // Rationale: The order of these matters\r\n    EpubAnnotations.TextLineInferrer = Backbone.Model.extend({\r\n\r\n    initialize : function (attributes, options) {},\r\n\r\n    // ----------------- PUBLIC INTERFACE --------------------------------------------------------------\r\n\r\n    inferLines : function (rectList) {\r\n\r\n        var inferredLines = [];\r\n        var numRects = rectList.length;\r\n        var numLines = 0;\r\n        var currLine;\r\n        var currRect;\r\n        var rectAppended;\r\n\r\n        // Iterate through each rect\r\n        for (var currRectNum = 0; currRectNum <= numRects - 1; currRectNum++) {\r\n            currRect = rectList[currRectNum];\r\n\r\n            // Check if the rect can be added to any of the current lines\r\n            rectAppended = false;\r\n            for (var currLineNum = 0; currLineNum <= numLines - 1; currLineNum++) {\r\n                currLine = inferredLines[currLineNum];\r\n\r\n                if (this.includeRectInLine(currLine, currRect.top, currRect.left, currRect.width, currRect.height)) {\r\n                    this.expandLine(currLine, currRect.left, currRect.top, currRect.width, currRect.height);\r\n                    rectAppended = true;\r\n                    break;   \r\n                }\r\n            } \r\n            \r\n            if (rectAppended) {\r\n                continue;\r\n            }\r\n            // If the rect can't be added to any existing lines, create a new line\r\n            else {\r\n                inferredLines.push(this.createNewLine(currRect.left, currRect.top, currRect.width, currRect.height));\r\n                numLines = numLines + 1; // Update the number of lines, so we're not using .length on every iteration\r\n            }\r\n        }\r\n\r\n        return inferredLines;\r\n    },\r\n\r\n\r\n    // ----------------- PRIVATE HELPERS ---------------------------------------------------------------\r\n\r\n    includeRectInLine : function (currLine, rectTop, rectLeft, rectWidth, rectHeight) {\r\n\r\n        // is on an existing line : based on vertical position\r\n        if (this.rectIsWithinLineVertically(rectTop, rectHeight, currLine.maxTop, currLine.maxBottom)) {\r\n            if (this.rectIsWithinLineHorizontally(rectLeft, rectWidth, currLine.left, currLine.width, currLine.avgHeight)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    rectIsWithinLineVertically : function (rectTop, rectHeight, currLineMaxTop, currLineMaxBottom) {\r\n\r\n        var rectBottom = rectTop + rectHeight;\r\n        var lineHeight = currLineMaxBottom - currLineMaxTop;\r\n        var lineHeightAdjustment = (lineHeight * 0.75) / 2;\r\n        var rectHeightAdjustment = (rectHeight * 0.75) / 2;\r\n\r\n        rectTop = rectTop + rectHeightAdjustment;\r\n        rectBottom = rectBottom - rectHeightAdjustment;\r\n        currLineMaxTop = currLineMaxTop + lineHeightAdjustment;\r\n        currLineMaxBottom = currLineMaxBottom - lineHeightAdjustment;\r\n\r\n        if (rectTop === currLineMaxTop && rectBottom === currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else if (rectTop < currLineMaxTop && rectBottom < currLineMaxBottom && rectBottom > currLineMaxTop) {\r\n            return true;\r\n        }\r\n        else if (rectTop > currLineMaxTop && rectBottom > currLineMaxBottom && rectTop < currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else if (rectTop > currLineMaxTop && rectBottom < currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else if (rectTop < currLineMaxTop && rectBottom > currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    rectIsWithinLineHorizontally : function (rectLeft, rectWidth, currLineLeft, currLineWidth, currLineAvgHeight) {\r\n\r\n        var lineGapHeuristic = 2 * currLineAvgHeight;\r\n        var rectRight = rectLeft + rectWidth;\r\n        var currLineRight = rectLeft + currLineWidth;\r\n\r\n        if ((currLineLeft - rectRight) > lineGapHeuristic) {\r\n            return false;\r\n        }\r\n        else if ((rectLeft - currLineRight) > lineGapHeuristic) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    createNewLine : function (rectLeft, rectTop, rectWidth, rectHeight) {\r\n\r\n        var maxBottom = rectTop + rectHeight;\r\n\r\n        return {\r\n            left : rectLeft,\r\n            startTop : rectTop,\r\n            width : rectWidth, \r\n            avgHeight : rectHeight, \r\n            maxTop : rectTop,\r\n            maxBottom : maxBottom,\r\n            numRects : 1\r\n        };\r\n    },\r\n\r\n    expandLine : function (currLine, rectLeft, rectTop, rectWidth, rectHeight) {\r\n\r\n        var lineOldRight = currLine.left + currLine.width; \r\n\r\n        // Update all the properties of the current line with rect dimensions\r\n        var rectRight = rectLeft + rectWidth;\r\n        var rectBottom = rectTop + rectHeight;\r\n        var numRectsPlusOne = currLine.numRects + 1;\r\n\r\n        // Average height calculation\r\n        var currSumHeights = currLine.avgHeight * currLine.numRects;\r\n        var avgHeight = ((currSumHeights + rectHeight) / numRectsPlusOne);\r\n        currLine.avgHeight = avgHeight;\r\n        currLine.numRects = numRectsPlusOne;\r\n\r\n        // Expand the line vertically\r\n        currLine = this.expandLineVertically(currLine, rectTop, rectBottom);\r\n        currLine = this.expandLineHorizontally(currLine, rectLeft, rectRight);        \r\n\r\n        return currLine;\r\n    },\r\n\r\n    expandLineVertically : function (currLine, rectTop, rectBottom) {\r\n\r\n        if (rectTop < currLine.maxTop) {\r\n            currLine.maxTop = rectTop;\r\n        } \r\n        if (rectBottom > currLine.maxBottom) {\r\n            currLine.maxBottom = rectBottom;\r\n        }\r\n\r\n        return currLine;\r\n    },\r\n\r\n    expandLineHorizontally : function (currLine, rectLeft, rectRight) {\r\n\r\n        var newLineLeft = currLine.left <= rectLeft ? currLine.left : rectLeft;\r\n        var lineRight = currLine.left + currLine.width;\r\n        var newLineRight = lineRight >= rectRight ? lineRight : rectRight;\r\n        var newLineWidth = newLineRight - newLineLeft;\r\n        currLine.left = newLineLeft;\r\n        currLine.width = newLineWidth;\r\n\r\n        return currLine;\r\n    }\r\n});\r\n    EpubAnnotations.Highlight = Backbone.Model.extend({\r\n\r\n    defaults : {\r\n        \"isVisible\" : false\r\n    },\r\n\r\n    initialize : function (attributes, options) {}\r\n});\r\n    EpubAnnotations.HighlightGroup = Backbone.Model.extend({\r\n\r\n    defaults : function () {\r\n        return {\r\n            \"selectedNodes\" : [],\r\n            \"highlightViews\" : []\r\n        };\r\n    },\r\n\r\n    initialize : function (attributes, options) {\r\n        this.set(\"scale\", attributes.scale);\r\n        this.constructHighlightViews();\r\n    },\r\n\r\n    // --------------- PRIVATE HELPERS ---------------------------------------\r\n\r\n    highlightGroupCallback : function (event) {\r\n\r\n        var that = this;\r\n        \r\n        // Trigger this event on each of the highlight views (except triggering event)\r\n        if (event.type === \"click\") {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationClicked\", \"highlight\", that.get(\"CFI\"), that.get(\"id\"), event);\r\n            return;\r\n        }\r\n\r\n\r\n        // Trigger this event on each of the highlight views (except triggering event)\r\n        if (event.type === \"contextmenu\") {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationRightClicked\", \"highlight\", that.get(\"CFI\"), that.get(\"id\"), event);\r\n            return;\r\n        }\r\n\r\n\r\n        // Events that are called on each member of the group\r\n        _.each(this.get(\"highlightViews\"), function (highlightView) {\r\n\r\n            if (event.type === \"mouseenter\") {\r\n                highlightView.setHoverHighlight();    \r\n            }\r\n            else if (event.type === \"mouseleave\") {\r\n                highlightView.setBaseHighlight();\r\n            }\r\n        });\r\n    },\r\n\r\n    constructHighlightViews : function () {\r\n\r\n        var that = this;\r\n        var rectList = [];\r\n        var inferrer;\r\n        var inferredLines;\r\n\r\n        _.each(this.get(\"selectedNodes\"), function (node, index) {\r\n\r\n            var rects;\r\n            var range = document.createRange();\r\n            range.selectNodeContents(node);\r\n            rects = range.getClientRects();\r\n\r\n            // REFACTORING CANDIDATE: Maybe a better way to append an array here\r\n            _.each(rects, function (rect) {\r\n                rectList.push(rect);\r\n            });\r\n        });\r\n\r\n        inferrer = new EpubAnnotations.TextLineInferrer();\r\n        inferredLines = inferrer.inferLines(rectList);\r\n\r\n        var scale = this.get(\"scale\");\r\n\r\n        _.each(inferredLines, function (line, index) {\r\n\r\n            var highlightTop = line.startTop / scale;;\r\n            var highlightLeft = line.left / scale;;\r\n            var highlightHeight = line.avgHeight / scale;\r\n            var highlightWidth = line.width / scale;;\r\n\r\n            var highlightView = new EpubAnnotations.HighlightView({\r\n                CFI : that.get(\"CFI\"),\r\n                top : highlightTop + that.get(\"offsetTopAddition\"),\r\n                left : highlightLeft + that.get(\"offsetLeftAddition\"),\r\n                height : highlightHeight,\r\n                width : highlightWidth,\r\n                styles : that.get('styles'),\r\n                highlightGroupCallback : that.highlightGroupCallback,\r\n                callbackContext : that\r\n            });\r\n\r\n            that.get(\"highlightViews\").push(highlightView);\r\n        });\r\n    },\r\n\r\n    resetHighlights : function (viewportElement, offsetTop, offsetLeft) {\r\n\r\n        if (offsetTop) {\r\n            this.set({ offsetTopAddition : offsetTop });\r\n        }\r\n        if (offsetLeft) {\r\n            this.set({ offsetLeftAddition : offsetLeft });\r\n        }\r\n\r\n        this.destroyCurrentHighlights();\r\n        this.constructHighlightViews();\r\n        this.renderHighlights(viewportElement);\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Ensure that event listeners are being properly cleaned up. \r\n    destroyCurrentHighlights : function () { \r\n\r\n        _.each(this.get(\"highlightViews\"), function (highlightView) {\r\n            highlightView.remove();\r\n            highlightView.off();\r\n        });\r\n\r\n        this.get(\"highlightViews\").length = 0;\r\n    },\r\n\r\n    renderHighlights : function (viewportElement) {\r\n\r\n        _.each(this.get(\"highlightViews\"), function (view, index) {\r\n            $(viewportElement).append(view.render());\r\n        });\r\n    },\r\n\r\n    toInfo : function () {\r\n\r\n        return {\r\n\r\n            id : this.get(\"id\"),\r\n            type : \"highlight\",\r\n            CFI : this.get(\"CFI\")\r\n        };\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n        var highlightViews = this.get('highlightViews');\r\n\r\n        this.set({styles : styles});\r\n\r\n        _.each(highlightViews, function(view, index) {\r\n            view.setStyles(styles);\r\n        });\r\n    }\r\n});\r\n\r\n    EpubAnnotations.Underline = Backbone.Model.extend({\r\n\r\n    defaults : {\r\n        \"isVisible\" : false\r\n    },\r\n\r\n    initialize : function (attributes, options) {}\r\n});\r\n    EpubAnnotations.UnderlineGroup = Backbone.Model.extend({\r\n\r\n    defaults : function () {\r\n        return {\r\n            \"selectedNodes\" : [],\r\n            \"underlineViews\" : []\r\n        };\r\n    },\r\n\r\n    initialize : function (attributes, options) {\r\n\r\n        this.constructUnderlineViews();\r\n    },\r\n\r\n    // --------------- PRIVATE HELPERS ---------------------------------------\r\n\r\n    underlineGroupCallback : function (event) {\r\n\r\n        var that = this;\r\n\r\n        // Trigger this event on each of the underline views (except triggering event)\r\n        if (event.type === \"click\") {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationClicked\", \"underline\", that.get(\"CFI\"), that.get(\"id\"), event);\r\n            return;\r\n        }\r\n\r\n        // Events that are called on each member of the group\r\n        _.each(this.get(\"underlineViews\"), function (underlineView) {\r\n\r\n            if (event.type === \"mouseenter\") {\r\n                underlineView.setHoverUnderline();\r\n            }\r\n            else if (event.type === \"mouseleave\") {\r\n                underlineView.setBaseUnderline();\r\n            }\r\n        });\r\n    },\r\n\r\n    constructUnderlineViews : function () {\r\n\r\n        var that = this;\r\n        var rectList = [];\r\n        var inferrer;\r\n        var inferredLines;\r\n\r\n        _.each(this.get(\"selectedNodes\"), function (node, index) {\r\n\r\n            var rects;\r\n            var range = document.createRange();\r\n            range.selectNodeContents(node);\r\n            rects = range.getClientRects();\r\n\r\n            // REFACTORING CANDIDATE: Maybe a better way to append an array here\r\n            _.each(rects, function (rect) {\r\n                rectList.push(rect);\r\n            });\r\n        });\r\n\r\n        inferrer = new EpubAnnotations.TextLineInferrer();\r\n        inferredLines = inferrer.inferLines(rectList);\r\n\r\n        _.each(inferredLines, function (line, index) {\r\n\r\n            var underlineTop = line.startTop;\r\n            var underlineLeft = line.left;\r\n            var underlineHeight = line.avgHeight;\r\n            var underlineWidth = line.width;\r\n\r\n            var underlineView = new EpubAnnotations.UnderlineView({\r\n                CFI : that.get(\"CFI\"),\r\n                top : underlineTop + that.get(\"offsetTopAddition\"),\r\n                left : underlineLeft + that.get(\"offsetLeftAddition\"),\r\n                height : underlineHeight,\r\n                width : underlineWidth,\r\n                styles : that.get(\"styles\"),\r\n                underlineGroupCallback : that.underlineGroupCallback,\r\n                callbackContext : that\r\n            });\r\n\r\n            that.get(\"underlineViews\").push(underlineView);\r\n        });\r\n    },\r\n\r\n    resetUnderlines : function (viewportElement, offsetTop, offsetLeft) {\r\n\r\n        if (offsetTop) {\r\n            this.set({ offsetTopAddition : offsetTop });\r\n        }\r\n        if (offsetLeft) {\r\n            this.set({ offsetLeftAddition : offsetLeft });\r\n        }\r\n\r\n        this.destroyCurrentUnderlines();\r\n        this.constructUnderlineViews();\r\n        this.renderUnderlines(viewportElement);\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Ensure that event listeners are being properly cleaned up. \r\n    destroyCurrentUnderlines : function () { \r\n\r\n        _.each(this.get(\"underlineViews\"), function (underlineView) {\r\n            underlineView.remove();\r\n            underlineView.off();\r\n        });\r\n\r\n        this.get(\"underlineViews\").length = 0;\r\n    },\r\n\r\n    renderUnderlines : function (viewportElement) {\r\n\r\n        _.each(this.get(\"underlineViews\"), function (view, index) {\r\n            $(viewportElement).append(view.render());\r\n        });\r\n    },\r\n\r\n    toInfo : function () {\r\n\r\n        return {\r\n\r\n            id : this.get(\"id\"),\r\n            type : \"underline\",\r\n            CFI : this.get(\"CFI\")\r\n        };\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n        \r\n        var underlineViews = this.get('underlineViews');\r\n\r\n        this.set({styles : styles});\r\n\r\n        _.each(underlineViews, function(view, index) {\r\n            view.setStyles(styles);\r\n        });\r\n    },\r\n});\r\n\r\n    EpubAnnotations.Bookmark = Backbone.Model.extend({\r\n\r\n    defaults : {\r\n        \"isVisible\" : false,\r\n        \"bookmarkCenteringAdjustment\" : 15,\r\n        \"bookmarkTopAdjustment\" : 45\r\n    },\r\n\r\n    initialize : function (attributes, options) {\r\n\r\n        // Figure out the top and left of the bookmark\r\n        // This should include the additional offset provided by the annotations object\r\n    },\r\n\r\n    getAbsoluteTop : function () {\r\n\r\n        var targetElementTop = $(this.get(\"targetElement\")).offset().top;\r\n        var bookmarkAbsoluteTop = this.get(\"offsetTopAddition\") + targetElementTop - this.get(\"bookmarkTopAdjustment\");\r\n        return bookmarkAbsoluteTop;\r\n    },\r\n\r\n    getAbsoluteLeft : function () {\r\n\r\n        var targetElementLeft = $(this.get(\"targetElement\")).offset().left;\r\n        var bookmarkAbsoluteLeft = this.get(\"offsetLeftAddition\") + targetElementLeft - this.get(\"bookmarkCenteringAdjustment\");\r\n        return bookmarkAbsoluteLeft;\r\n    },\r\n\r\n    toInfo : function () {\r\n\r\n        return {\r\n\r\n            id : this.get(\"id\"),\r\n            type : \"bookmark\",\r\n            CFI : this.get(\"CFI\")\r\n        };\r\n    }\r\n});\r\n    EpubAnnotations.ReflowableAnnotations = Backbone.Model.extend({\r\n\r\n    initialize : function (attributes, options) {\r\n        \r\n        this.epubCFI = EPUBcfi;\r\n        this.annotations = new EpubAnnotations.Annotations({\r\n            offsetTopAddition : 0, \r\n            offsetLeftAddition : 0, \r\n            readerBoundElement : $(\"html\", this.get(\"contentDocumentDOM\"))[0],\r\n            scale: 0,\r\n            bbPageSetView : this.get(\"bbPageSetView\")\r\n        });\r\n        // inject annotation CSS into iframe \r\n\r\n        \r\n        var annotationCSSUrl = this.get(\"annotationCSSUrl\");\r\n        if (annotationCSSUrl)\r\n        {\r\n            this.injectAnnotationCSS(annotationCSSUrl);\r\n        }\r\n\r\n        // emit an event when user selects some text.\r\n        var epubWindow = $(this.get(\"contentDocumentDOM\"));\r\n        var self = this;\r\n        epubWindow.on(\"mouseup\", function(event) {\r\n            var range = self.getCurrentSelectionRange();\r\n            if (range === undefined) {\r\n                return;\r\n            }\r\n            if (range.startOffset - range.endOffset) {\r\n                self.annotations.get(\"bbPageSetView\").trigger(\"textSelectionEvent\", event);\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n\r\n    // ------------------------------------------------------------------------------------ //\r\n    //  \"PUBLIC\" METHODS (THE API)                                                          //\r\n    // ------------------------------------------------------------------------------------ //\r\n\r\n    redraw : function () {\r\n\r\n        var leftAddition = -this.getPaginationLeftOffset();\r\n        this.annotations.redrawAnnotations(0, leftAddition);\r\n    },\r\n\r\n   removeHighlight: function(annotationId) {\r\n        return this.annotations.removeHighlight(annotationId)\r\n    },\r\n\r\n\r\n\r\n    addHighlight : function (CFI, id, type, styles) {\r\n\r\n        var CFIRangeInfo;\r\n        var range;\r\n        var rangeStartNode;\r\n        var rangeEndNode;\r\n        var selectedElements;\r\n        var leftAddition;\r\n        var startMarkerHtml = this.getRangeStartMarker(CFI, id);\r\n        var endMarkerHtml = this.getRangeEndMarker(CFI, id);\r\n\r\n        // TODO webkit specific?\r\n        var $html = $(this.get(\"contentDocumentDOM\"));\r\n        var matrix = $('html', $html).css('-webkit-transform');\r\n        var scale = new WebKitCSSMatrix(matrix).a;\r\n        this.set(\"scale\", scale);\r\n\r\n        try {\r\n            CFIRangeInfo = this.epubCFI.injectRangeElements(\r\n                CFI,\r\n                this.get(\"contentDocumentDOM\"),\r\n                startMarkerHtml,\r\n                endMarkerHtml,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n                );\r\n\r\n            // Get start and end marker for the id, using injected into elements\r\n            // REFACTORING CANDIDATE: Abstract range creation to account for no previous/next sibling, for different types of\r\n            //   sibiling, etc. \r\n            rangeStartNode = CFIRangeInfo.startElement.nextSibling ? CFIRangeInfo.startElement.nextSibling : CFIRangeInfo.startElement;\r\n            rangeEndNode = CFIRangeInfo.endElement.previousSibling ? CFIRangeInfo.endElement.previousSibling : CFIRangeInfo.endElement;\r\n            range = document.createRange();\r\n            range.setStart(rangeStartNode, 0);\r\n            range.setEnd(rangeEndNode, rangeEndNode.length);\r\n\r\n            selectionInfo = this.getSelectionInfo(range);\r\n            leftAddition = -this.getPaginationLeftOffset();\r\n\r\n            if (type === \"highlight\") {\r\n                this.annotations.set('scale', this.get('scale'));\r\n                this.annotations.addHighlight(CFI, selectionInfo.selectedElements, id, 0, leftAddition, CFIRangeInfo.startElement, CFIRangeInfo.endElement, styles);\r\n            }\r\n            else if (type === \"underline\") {\r\n                this.annotations.addUnderline(CFI, selectionInfo.selectedElements, id, 0, leftAddition, styles);\r\n            }\r\n\r\n            return {\r\n                CFI : CFI, \r\n                selectedElements : selectionInfo.selectedElements\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n\r\n    addBookmark : function (CFI, id, type) {\r\n\r\n        var selectedElements;\r\n        var bookmarkMarkerHtml = this.getBookmarkMarker(CFI, id);\r\n        var $injectedElement;\r\n        var leftAddition;\r\n\r\n        try {\r\n            $injectedElement = this.epubCFI.injectElement(\r\n                CFI,\r\n                this.get(\"contentDocumentDOM\"),\r\n                bookmarkMarkerHtml,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n\r\n            // Add bookmark annotation here\r\n            leftAddition = -this.getPaginationLeftOffset();\r\n            this.annotations.addBookmark(CFI, $injectedElement[0], id, 0, leftAddition, type);\r\n\r\n            return {\r\n\r\n                CFI : CFI, \r\n                selectedElements : $injectedElement[0]\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n\r\n    addImageAnnotation : function (CFI, id) {\r\n\r\n        var selectedElements;\r\n        var bookmarkMarkerHtml = this.getBookmarkMarker(CFI, id);\r\n        var $targetImage;\r\n\r\n        try {\r\n            $targetImage = this.epubCFI.getTargetElement(\r\n                CFI,\r\n                this.get(\"contentDocumentDOM\"),\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n            this.annotations.addImageAnnotation(CFI, $targetImage[0], id);\r\n\r\n            return {\r\n\r\n                CFI : CFI, \r\n                selectedElements : $targetImage[0]\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n\r\n    // this returns a partial CFI only!!\r\n    getCurrentSelectionCFI: function() {\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var CFI;\r\n        if (currentSelection) {\r\n            selectionInfo = this.getSelectionInfo(currentSelection);\r\n            CFI = selectionInfo.CFI;\r\n        }\r\n\r\n        return CFI;\r\n    },\r\n\r\n    // this returns a partial CFI only!!\r\n    getCurrentSelectionOffsetCFI: function() {\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n\r\n        var CFI;\r\n        if (currentSelection) {\r\n            CFI = this.generateCharOffsetCFI(currentSelection);\r\n        }\r\n        return CFI;\r\n    },\r\n\r\n\r\n    /// TODODM refactor thhis using getCurrentSelectionCFI (above)\r\n\r\n\r\n    addSelectionHighlight : function (id, type, styles) {\r\n\r\n        var arbitraryPackageDocCFI = \"/99!\"\r\n        var generatedContentDocCFI;\r\n        var CFI;\r\n        var selectionInfo;\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var annotationInfo;\r\n\r\n        if (currentSelection) {\r\n\r\n            selectionInfo = this.getSelectionInfo(currentSelection);\r\n            generatedContentDocCFI = selectionInfo.CFI;\r\n            CFI = \"epubcfi(\" + arbitraryPackageDocCFI + generatedContentDocCFI + \")\";\r\n            if (type === \"highlight\") {\r\n                annotationInfo = this.addHighlight(CFI, id, type, styles);\r\n            }\r\n            else if (type === \"underline\") {\r\n                annotationInfo = this.addHighlight(CFI, id, type, styles);\r\n            }\r\n\r\n            // Rationale: The annotationInfo object returned from .addBookmark(...) contains the same value of \r\n            //   the CFI variable in the current scope. Since this CFI variable contains a \"hacked\" CFI value -\r\n            //   only the content document portion is valid - we want to replace the annotationInfo.CFI property with\r\n            //   the partial content document CFI portion we originally generated.\r\n            annotationInfo.CFI = generatedContentDocCFI;            \r\n            return annotationInfo;\r\n        }\r\n        else {\r\n            throw new Error(\"Nothing selected\");\r\n        }\r\n    },\r\n\r\n    addSelectionBookmark : function (id, type) {\r\n\r\n        var arbitraryPackageDocCFI = \"/99!\"\r\n        var generatedContentDocCFI;\r\n        var CFI;\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var annotationInfo;\r\n\r\n        if (currentSelection) {\r\n\r\n            generatedContentDocCFI = this.generateCharOffsetCFI(currentSelection);\r\n            CFI = \"epubcfi(\" + arbitraryPackageDocCFI + generatedContentDocCFI + \")\";\r\n            annotationInfo = this.addBookmark(CFI, id, type);\r\n\r\n            // Rationale: The annotationInfo object returned from .addBookmark(...) contains the same value of \r\n            //   the CFI variable in the current scope. Since this CFI variable contains a \"hacked\" CFI value -\r\n            //   only the content document portion is valid - we want to replace the annotationInfo.CFI property with\r\n            //   the partial content document CFI portion we originally generated.\r\n            annotationInfo.CFI = generatedContentDocCFI;\r\n            return annotationInfo;\r\n        }\r\n        else {\r\n            throw new Error(\"Nothing selected\");\r\n        }\r\n    },\r\n\r\n    addSelectionImageAnnotation : function (id) {\r\n\r\n        var arbitraryPackageDocCFI = \"/99!\"\r\n        var generatedContentDocCFI;\r\n        var CFI;\r\n        var selectionInfo;\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var annotationInfo;\r\n        var firstSelectedImage;\r\n\r\n        if (currentSelection) {\r\n\r\n            selectionInfo = this.getSelectionInfo(currentSelection, [\"img\"]);\r\n            firstSelectedImage = selectionInfo.selectedElements[0];\r\n            generatedContentDocCFI = this.epubCFI.generateElementCFIComponent(\r\n                firstSelectedImage,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n            CFI = \"epubcfi(\" + arbitraryPackageDocCFI + generatedContentDocCFI + \")\";\r\n            annotationInfo = this.addImageAnnotation(CFI, id);\r\n\r\n            // Rationale: The annotationInfo object returned from .addBookmark(...) contains the same value of \r\n            //   the CFI variable in the current scope. Since this CFI variable contains a \"hacked\" CFI value -\r\n            //   only the content document portion is valid - we want to replace the annotationInfo.CFI property with\r\n            //   the partial content document CFI portion we originally generated.\r\n            annotationInfo.CFI = generatedContentDocCFI;\r\n            return annotationInfo;\r\n        }\r\n        else {\r\n            throw new Error(\"Nothing selected\");\r\n        }\r\n    },\r\n\r\n    updateAnnotationView : function (id, styles) {\r\n\r\n        var annotationViews = this.annotations.updateAnnotationView(id, styles);\r\n\r\n        return annotationViews;\r\n    },\r\n\r\n    // ------------------------------------------------------------------------------------ //\r\n    //  \"PRIVATE\" HELPERS                                                                   //\r\n    // ------------------------------------------------------------------------------------ //\r\n\r\n    getSelectionInfo : function (selectedRange, elementType) {\r\n\r\n        // Generate CFI for selected text\r\n        var CFI = this.generateRangeCFI(selectedRange);\r\n        var intervalState = {\r\n            startElementFound : false,\r\n            endElementFound : false\r\n        };\r\n        var selectedElements = [];\r\n\r\n        if (!elementType) {\r\n            var elementType = [\"text\"];\r\n        }\r\n\r\n        this.findSelectedElements(\r\n            selectedRange.commonAncestorContainer, \r\n            selectedRange.startContainer, \r\n            selectedRange.endContainer,\r\n            intervalState,\r\n            selectedElements, \r\n            elementType\r\n        );\r\n\r\n        // Return a list of selected text nodes and the CFI\r\n        return {\r\n            CFI : CFI,\r\n            selectedElements : selectedElements\r\n        };\r\n    },\r\n\r\n    generateRangeCFI : function (selectedRange) {\r\n\r\n        var startNode = selectedRange.startContainer;\r\n        var endNode = selectedRange.endContainer;\r\n        var startOffset;\r\n        var endOffset;\r\n        var rangeCFIComponent;\r\n\r\n        if (startNode.nodeType === Node.TEXT_NODE && endNode.nodeType === Node.TEXT_NODE) {\r\n\r\n            startOffset = selectedRange.startOffset;\r\n            endOffset = selectedRange.endOffset;\r\n\r\n            rangeCFIComponent = this.epubCFI.generateCharOffsetRangeComponent(\r\n                startNode, \r\n                startOffset, \r\n                endNode, \r\n                endOffset,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n                );\r\n            return rangeCFIComponent;\r\n        }\r\n        else {\r\n            throw new Error(\"Selection start and end must be text nodes\");\r\n        }\r\n    },\r\n\r\n    generateCharOffsetCFI : function (selectedRange) {\r\n\r\n        // Character offset\r\n        var startNode = selectedRange.startContainer;\r\n        var startOffset = selectedRange.startOffset;\r\n        var charOffsetCFI;\r\n\r\n        if (startNode.nodeType === Node.TEXT_NODE) {\r\n            charOffsetCFI = this.epubCFI.generateCharacterOffsetCFIComponent(\r\n                startNode,\r\n                startOffset,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n        }\r\n        return charOffsetCFI;\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Convert this to jquery\r\n    findSelectedElements : function (currElement, startElement, endElement, intervalState, selectedElements, elementTypes) {\r\n\r\n        if (currElement === startElement) {\r\n            intervalState.startElementFound = true;\r\n        }\r\n\r\n        if (intervalState.startElementFound === true) {\r\n            this.addElement(currElement, selectedElements, elementTypes);\r\n        }\r\n\r\n        if (currElement === endElement) {\r\n            intervalState.endElementFound = true;\r\n            return;\r\n        }\r\n\r\n        if (currElement.firstChild) {\r\n            this.findSelectedElements(currElement.firstChild, startElement, endElement, intervalState, selectedElements, elementTypes);\r\n            if (intervalState.endElementFound) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (currElement.nextSibling) {\r\n            this.findSelectedElements(currElement.nextSibling, startElement, endElement, intervalState, selectedElements, elementTypes);\r\n            if (intervalState.endElementFound) {\r\n                return;\r\n            }\r\n        }\r\n    },\r\n\r\n    addElement : function (currElement, selectedElements, elementTypes) {\r\n\r\n        // Check if the node is one of the types\r\n        _.each(elementTypes, function (elementType) {\r\n\r\n            if (elementType === \"text\") {\r\n                if (currElement.nodeType === Node.TEXT_NODE) {\r\n                    selectedElements.push(currElement);\r\n                }\r\n            }\r\n            else {\r\n                if ($(currElement).is(elementType)) {\r\n                    selectedElements.push(currElement);    \r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    // Rationale: This is a cross-browser method to get the currently selected text\r\n    getCurrentSelectionRange : function () {\r\n\r\n        var currentSelection;\r\n        var iframeDocument = this.get(\"contentDocumentDOM\");\r\n        if (iframeDocument.getSelection) {\r\n            currentSelection = iframeDocument.getSelection();\r\n\r\n            if (currentSelection && currentSelection.rangeCount && (currentSelection.anchorOffset !== currentSelection.focusOffset)) {\r\n                return currentSelection.getRangeAt(0);\r\n            }else{\r\n                return undefined;\r\n            }\r\n        }\r\n        else if (iframeDocument.selection) {\r\n            return iframeDocument.selection.createRange();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getPaginationLeftOffset : function () {\r\n\r\n        var $htmlElement = $(\"html\", this.get(\"contentDocumentDOM\"));\r\n        var offsetLeftPixels = $htmlElement.css(\"left\");\r\n        var offsetLeft = parseInt(offsetLeftPixels.replace(\"px\", \"\"));\r\n        return offsetLeft;\r\n    },\r\n\r\n    getBookmarkMarker : function (CFI, id) {\r\n\r\n        return \"<span class='bookmark-marker cfi-marker' id='\" + id + \"' data-cfi='\" + CFI + \"'></span>\";\r\n    },\r\n\r\n    getRangeStartMarker : function (CFI, id) {\r\n\r\n        return \"<span class='range-start-marker cfi-marker' id='start-\" + id + \"' data-cfi='\" + CFI + \"'></span>\";\r\n    },\r\n\r\n    getRangeEndMarker : function (CFI, id) {\r\n\r\n        return \"<span class='range-end-marker cfi-marker' id='end-\" + id + \"' data-cfi='\" + CFI + \"'></span>\";\r\n    },\r\n\r\n    injectAnnotationCSS : function (annotationCSSUrl) {\r\n\r\n        var $contentDocHead = $(\"head\", this.get(\"contentDocumentDOM\"));\r\n        $contentDocHead.append(\r\n            $(\"<link/>\", { rel : \"stylesheet\", href : annotationCSSUrl, type : \"text/css\" })\r\n        );\r\n    }\r\n});\r\n\r\n    EpubAnnotations.Annotations = Backbone.Model.extend({\r\n\r\n    defaults : function () {\r\n        return {\r\n            \"bookmarkViews\" : [],\r\n            \"highlights\" : [],\r\n            \"markers\"    : {},\r\n            \"underlines\" : [],\r\n            \"imageAnnotations\" : [],\r\n            \"annotationHash\" : {},\r\n            \"offsetTopAddition\" : 0,\r\n            \"offsetLeftAddition\" : 0,\r\n            \"readerBoundElement\" : undefined\r\n        };\r\n    },\r\n\r\n    initialize : function (attributes, options) {},\r\n\r\n\r\n    remove: function() {\r\n        var that = this;\r\n        _.each(this.get(\"highlights\"), function (highlightGroup) {\r\n            highlightGroup.remove();\r\n        });\r\n    },\r\n\r\n    redrawAnnotations : function (offsetTop, offsetLeft) {\r\n\r\n        var that = this;\r\n        // Highlights\r\n        _.each(this.get(\"highlights\"), function (highlightGroup) {\r\n            highlightGroup.resetHighlights(that.get(\"readerBoundElement\"), offsetTop, offsetLeft);\r\n        });\r\n\r\n        // Bookmarks\r\n        _.each(this.get(\"bookmarkViews\"), function (bookmarkView) {\r\n            bookmarkView.resetBookmark(offsetTop, offsetLeft);\r\n        });\r\n\r\n        // Underlines\r\n        _.each(this.get(\"underlines\"), function (underlineGroup) {\r\n            underlineGroup.resetUnderlines(that.get(\"readerBoundElement\"), offsetTop, offsetLeft);\r\n        });\r\n    },\r\n\r\n    getBookmark : function (id) {\r\n\r\n        var bookmarkView = this.get(\"annotationHash\")[id];\r\n        if (bookmarkView) {\r\n            return bookmarkView.bookmark.toInfo();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getHighlight : function (id) {\r\n\r\n        var highlight = this.get(\"annotationHash\")[id];\r\n        if (highlight) {\r\n            return highlight.toInfo();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getUnderline : function (id) {\r\n\r\n        var underline = this.get(\"annotationHash\")[id];\r\n        if (underline) {\r\n            return underline.toInfo();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getBookmarks : function () {\r\n\r\n        var bookmarks = [];\r\n        _.each(this.get(\"bookmarkViews\"), function (bookmarkView) {\r\n\r\n            bookmarks.push(bookmarkView.bookmark.toInfo());\r\n        });\r\n        return bookmarks;\r\n    },\r\n\r\n    getHighlights : function () {\r\n\r\n        var highlights = [];\r\n        _.each(this.get(\"highlights\"), function (highlight) {\r\n\r\n            highlights.push(highlight.toInfo());\r\n        });\r\n        return highlights;\r\n    },\r\n\r\n    getUnderlines : function () {\r\n\r\n        var underlines = [];\r\n        _.each(this.get(\"underlines\"), function (underline) {\r\n\r\n            underlines.push(underline.toInfo());\r\n        });\r\n        return underlines;\r\n    },\r\n\r\n    getImageAnnotations : function () {\r\n\r\n        var imageAnnotations = [];\r\n        _.each(this.get(\"imageAnnotations\"), function (imageAnnotation) {\r\n\r\n            imageAnnotations.push(imageAnnotation.toInfo());\r\n        });\r\n        return imageAnnotations;\r\n    },\r\n\r\n    addBookmark : function (CFI, targetElement, annotationId, offsetTop, offsetLeft, type) {\r\n\r\n        if (!offsetTop) {\r\n            offsetTop = this.get(\"offsetTopAddition\");\r\n        }\r\n        if (!offsetLeft) {\r\n            offsetLeft = this.get(\"offsetLeftAddition\");\r\n        }\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var bookmarkView = new EpubAnnotations.BookmarkView({\r\n            CFI : CFI,\r\n            targetElement : targetElement, \r\n            offsetTopAddition : offsetTop,\r\n            offsetLeftAddition : offsetLeft,\r\n            id : annotationId.toString(),\r\n            bbPageSetView : this.get(\"bbPageSetView\"),\r\n            type : type\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = bookmarkView;\r\n        this.get(\"bookmarkViews\").push(bookmarkView);\r\n        $(this.get(\"readerBoundElement\")).append(bookmarkView.render());\r\n    },\r\n\r\n    removeHighlight: function(annotationId) {\r\n        var annotationHash = this.get(\"annotationHash\");\r\n        var highlights = this.get(\"highlights\");\r\n        var markers = this.get(\"markers\");\r\n\r\n        if (!markers[annotationId])\r\n            return;\r\n\r\n        var startMarker =  markers[annotationId].startMarker;\r\n        var endMarker = markers[annotationId].endMarker;\r\n\r\n        startMarker.parentNode.removeChild(startMarker);\r\n        endMarker.parentNode.removeChild(endMarker);\r\n\r\n        delete markers[annotationId];\r\n\r\n        delete annotationHash[annotationId];\r\n\r\n        highlights = _.reject(highlights, \r\n                              function(obj) { \r\n                                  if (obj.id == annotationId) {\r\n                                      obj.destroyCurrentHighlights();\r\n                                      return true;\r\n                                  } else {\r\n                                      return false;\r\n                                  }\r\n                              }\r\n                             );\r\n\r\n\r\n                             this.set(\"highlights\", highlights);\r\n    },\r\n\r\n    addHighlight : function (CFI, highlightedTextNodes, annotationId, offsetTop, offsetLeft, startMarker, endMarker, styles) {\r\n        if (!offsetTop) {\r\n            offsetTop = this.get(\"offsetTopAddition\");\r\n        }\r\n        if (!offsetLeft) {\r\n            offsetLeft = this.get(\"offsetLeftAddition\");\r\n        }\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var highlightGroup = new EpubAnnotations.HighlightGroup({\r\n            CFI : CFI,\r\n            selectedNodes : highlightedTextNodes,\r\n            offsetTopAddition : offsetTop,\r\n            offsetLeftAddition : offsetLeft,\r\n            styles: styles, \r\n            id : annotationId,\r\n            bbPageSetView : this.get(\"bbPageSetView\"),\r\n            scale: this.get(\"scale\")\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = highlightGroup;\r\n        this.get(\"highlights\").push(highlightGroup);\r\n        this.get(\"markers\")[annotationId] = {\"startMarker\": startMarker, \"endMarker\":endMarker};\r\n        highlightGroup.renderHighlights(this.get(\"readerBoundElement\"));\r\n    },\r\n\r\n    addUnderline : function (CFI, underlinedTextNodes, annotationId, offsetTop, offsetLeft, styles) {\r\n\r\n        if (!offsetTop) {\r\n            offsetTop = this.get(\"offsetTopAddition\");\r\n        }\r\n        if (!offsetLeft) {\r\n            offsetLeft = this.get(\"offsetLeftAddition\");\r\n        }\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var underlineGroup = new EpubAnnotations.UnderlineGroup({\r\n            CFI : CFI,\r\n            selectedNodes : underlinedTextNodes,\r\n            offsetTopAddition : offsetTop,\r\n            offsetLeftAddition : offsetLeft,\r\n            styles: styles,\r\n            id : annotationId,\r\n            bbPageSetView : this.get(\"bbPageSetView\")\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = underlineGroup;\r\n        this.get(\"underlines\").push(underlineGroup);\r\n        underlineGroup.renderUnderlines(this.get(\"readerBoundElement\"));\r\n    },\r\n\r\n    addImageAnnotation : function (CFI, imageNode, annotationId) {\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var imageAnnotation = new EpubAnnotations.ImageAnnotation({\r\n            CFI : CFI,\r\n            imageNode : imageNode,\r\n            id : annotationId,\r\n            bbPageSetView : this.get(\"bbPageSetView\")\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = imageAnnotation;\r\n        this.get(\"imageAnnotations\").push(imageAnnotation);\r\n        imageAnnotation.render();\r\n    },\r\n\r\n    updateAnnotationView : function (id, styles) {\r\n        var annotationViews = this.get(\"annotationHash\")[id];\r\n\r\n        annotationViews.setStyles(styles);\r\n\r\n        return annotationViews;\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Some kind of hash lookup would be more efficient here, might want to \r\n    //   change the implementation of the annotations as an array\r\n    validateAnnotationId : function (id) {\r\n\r\n        if (this.get(\"annotationHash\")[id]) {\r\n            throw new Error(\"That annotation id already exists; annotation not added\");\r\n        }\r\n    }\r\n});\r\n\r\n    EpubAnnotations.BookmarkView = Backbone.View.extend({\r\n\r\n    el : \"<div></div>\",\r\n\r\n    events : {\r\n        \"mouseenter\" : \"setHoverBookmark\",\r\n        \"mouseleave\" : \"setBaseBookmark\",\r\n        \"click\" : \"clickHandler\"\r\n    },\r\n\r\n    initialize : function (options) {\r\n\r\n        this.bookmark = new EpubAnnotations.Bookmark({\r\n            CFI : options.CFI,\r\n            targetElement : options.targetElement, \r\n            offsetTopAddition : options.offsetTopAddition,\r\n            offsetLeftAddition : options.offsetLeftAddition,\r\n            id : options.id,\r\n            bbPageSetView : options.bbPageSetView,\r\n            type : options.type\r\n        });\r\n    },\r\n\r\n    resetBookmark : function (offsetTop, offsetLeft) {\r\n\r\n        if (offsetTop) {\r\n            this.bookmark.set({ offsetTopAddition : offsetTop });\r\n        }\r\n\r\n        if (offsetLeft) {\r\n            this.bookmark.set({ offsetLeftAddition : offsetLeft });\r\n        }\r\n        this.setCSS();\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n        return this.el;\r\n    },\r\n\r\n    setCSS : function () {\r\n\r\n        var absoluteTop;\r\n        var absoluteLeft;\r\n\r\n        if (this.bookmark.get(\"type\") === \"comment\") {\r\n            absoluteTop = this.bookmark.getAbsoluteTop();\r\n            absoluteLeft = this.bookmark.getAbsoluteLeft();\r\n            this.$el.css({ \r\n                \"top\" : absoluteTop + \"px\",\r\n                \"left\" : absoluteLeft + \"px\",\r\n                \"width\" : \"50px\",\r\n                \"height\" : \"50px\",\r\n                \"position\" : \"absolute\"\r\n            });\r\n            this.$el.addClass(\"comment\");\r\n        }\r\n        else {\r\n            this.$el.addClass(\"bookmark\");\r\n        }\r\n    },\r\n\r\n    setHoverBookmark : function (event) {\r\n\r\n        event.stopPropagation();\r\n        if (this.$el.hasClass(\"comment\")) {\r\n            this.$el.removeClass(\"comment\");\r\n            this.$el.addClass(\"hover-comment\");\r\n        }\r\n    },\r\n\r\n    setBaseBookmark : function (event) {\r\n\r\n        event.stopPropagation();\r\n        if (this.$el.hasClass(\"hover-comment\")) {\r\n            this.$el.removeClass(\"hover-comment\");\r\n            this.$el.addClass(\"comment\");\r\n        }\r\n    },\r\n\r\n    clickHandler : function (event) {\r\n\r\n        event.stopPropagation();\r\n        var type;\r\n        if (this.bookmark.get(\"type\") === \"comment\") {\r\n            type = \"comment\";\r\n        }\r\n        else {\r\n            type = \"bookmark\";\r\n        }\r\n\r\n        this.bookmark.get(\"bbPageSetView\").trigger(\"annotationClicked\", \r\n            type, \r\n            this.bookmark.get(\"CFI\"), \r\n            this.bookmark.get(\"id\"),\r\n            this.$el.css(\"top\"),\r\n            this.$el.css(\"left\"),\r\n            event\r\n        );\r\n    }\r\n});\r\n\r\n    EpubAnnotations.HighlightView = Backbone.View.extend({\r\n\r\n    el : \"<div class='highlight'></div>\",\r\n\r\n    events : {\r\n        \"mouseenter\" : \"highlightEvent\",\r\n        \"mouseleave\" : \"highlightEvent\",\r\n        \"click\" : \"highlightEvent\",\r\n        \"contextmenu\" : \"highlightEvent\"\r\n    },\r\n\r\n    initialize : function (options) {\r\n\r\n        this.highlight = new EpubAnnotations.Highlight({\r\n            CFI : options.CFI,\r\n            top : options.top,\r\n            left : options.left,\r\n            height : options.height,\r\n            width : options.width,\r\n            styles: options.styles,\r\n            highlightGroupCallback : options.highlightGroupCallback,\r\n            callbackContext : options.callbackContext\r\n        });\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n        return this.el;\r\n    },\r\n\r\n    resetPosition : function (top, left, height, width) {\r\n\r\n        this.highlight.set({\r\n            top : top,\r\n            left : left,\r\n            height : height,\r\n            width : width\r\n        });\r\n        this.setCSS();\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n\r\n        this.highlight.set({\r\n            styles : styles,\r\n        });\r\n        this.render();\r\n    },\r\n\r\n    setCSS : function () {\r\n\r\n        var styles = this.highlight.get(\"styles\") || {};\r\n        \r\n        this.$el.css({ \r\n            \"top\" : this.highlight.get(\"top\") + \"px\",\r\n            \"left\" : this.highlight.get(\"left\") + \"px\",\r\n            \"height\" : this.highlight.get(\"height\") + \"px\",\r\n            \"width\" : this.highlight.get(\"width\") + \"px\",\r\n            \"background-color\" : styles.fill_color || \"normal\",\r\n        });\r\n    },\r\n\r\n    setBaseHighlight : function () {\r\n\r\n        this.$el.addClass(\"highlight\");\r\n        this.$el.removeClass(\"hover-highlight\");\r\n    },\r\n\r\n    setHoverHighlight : function () {\r\n\r\n        this.$el.addClass(\"hover-highlight\");\r\n        this.$el.removeClass(\"highlight\");\r\n    },\r\n\r\n    highlightEvent : function (event) {\r\n\r\n        event.stopPropagation();\r\n        var highlightGroupCallback = this.highlight.get(\"highlightGroupCallback\");\r\n        var highlightGroupContext = this.highlight.get(\"callbackContext\");\r\n        highlightGroupContext.highlightGroupCallback(event);\r\n    }\r\n});\r\n\r\n    EpubAnnotations.UnderlineView = Backbone.View.extend({\r\n\r\n    el : \"<div class='underline-range'> \\\r\n             <div class='transparent-part'></div> \\\r\n             <div class='underline-part'></div> \\\r\n          </div>\",\r\n\r\n    events : {\r\n        \"mouseenter\" : \"underlineEvent\",\r\n        \"mouseleave\" : \"underlineEvent\",\r\n        \"click\" : \"underlineEvent\"\r\n    },\r\n\r\n    initialize : function (options) {\r\n\r\n        this.underline = new EpubAnnotations.Underline({\r\n            CFI : options.CFI,\r\n            top : options.top,\r\n            left : options.left,\r\n            height : options.height,\r\n            width : options.width,\r\n            styles : options.styles,\r\n            underlineGroupCallback : options.underlineGroupCallback,\r\n            callbackContext : options.callbackContext\r\n        });\r\n\r\n        this.$transparentElement = $(\".transparent-part\", this.$el);\r\n        this.$underlineElement = $(\".underline-part\", this.$el);\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n        return this.el;\r\n    },\r\n\r\n    resetPosition : function (top, left, height, width) {\r\n\r\n        this.underline.set({\r\n            top : top,\r\n            left : left,\r\n            height : height,\r\n            width : width\r\n        });\r\n        this.setCSS();\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n\r\n        this.underline.set({\r\n            styles : styles,\r\n        });\r\n        this.render();\r\n    },\r\n\r\n    setCSS : function () {\r\n        var styles = this.underline.get(\"styles\") || {};\r\n        \r\n        this.$el.css({ \r\n            \"top\" : this.underline.get(\"top\") + \"px\",\r\n            \"left\" : this.underline.get(\"left\") + \"px\",\r\n            \"height\" : this.underline.get(\"height\") + \"px\",\r\n            \"width\" : this.underline.get(\"width\") + \"px\",\r\n        });\r\n\r\n        // Underline part\r\n        this.$underlineElement.css({\r\n            \"background-color\" : styles.fill_color || \"normal\",\r\n        });\r\n\r\n        \r\n        this.$underlineElement.addClass(\"underline\");\r\n    },\r\n\r\n    underlineEvent : function (event) {\r\n\r\n        event.stopPropagation();\r\n        var underlineGroupCallback = this.underline.get(\"underlineGroupCallback\");\r\n        var underlineGroupContext = this.underline.get(\"callbackContext\");\r\n        underlineGroupContext.underlineGroupCallback(event);\r\n    },\r\n\r\n    setBaseUnderline : function () {\r\n\r\n        this.$underlineElement.addClass(\"underline\");\r\n        this.$underlineElement.removeClass(\"hover-underline\");\r\n    },\r\n\r\n    setHoverUnderline : function () {\r\n\r\n        this.$underlineElement.addClass(\"hover-underline\");\r\n        this.$underlineElement.removeClass(\"underline\");\r\n    },\r\n});\r\n\r\n    // Rationale: An image annotation does NOT have a view, as we don't know the state of an image element within an EPUB; it's entirely\r\n//   possible that an EPUB image element could have a backbone view associated with it already, which would cause problems if we \r\n//   tried to associate another backbone view. As such, this model modifies CSS properties for an annotated image element.\r\n//   \r\n//   An image annotation view that manages an absolutely position element (similar to bookmarks, underlines and highlights) can be\r\n//   added if more functionality is required. \r\n\r\nEpubAnnotations.ImageAnnotation = Backbone.Model.extend({\r\n\r\n    initialize : function (attributes, options) {\r\n\r\n        // Set handlers here. Can use jquery handlers\r\n        var that = this;\r\n        var $imageElement = $(this.get(\"imageNode\"));\r\n        $imageElement.on(\"mouseenter\", function () {\r\n            that.setMouseenterBorder();\r\n        });\r\n        $imageElement.on(\"mouseleave\", function () {\r\n            that.setMouseleaveBorder();\r\n        });\r\n        $imageElement.on(\"click\", function () {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationClicked\", \"image\", that.get(\"CFI\"), that.get(\"id\"),event);\r\n        });\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n    },\r\n\r\n    setCSS : function () {\r\n        \r\n        $(this.get(\"imageNode\")).css({\r\n            \"border\" : \"5px solid rgb(255, 0, 0)\",\r\n            \"border\" : \"5px solid rgba(255, 0, 0, 0.2)\",\r\n            \"-webkit-background-clip\" : \"padding-box\",\r\n            \"background-clip\" : \"padding-box\"\r\n        });\r\n    },\r\n\r\n    setMouseenterBorder : function () {\r\n\r\n        $(this.get(\"imageNode\")).css({\r\n            \"border\" : \"5px solid rgba(255, 0, 0, 0.4)\"\r\n        });\r\n    },\r\n\r\n    setMouseleaveBorder : function () {\r\n\r\n        $(this.get(\"imageNode\")).css({\r\n            \"border\" : \"5px solid rgba(255, 0, 0, 0.2)\"\r\n        });\r\n    }\r\n});\r\n\r\n\r\n\r\n    var reflowableAnnotations = new EpubAnnotations.ReflowableAnnotations({\r\n        contentDocumentDOM : contentDocumentDOM, \r\n        bbPageSetView : bbPageSetView,\r\n        annotationCSSUrl : annotationCSSUrl,\r\n    });\r\n\r\n    // Description: The public interface\r\n    return {\r\n\r\n        addSelectionHighlight : function (id, type, styles) { \r\n            return reflowableAnnotations.addSelectionHighlight(id, type, styles); \r\n        },\r\n        addSelectionBookmark : function (id, type) { \r\n            return reflowableAnnotations.addSelectionBookmark(id, type); \r\n        },\r\n        addSelectionImageAnnotation : function (id) {\r\n            return reflowableAnnotations.addSelectionImageAnnotation(id);\r\n        },\r\n        addHighlight : function (CFI, id, type, styles) { \r\n            return reflowableAnnotations.addHighlight(CFI, id, type, styles); \r\n        },\r\n        addBookmark : function (CFI, id, type) { \r\n            return reflowableAnnotations.addBookmark(CFI, id, type);\r\n        },\r\n        addImageAnnotation : function (CFI, id) { \r\n            return reflowableAnnotations.addImageAnnotation(CFI, id); \r\n        },\r\n        updateAnnotationView : function (id, styles) {\r\n            return reflowableAnnotations.updateAnnotationView(id, styles);\r\n        },\r\n        redraw : function () { \r\n            return reflowableAnnotations.redraw(); \r\n        },\r\n        getBookmark : function (id) { \r\n            return reflowableAnnotations.annotations.getBookmark(id); \r\n        },\r\n        getBookmarks : function () { \r\n            return reflowableAnnotations.annotations.getBookmarks(); \r\n        }, \r\n        getHighlight : function (id) { \r\n            return reflowableAnnotations.annotations.getHighlight(id); \r\n        },\r\n        getHighlights : function () { \r\n            return reflowableAnnotations.annotations.getHighlights(); \r\n        },\r\n        getUnderline : function (id) { \r\n            return reflowableAnnotations.annotations.getUnderline(id); \r\n        },\r\n        getUnderlines : function () { \r\n            return reflowableAnnotations.annotations.getUnderlines();\r\n        },\r\n        getImageAnnotation : function () {\r\n\r\n        },\r\n        getImageAnnotations : function () {\r\n\r\n        }, \r\n        removeAnnotation: function (annotationId) {\r\n            return reflowableAnnotations.remove(annotationId);\r\n        },\r\n        getCurrentSelectionCFI: function () {\r\n            return reflowableAnnotations.getCurrentSelectionCFI();\r\n        },\r\n        getCurrentSelectionOffsetCFI: function () {\r\n            return reflowableAnnotations.getCurrentSelectionOffsetCFI();\r\n        },\r\n        removeHighlight: function (annotationId) {\r\n            return reflowableAnnotations.removeHighlight(annotationId);\r\n        }\r\n    };\r\n};\r\n\r\n    return EpubAnnotationsModule;\r\n});\n","//  Created by Dmitry Markushevich (dmitrym@evidentpoint.com)\r\n// \r\n//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.\r\n//  \r\n//  Redistribution and use in source and binary forms, with or without modification, \r\n//  are permitted provided that the following conditions are met:\r\n//  1. Redistributions of source code must retain the above copyright notice, this \r\n//  list of conditions and the following disclaimer.\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, \r\n//  this list of conditions and the following disclaimer in the documentation and/or \r\n//  other materials provided with the distribution.\r\n//  3. Neither the name of the organization nor the names of its contributors may be \r\n//  used to endorse or promote products derived from this software without specific \r\n//  prior written permission.\r\n//  \r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \r\n//  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \r\n//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. \r\n//  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, \r\n//  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, \r\n//  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, \r\n//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF \r\n//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE \r\n//  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n//  OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n/*\r\n\r\n\r\n\r\n# Highlighting in Readium - A primer\r\n\r\nPlease note:\r\n\r\n- only simple text highlighting is currently supported\r\n- it's the job of the reading system to keep track of annotations. readium-js simply displays your annotations.\r\n- full CFIs for annotations are not currently available. We use so called \"partial CFI\"s, a tuple containing idref of the spine item and the CFI definition relative to the root of the spine item.\r\n\r\nCurrently, the API exposed via `ReaderView` exposes 4 functions and 1 even which should be sufficient for a simple highlighting workflow.\r\n\r\n\r\n# API\r\n\r\nFor the purposes of the examples below, `RReader` is a previously instantiated `ReaderView` instance.\r\n\r\n\r\n## Is anything selected (getCurrentSelectionCfi())\r\n\r\nBefore proceeding with the highlighting workflow it is sometimes necessary to determine whether the user has in fact selected anything. This can be accomplished with the following:\r\n\r\n\r\n\t> RReader.getCurrentSelectionCfi()\r\n\tObject {idref: \"id-id2604743\", cfi: \"/4/2/6,/1:74,/1:129\"}\r\n\r\nThe response contains a partial CFI that is sufficient to create a highlight based on selection. If nothing is selected *undefined* is returned. \r\n\r\nYou can also use partial Cfi with `openSpineItemElementCfi()` to navigate to where this selection is later.\r\n\r\n## Highlighting (addHighlight and addSelectionHighlight)\r\n\r\nOnce we've determined what needs to be highlighted (by generating a partial CFI from a selection, or having an existing partial CFI stored externally) we can add it to the reader by calling `addHighlight()`:\r\n\r\n\t> RReader.addHighlight('id-id2604743', \"/4/2/6,/1:74,/1:129\", 123, \"highlight\")\r\n\tObject {CFI: \"/4/2/6,/1:74,/1:129\", selectedElements: Array[1], idref: \"id-id2604743\"}\r\n\r\n*addHighligh*t takes the following parameters:\r\n\r\n- *id-id2604743* - `idref` is the idref value from `getCurrentSelectionCfi()\r\n- * /4/2/6,/1:74,/1:129* - `cfi` is the cfi value from `getCurrentSelectionCfi()\r\n- *123* - `id` is the unique id that defines this annotation\r\n- *highlight* - 'type' of annotation. only 'highlight' is currently supported.\r\n\r\n### addSelectioHighlight\r\n\r\nAlternatively, you can call addSelectionHighlight(). It combines both getCurrentSelectionCfi() and addHighlight into one call:\r\n\r\n\t> RReader.addSelectionHighlight(124, \"highlight\")\r\n\tObject {CFI: \"/4/2/4,/1:437,/1:503\", selectedElements: Array[1], idref: \"id-id2604743\"}\r\n\r\nNote that it provides no validation. If nothing is selected, `undefined` is returned.\r\n\r\n\r\n## Removing highlights \r\n\r\nTo remove the highlight, call `removeHighlight`:\r\n\r\n\t> RReader.removeHighlight(123)\r\n\tundefined\r\n\r\n\r\n# Handling annotation click events\r\n\r\nWhen a user clicks on a highlight `annotationClicked` event is dispatched with the following arguments:\r\n\r\n- type of annotation\r\n- idref of the spine item\r\n- partial Cfi of the annotation\r\n- annotationdId\r\n\r\n\r\n\t> RReader.on('annotationClicked', function(type, idref, cfi, annotationId) { console.log (type, idref, cfi, annotationId)});\r\n\tViews.ReaderView {on: function, once: function, off: function, trigger: function, listenTo: function???}\r\n\t\r\nThen when the user clicks on the highlight the following will show up in the console:\r\n\r\n\thighlight id-id2604743 /4/2/6,/1:74,/1:129 123 \r\n\t\r\n\r\n*/\r\ndefine('readium_plugin_annotations/annotations_manager',['jquery', 'underscore', 'eventEmitter', './annotations_module'], function($, _, EventEmitter, EpubAnnotationsModule) {\r\n/**\r\n *\r\n * @param proxyObj\r\n * @param options\r\n * @constructor\r\n */\r\nvar AnnotationsManager = function (proxyObj, options) {\r\n\r\n    var self = this;\r\n    var liveAnnotations = {};\r\n    var spines = {};\r\n    var proxy = proxyObj; \r\n    var annotationCSSUrl = options.annotationCSSUrl;\r\n\r\n    if (!annotationCSSUrl) {\r\n        console.warn(\"WARNING! Annotations CSS not supplied. Highlighting is not going to work.\");\r\n    }\r\n\r\n    _.extend(this, new EventEmitter());\r\n\r\n    // we want to bubble up all of the events that annotations module may trigger up.\r\n    // this.on(\"all\", function() {\r\n    // });\r\n    //TODO: EventEmitter3 does not support \"all\" or \"*\" (catch-all event sink)\r\n    //https://github.com/primus/eventemitter3/blob/master/index.js#L61\r\n    //...so instead we patch trigger() and emit() (which are synonymous, see Bootstrapper.js EventEmitter.prototype.trigger = EventEmitter.prototype.emit;)\r\n        \r\n    var originalEmit = self['emit'];\r\n    \r\n    var triggerEmitPatch = function() {\r\n        var args = Array.prototype.slice.call(arguments);\r\nconsole.debug(args);\r\n\r\n        // mangle annotationClicked event. What really needs to happen is, the annotation_module needs to return a \r\n        // bare Cfi, and this class should append the idref.\r\n        var annotationClickedEvent = 'annotationClicked';\r\n        if (args.length && args[0] === annotationClickedEvent) {\r\n            for (var spineIndex in liveAnnotations)\r\n            {\r\n                var jQueryEvent = args[4];\r\n                var annotationId = args[3];\r\n                var fullFakeCfi = args[2];\r\n                var type = args[1];\r\n                if (liveAnnotations[spineIndex].getHighlight(annotationId)) {\r\n                    var idref = spines[spineIndex].idref;\r\n                    var partialCfi = getPartialCfi(fullFakeCfi);\r\n                    args = [annotationClickedEvent, type, idref, partialCfi, annotationId, jQueryEvent];\r\n                    \r\nconsole.debug(\"Corrected CFI:\");\r\nconsole.debug(args);\r\n                }\r\n            }\r\n        }\r\n        \r\n        originalEmit.apply(this, args);\r\n        originalEmit.apply(proxy, args);\r\n    };\r\n\r\n    this.trigger = triggerEmitPatch;\r\n    this.emit = triggerEmitPatch;\r\n\r\n    this.attachAnnotations = function($iframe, spineItem) {\r\n        var epubDocument = $iframe[0].contentDocument;\r\n        liveAnnotations[spineItem.index] = new EpubAnnotationsModule(epubDocument, self, annotationCSSUrl);\r\n        spines[spineItem.index] = spineItem;\r\n\r\n        // check to see which spine indecies can be culled depending on the distance from current spine item\r\n        for(var spineIndex in liveAnnotations) {\r\n            if (Math.abs(spineIndex - spineIndex.index) > 3) {\r\n                delete liveAnnotations[spineIndex];\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    this.getCurrentSelectionCfi = function() {\r\n        for(var spine in liveAnnotations) {\r\n            var annotationsForView = liveAnnotations[spine]; \r\n            var partialCfi = annotationsForView.getCurrentSelectionCFI();\r\n            if (partialCfi) {\r\n                return {\"idref\":spines[spine].idref, \"cfi\":partialCfi};\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    this.addSelectionHighlight = function(id, type) {\r\n        for(spine in liveAnnotations) {\r\n            var annotationsForView = liveAnnotations[spine]; \r\n            if (annotationsForView.getCurrentSelectionCFI()) {\r\n                var annotation = annotationsForView.addSelectionHighlight(id, type);\r\n                annotation.idref = spines[spine].idref;\r\n                return annotation;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    this.addHighlight = function(spineIdRef, partialCfi, id, type, styles) {\r\n        for(var spine in liveAnnotations) {\r\n            if (spines[spine].idref === spineIdRef) {\r\n                var fakeCfi = \"epubcfi(/99!\" + partialCfi + \")\";\r\n                var annotationsForView = liveAnnotations[spine]; \r\n                var annotation = annotationsForView.addHighlight(fakeCfi, id, type, styles);\r\n                annotation.idref = spineIdRef;\r\n                annotation.CFI = getPartialCfi(annotation.CFI);\r\n                return annotation;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    this.removeHighlight = function(id) {\r\n        var result = undefined;\r\n        for(var spine in liveAnnotations) {\r\n            var annotationsForView = liveAnnotations[spine]; \r\n            result  = annotationsForView.removeHighlight(id);\r\n        }\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    function getPartialCfi(CFI) {\r\n        var cfiWrapperPattern = new RegExp(\"^.*!\")\r\n        // remove epubcfi( and indirection step\r\n        var partiallyNakedCfi = CFI.replace(cfiWrapperPattern, \"\");\r\n        // remove last paren\r\n        var nakedCfi = partiallyNakedCfi.substring(0, partiallyNakedCfi.length -1);\r\n        return nakedCfi;\r\n    }\r\n\r\n\r\n};\r\n\r\nreturn AnnotationsManager;\r\n});\n","define('readium_plugin_annotations/main',['readium_shared_js/plugins_controller', './annotations_manager'], function (Plugins, AnnotationsManager) {\r\n    var config = {};\r\n\r\n    Plugins.register(\"annotations\", function (api) {\r\n        var _annotationsManager, _annotationsApi, _initialized = false, _initializedLate = false;\r\n\r\n        _annotationsApi = function () {\r\n            var self = this;\r\n\r\n            function isInitialized() {\r\n                if (!_initialized) {\r\n                    api.plugin.warn('Not initialized!')\r\n                }\r\n                return _initialized;\r\n            }\r\n\r\n            this.initialize = function (options) {\r\n                if (_initialized) {\r\n                    api.plugin.warn('Already initialized!');\r\n                    return;\r\n                }\r\n\r\n                _annotationsManager = new AnnotationsManager(self, options);\r\n\r\n                if (_initializedLate) {\r\n                    api.plugin.warn('Unable to attach to currently loaded content document.\\n' +\r\n                    'Initialize the plugin before loading a content document.');\r\n                }\r\n\r\n                _initialized = true;\r\n            };\r\n\r\n            /**\r\n             * Returns current selection partial Cfi, useful for workflows that need to check whether the user has selected something.\r\n             *\r\n             * @method getCurrentSelectionCfi\r\n             * @returns {object | undefined} partial cfi object or undefined if nothing is selected\r\n             *\r\n             */\r\n            this.getCurrentSelectionCfi = function () {\r\n                if (!isInitialized()) {\r\n                    return\r\n                }\r\n\r\n                return _annotationsManager.getCurrentSelectionCfi();\r\n            };\r\n\r\n            /**\r\n             * Creates a higlight based on given parameters\r\n             *\r\n             * @method addHighlight\r\n             * @param {string} spineIdRef spine idref that defines the partial Cfi\r\n             * @param {string} CFI partial CFI (withouth the indirection step) relative to the spine index\r\n             * @param {string} id id of the highlight. must be unique\r\n             * @param {string} type currently \"highlight\" only\r\n             *\r\n             * @returns {object | undefined} partial cfi object of the created highlight\r\n             *\r\n             */\r\n            this.addHighlight = function (spineIdRef, Cfi, id, type, styles) {\r\n                if (!isInitialized()) {\r\n                    return\r\n                }\r\n\r\n                return _annotationsManager.addHighlight(spineIdRef, Cfi, id, type, styles);\r\n            };\r\n\r\n\r\n            /**\r\n             * Creates a higlight based on current selection\r\n             *\r\n             * @method addSelectionHighlight\r\n             * @param {string} id id of the highlight. must be unique\r\n             * @param {string} type currently \"highlight\" only\r\n             *\r\n             * @returns {object | undefined} partial cfi object of the created highlight\r\n             *\r\n             */\r\n            this.addSelectionHighlight = function (id, type) {\r\n                if (!isInitialized()) {\r\n                    return\r\n                }\r\n\r\n                return _annotationsManager.addSelectionHighlight(id, type);\r\n            };\r\n\r\n            /**\r\n             * Removes given highlight\r\n             *\r\n             * @method removeHighlight\r\n             * @param {string} id id of the highlight.\r\n             *\r\n             * @returns {undefined}\r\n             *\r\n             */\r\n            this.removeHighlight = function (id) {\r\n                if (!isInitialized()) {\r\n                    return\r\n                }\r\n\r\n                return _annotationsManager.removeHighlight(id);\r\n            };\r\n\r\n        };\r\n\r\n\r\n        api.reader.on(ReadiumSDK.Events.CONTENT_DOCUMENT_LOADED, function ($iframe, spineItem) {\r\n            if (_initialized) {\r\n                _annotationsManager.attachAnnotations($iframe, spineItem);\r\n            } else {\r\n                _initializedLate = true;\r\n            }\r\n        });\r\n\r\n        // Extend the Reader API with the Annotations API under its own namespace\r\n        api.extendReader(new _annotationsApi());\r\n    });\r\n\r\n    return config;\r\n});\r\n\ndefine('readium_plugin_annotations', ['readium_plugin_annotations/main'], function (main) { return main; });\n\n"]}