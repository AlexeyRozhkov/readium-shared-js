{"version":3,"file":"readium-plugin-annotations.js","sources":["../../js/plugins_controller.js","backbone.js","../../plugins/annotations/annotations_module.js","../../plugins/annotations/annotations_manager.js","../../plugins/annotations/main.js"],"names":["define","$","_","EventEmitter","Globals","PluginApi","reader","plugin","this","PluginApiFactory","create","host","instance","Plugin","name","dependencies","initializer","initialized","supported","PluginsController","_initializePlugins","apiFactory","plugins","Error","each","_pluginConstructors","init","_getExceptionMessage","ex","message","description","String","register","optDependencies","initFunc","api","pluginContext","extend","call","fail","on","Events","READER_INITIALIZED","console","error","defer","emit","PLUGINS_LOADED","prototype","requiredPlugin","PluginName","requiredPluginNames","i","len","length","Plugins","reason","warn","msg","deprecationNotice","deprecated","replacement","createError","main","factory","root","self","global","amd","exports","Backbone","require","e","jQuery","Zepto","ender","previousBackbone","slice","VERSION","noConflict","emulateHTTP","emulateJSON","addMethod","method","attribute","value","iteratee","context","defaultVal","args","arguments","unshift","apply","addUnderscoreMethods","Class","methods","eventSplitter","eventsApi","memo","callback","opts","names","keys","test","split","internalOn","obj","listening","_events","onApi","ctx","listeners","_listeners","id","listenTo","_listenId","uniqueId","listeningTo","_listeningTo","thisId","objId","count","events","options","handlers","push","off","offApi","stopListening","ids","isEmpty","remaining","j","handler","_callback","size","once","onceMap","bind","listenToOnce","map","offer","trigger","Math","max","Array","triggerApi","objEvents","cb","allEvents","all","triggerEvents","concat","ev","l","a1","a2","a3","unbind","Model","attributes","attrs","cid","cidPrefix","collection","parse","defaults","result","set","changed","initialize","validationError","idAttribute","toJSON","clone","sync","get","attr","escape","has","matches","key","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","isEqual","_pending","clear","hasChanged","changedAttributes","diff","old","previous","previousAttributes","fetch","model","success","resp","serverAttrs","wrapError","save","validate","wait","isNew","patch","xhr","destroy","url","base","urlError","replace","encodeURIComponent","constructor","isValid","modelMethods","values","pairs","invert","pick","omit","chain","Collection","models","comparator","_reset","reset","setOptions","add","remove","merge","addOptions","singular","isArray","removed","_removeModels","_isModel","existing","sort","at","sortable","sortAttr","isString","toAdd","toRemove","modelMap","order","orderChanged","_prepareModel","_addReference","modelId","splice","orderedModels","addOpts","index","_removeReference","previousModels","pop","shift","_byId","where","first","findWhere","sortBy","pluck","invoke","callbackOpts","indexOf","_onModelEvent","event","prevId","collectionMethods","forEach","collect","reduce","foldl","inject","reduceRight","foldr","find","detect","filter","select","reject","every","some","any","include","contains","min","toArray","head","take","initial","rest","tail","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","attributeMethods","iterator","isFunction","View","viewOptions","_ensureElement","delegateEventSplitter","tagName","selector","$el","render","_removeElement","setElement","element","undelegateEvents","_setElement","delegateEvents","el","match","delegate","eventName","listener","undelegate","_createElement","document","createElement","className","_setAttributes","type","methodMap","params","dataType","data","contentType","JSON","stringify","_method","beforeSend","setRequestHeader","processData","textStatus","errorThrown","ajax","update","delete","read","Router","routes","_bindRoutes","optionalParam","namedParam","splatParam","escapeRegExp","route","isRegExp","_routeToRegExp","router","history","fragment","_extractParameters","execute","navigate","optional","RegExp","exec","param","decodeURIComponent","History","bindAll","window","location","routeStripper","rootStripper","pathStripper","started","interval","atRoot","path","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","src","style","display","tabIndex","body","iWindow","insertBefore","firstChild","contentWindow","open","close","hash","addEventListener","attachEvent","checkUrl","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","title","assign","_updateHash","protoProps","staticProps","child","parent","Surrogate","__super__","EpubAnnotationsModule","contentDocumentDOM","bbPageSetView","annotationCSSUrl","EpubAnnotations","TextLineInferrer","inferLines","rectList","currLine","currRect","rectAppended","inferredLines","numRects","numLines","currRectNum","currLineNum","includeRectInLine","top","left","width","height","expandLine","createNewLine","rectTop","rectLeft","rectWidth","rectHeight","rectIsWithinLineVertically","maxTop","maxBottom","rectIsWithinLineHorizontally","avgHeight","currLineMaxTop","currLineMaxBottom","rectBottom","lineHeight","lineHeightAdjustment","rectHeightAdjustment","currLineLeft","currLineWidth","currLineAvgHeight","lineGapHeuristic","rectRight","currLineRight","startTop","numRectsPlusOne","currSumHeights","expandLineVertically","expandLineHorizontally","newLineLeft","lineRight","newLineRight","newLineWidth","Highlight","isVisible","HighlightGroup","selectedNodes","highlightViews","scale","constructHighlightViews","highlightGroupCallback","that","highlightView","setHoverHighlight","setBaseHighlight","inferrer","node","rects","range","createRange","selectNodeContents","getClientRects","rect","line","highlightTop","highlightLeft","highlightHeight","highlightWidth","HighlightView","CFI","styles","callbackContext","resetHighlights","viewportElement","offsetTop","offsetLeft","offsetTopAddition","offsetLeftAddition","destroyCurrentHighlights","renderHighlights","view","append","toInfo","setStyles","Underline","UnderlineGroup","underlineViews","constructUnderlineViews","underlineGroupCallback","underlineView","setHoverUnderline","setBaseUnderline","underlineTop","underlineLeft","underlineHeight","underlineWidth","UnderlineView","resetUnderlines","destroyCurrentUnderlines","renderUnderlines","Bookmark","bookmarkCenteringAdjustment","bookmarkTopAdjustment","getAbsoluteTop","targetElementTop","offset","bookmarkAbsoluteTop","getAbsoluteLeft","targetElementLeft","bookmarkAbsoluteLeft","ReflowableAnnotations","epubCFI","EPUBcfi","annotations","Annotations","readerBoundElement","injectAnnotationCSS","epubWindow","getCurrentSelectionRange","undefined","startOffset","endOffset","redraw","leftAddition","getPaginationLeftOffset","redrawAnnotations","removeHighlight","annotationId","addHighlight","CFIRangeInfo","rangeStartNode","rangeEndNode","startMarkerHtml","getRangeStartMarker","endMarkerHtml","getRangeEndMarker","$html","matrix","css","WebKitCSSMatrix","a","injectRangeElements","startElement","nextSibling","endElement","previousSibling","setStart","setEnd","selectionInfo","getSelectionInfo","selectedElements","addUnderline","log","addBookmark","$injectedElement","bookmarkMarkerHtml","getBookmarkMarker","injectElement","addImageAnnotation","$targetImage","getTargetElement","getCurrentSelectionCFI","currentSelection","getCurrentSelectionOffsetCFI","generateCharOffsetCFI","addSelectionHighlight","generatedContentDocCFI","annotationInfo","arbitraryPackageDocCFI","addSelectionBookmark","addSelectionImageAnnotation","firstSelectedImage","generateElementCFIComponent","updateAnnotationView","annotationViews","selectedRange","elementType","generateRangeCFI","intervalState","startElementFound","endElementFound","findSelectedElements","commonAncestorContainer","startContainer","endContainer","rangeCFIComponent","startNode","endNode","nodeType","Node","TEXT_NODE","generateCharOffsetRangeComponent","charOffsetCFI","generateCharacterOffsetCFIComponent","currElement","elementTypes","addElement","is","iframeDocument","getSelection","rangeCount","anchorOffset","focusOffset","getRangeAt","selection","$htmlElement","offsetLeftPixels","parseInt","$contentDocHead","rel","bookmarkViews","highlights","markers","underlines","imageAnnotations","annotationHash","highlightGroup","bookmarkView","resetBookmark","underlineGroup","getBookmark","bookmark","getHighlight","highlight","getUnderline","underline","getBookmarks","bookmarks","getHighlights","getUnderlines","getImageAnnotations","imageAnnotation","targetElement","toString","validateAnnotationId","BookmarkView","startMarker","endMarker","parentNode","highlightedTextNodes","underlinedTextNodes","imageNode","ImageAnnotation","mouseenter","mouseleave","click","setCSS","absoluteTop","absoluteLeft","position","addClass","setHoverBookmark","stopPropagation","hasClass","removeClass","setBaseBookmark","clickHandler","contextmenu","resetPosition","background-color","fill_color","highlightEvent","highlightGroupContext","$transparentElement","$underlineElement","underlineEvent","underlineGroupContext","$imageElement","setMouseenterBorder","setMouseleaveBorder","border","-webkit-background-clip","background-clip","reflowableAnnotations","getImageAnnotation","removeAnnotation","AnnotationsManager","proxyObj","getPartialCfi","cfiWrapperPattern","partiallyNakedCfi","nakedCfi","substring","liveAnnotations","spines","proxy","originalEmit","triggerEmitPatch","debug","annotationClickedEvent","spineIndex","jQueryEvent","fullFakeCfi","idref","partialCfi","attachAnnotations","$iframe","spineItem","epubDocument","contentDocument","abs","getCurrentSelectionCfi","spine","annotationsForView","cfi","annotation","spineIdRef","fakeCfi","config","isInitialized","_initialized","_annotationsManager","_initializedLate","Cfi","ReadiumSDK","CONTENT_DOCUMENT_LOADED"],"mappings":"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","sourcesContent":["//\r\n//  Created by Juan Corona\r\n//  Based on original proposal by Mickaël Menu\r\n//  Portions adapted from Rangy's Module system: Copyright (c) 2014 Tim Down\r\n//\r\n//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.\r\n//\r\n//  Redistribution and use in source and binary forms, with or without modification,\r\n//  are permitted provided that the following conditions are met:\r\n//  1. Redistributions of source code must retain the above copyright notice, this\r\n//  list of conditions and the following disclaimer.\r\n//  2. Redistributions in binary form must reproduce the above copyright notice,\r\n//  this list of conditions and the following disclaimer in the documentation and/or\r\n//  other materials provided with the distribution.\r\n//  3. Neither the name of the organization nor the names of its contributors may be\r\n//  used to endorse or promote products derived from this software without specific\r\n//  prior written permission.\r\n//\r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\r\n//  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n//  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n//  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\r\n//  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\r\n//  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\r\n//  OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\ndefine('readium_plugins/plugins_controller',[\"jquery\", \"underscore\", \"eventEmitter\", \"readium_shared_js/globals\"], function ($, _, EventEmitter, Globals) {\r\n\r\n    /**\r\n     * A  plugins controller used to easily add plugins from the host app, eg.\r\n     * ReadiumSDK.Plugins.register(\"footnotes\", function(api){ ... });\r\n     *\r\n     * @constructor\r\n     */\r\n    var PluginsController = function () {\r\n        var self = this;\r\n\r\n        var _pluginConstructors = {};\r\n\r\n        function _initializePlugins(reader) {\r\n            var apiFactory = new PluginApiFactory(reader);\r\n\r\n            if (!reader.plugins) {\r\n                //attach an object to the reader that will be\r\n                // used for plugin namespaces and their extensions\r\n                reader.plugins = {};\r\n            } else {\r\n                throw new Error(\"Already initialized on reader!\");\r\n            }\r\n            _.each(_pluginConstructors, function (plugin) {\r\n                plugin().init(apiFactory);\r\n            });\r\n        }\r\n\r\n        function _getExceptionMessage(ex) {\r\n            return ex.message || ex.description || String(ex);\r\n        }\r\n\r\n        // Creates a new instance of the given plugin constructor.\r\n        this.register = function (name, optDependencies, initFunc) {\r\n\r\n            if (_pluginConstructors[name]) {\r\n                throw new Error(\"Duplicate registration for plugin with name: \" + name);\r\n            }\r\n\r\n            _pluginConstructors[name] = function () {\r\n                var dependencies;\r\n                if (typeof optDependencies === 'function') {\r\n                    initFunc = optDependencies;\r\n                } else {\r\n                    dependencies = optDependencies;\r\n                }\r\n\r\n                return new Plugin(name, dependencies, function (plugin, api) {\r\n                    if (!plugin.initialized) {\r\n                        plugin.initialized = true;\r\n                        try {\r\n                            var pluginContext = {};\r\n                            _.extend(pluginContext, new EventEmitter());\r\n\r\n                            initFunc.call(pluginContext, api.instance);\r\n                            plugin.supported = true;\r\n\r\n                            api.host.plugins[plugin.name] = pluginContext;\r\n                        } catch (ex) {\r\n                            plugin.fail(_getExceptionMessage(ex));\r\n                        }\r\n                    }\r\n                });\r\n            };\r\n        };\r\n\r\n        Globals.on(Globals.Events.READER_INITIALIZED, function (reader) {\r\n\r\n            try {\r\n                _initializePlugins(reader);\r\n            } catch (ex) {\r\n                console.error(\"Plugins failed to initialize:\" + _getExceptionMessage(ex));\r\n            }\r\n\r\n            _.defer(function () {\r\n                Globals.emit(Globals.Events.PLUGINS_LOADED, reader);\r\n            });\r\n        });\r\n    };\r\n\r\n    function PluginApi(reader, plugin) {\r\n        this.reader = reader;\r\n        this.plugin = plugin;\r\n    }\r\n\r\n    function PluginApiFactory(reader) {\r\n        this.create = function (plugin) {\r\n            return {\r\n                host: reader,\r\n                instance: new PluginApi(reader, plugin)\r\n            };\r\n        };\r\n    }\r\n\r\n//\r\n//  The following is adapted from Rangy's Module class:\r\n//\r\n//  Copyright (c) 2014 Tim Down\r\n//\r\n//  The MIT License (MIT)\r\n//  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n//  of this software and associated documentation files (the \"Software\"), to deal\r\n//  in the Software without restriction, including without limitation the rights\r\n//  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n//  copies of the Software, and to permit persons to whom the Software is\r\n//  furnished to do so, subject to the following conditions:\r\n//\r\n//  The above copyright notice and this permission notice shall be included in all\r\n//  copies or substantial portions of the Software.\r\n//\r\n//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n//  SOFTWARE.\r\n\r\n    function Plugin(name, dependencies, initializer) {\r\n        this.name = name;\r\n        this.dependencies = dependencies;\r\n        this.initialized = false;\r\n        this.supported = false;\r\n        this.initializer = initializer;\r\n    }\r\n\r\n    Plugin.prototype = {\r\n        init: function (apiFactory) {\r\n            var requiredPluginNames = this.dependencies || [];\r\n            for (var i = 0, len = requiredPluginNames.length, requiredPlugin, PluginName; i < len; ++i) {\r\n                PluginName = requiredPluginNames[i];\r\n\r\n                requiredPlugin = Plugins[PluginName];\r\n                if (!requiredPlugin || !(requiredPlugin instanceof Plugin)) {\r\n                    throw new Error(\"required Plugin '\" + PluginName + \"' not found\");\r\n                }\r\n\r\n                requiredPlugin.init(apiFactory);\r\n\r\n                if (!requiredPlugin.supported) {\r\n                    throw new Error(\"required Plugin '\" + PluginName + \"' not supported\");\r\n                }\r\n            }\r\n\r\n            // Now run initializer\r\n            this.initializer(this, apiFactory.create(this));\r\n        },\r\n\r\n        fail: function (reason) {\r\n            this.initialized = true;\r\n            this.supported = false;\r\n            throw new Error(\"Plugin '\" + this.name + \"' failed to load: \" + reason);\r\n        },\r\n\r\n        warn: function (msg) {\r\n            console.warn(\"Plugin \" + this.name + \": \" + msg);\r\n        },\r\n\r\n        deprecationNotice: function (deprecated, replacement) {\r\n            console.warn(\"DEPRECATED: \" + deprecated + \" in Plugin \" + this.name + \"is deprecated. Please use \"\r\n            + replacement + \" instead\");\r\n        },\r\n\r\n        createError: function (msg) {\r\n            return new Error(\"Error in \" + this.name + \" Plugin: \" + msg);\r\n        }\r\n    };\r\n\r\n    var instance = new PluginsController();\r\n    Globals.Plugins = instance;\r\n    return instance;\r\n});\r\n\ndefine('readium_plugins', ['readium_plugins/plugins_controller'], function (main) { return main; });\n\n","//     Backbone.js 1.2.1\n\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\n//     For all details and documentation:\n//     http://backbonejs.org\n\n(function(factory) {\n\n  // Establish the root object, `window` (`self`) in the browser, or `global` on the server.\n  // We use `self` instead of `window` for `WebWorker` support.\n  var root = (typeof self == 'object' && self.self == self && self) ||\n            (typeof global == 'object' && global.global == global && global);\n\n  // Set up Backbone appropriately for the environment. Start with AMD.\n  if (typeof define === 'function' && define.amd) {\n    define('backbone',['underscore', 'jquery', 'exports'], function(_, $, exports) {\n      // Export global even in AMD case in case this script is loaded with\n      // others that may still expect a global Backbone.\n      root.Backbone = factory(root, exports, _, $);\n    });\n\n  // Next for Node.js or CommonJS. jQuery may not be needed as a module.\n  } else if (typeof exports !== 'undefined') {\n    var _ = require('underscore'), $;\n    try { $ = require('jquery'); } catch(e) {}\n    factory(root, exports, _, $);\n\n  // Finally, as a browser global.\n  } else {\n    root.Backbone = factory(root, {}, root._, (root.jQuery || root.Zepto || root.ender || root.$));\n  }\n\n}(function(root, Backbone, _, $) {\n\n  // Initial Setup\n  // -------------\n\n  // Save the previous value of the `Backbone` variable, so that it can be\n  // restored later on, if `noConflict` is used.\n  var previousBackbone = root.Backbone;\n\n  // Create a local reference to a common array method we'll want to use later.\n  var slice = [].slice;\n\n  // Current version of the library. Keep in sync with `package.json`.\n  Backbone.VERSION = '1.2.1';\n\n  // For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n  // the `$` variable.\n  Backbone.$ = $;\n\n  // Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n  // to its previous owner. Returns a reference to this Backbone object.\n  Backbone.noConflict = function() {\n    root.Backbone = previousBackbone;\n    return this;\n  };\n\n  // Turn on `emulateHTTP` to support legacy HTTP servers. Setting this option\n  // will fake `\"PATCH\"`, `\"PUT\"` and `\"DELETE\"` requests via the `_method` parameter and\n  // set a `X-Http-Method-Override` header.\n  Backbone.emulateHTTP = false;\n\n  // Turn on `emulateJSON` to support legacy servers that can't deal with direct\n  // `application/json` requests ... this will encode the body as\n  // `application/x-www-form-urlencoded` instead and will send the model in a\n  // form param named `model`.\n  Backbone.emulateJSON = false;\n\n  // Proxy Underscore methods to a Backbone class' prototype using a\n  // particular attribute as the data argument\n  var addMethod = function(length, method, attribute) {\n    switch (length) {\n      case 1: return function() {\n        return _[method](this[attribute]);\n      };\n      case 2: return function(value) {\n        return _[method](this[attribute], value);\n      };\n      case 3: return function(iteratee, context) {\n        return _[method](this[attribute], iteratee, context);\n      };\n      case 4: return function(iteratee, defaultVal, context) {\n        return _[method](this[attribute], iteratee, defaultVal, context);\n      };\n      default: return function() {\n        var args = slice.call(arguments);\n        args.unshift(this[attribute]);\n        return _[method].apply(_, args);\n      };\n    }\n  };\n  var addUnderscoreMethods = function(Class, methods, attribute) {\n    _.each(methods, function(length, method) {\n      if (_[method]) Class.prototype[method] = addMethod(length, method, attribute);\n    });\n  };\n\n  // Backbone.Events\n  // ---------------\n\n  // A module that can be mixed in to *any object* in order to provide it with\n  // custom events. You may bind with `on` or remove with `off` callback\n  // functions to an event; `trigger`-ing an event fires all callbacks in\n  // succession.\n  //\n  //     var object = {};\n  //     _.extend(object, Backbone.Events);\n  //     object.on('expand', function(){ alert('expanded'); });\n  //     object.trigger('expand');\n  //\n  var Events = Backbone.Events = {};\n\n  // Regular expression used to split event strings.\n  var eventSplitter = /\\s+/;\n\n  // Iterates over the standard `event, callback` (as well as the fancy multiple\n  // space-separated events `\"change blur\", callback` and jQuery-style event\n  // maps `{event: callback}`), reducing them by manipulating `memo`.\n  // Passes a normalized single event name and callback, as well as any\n  // optional `opts`.\n  var eventsApi = function(iteratee, memo, name, callback, opts) {\n    var i = 0, names;\n    if (name && typeof name === 'object') {\n      // Handle event maps.\n      if (callback !== void 0 && 'context' in opts && opts.context === void 0) opts.context = callback;\n      for (names = _.keys(name); i < names.length ; i++) {\n        memo = iteratee(memo, names[i], name[names[i]], opts);\n      }\n    } else if (name && eventSplitter.test(name)) {\n      // Handle space separated event names.\n      for (names = name.split(eventSplitter); i < names.length; i++) {\n        memo = iteratee(memo, names[i], callback, opts);\n      }\n    } else {\n      memo = iteratee(memo, name, callback, opts);\n    }\n    return memo;\n  };\n\n  // Bind an event to a `callback` function. Passing `\"all\"` will bind\n  // the callback to all events fired.\n  Events.on = function(name, callback, context) {\n    return internalOn(this, name, callback, context);\n  };\n\n  // An internal use `on` function, used to guard the `listening` argument from\n  // the public API.\n  var internalOn = function(obj, name, callback, context, listening) {\n    obj._events = eventsApi(onApi, obj._events || {}, name, callback, {\n        context: context,\n        ctx: obj,\n        listening: listening\n    });\n\n    if (listening) {\n      var listeners = obj._listeners || (obj._listeners = {});\n      listeners[listening.id] = listening;\n    }\n\n    return obj;\n  };\n\n  // Inversion-of-control versions of `on`. Tell *this* object to listen to\n  // an event in another object... keeping track of what it's listening to.\n  Events.listenTo =  function(obj, name, callback) {\n    if (!obj) return this;\n    var id = obj._listenId || (obj._listenId = _.uniqueId('l'));\n    var listeningTo = this._listeningTo || (this._listeningTo = {});\n    var listening = listeningTo[id];\n\n    // This object is not listening to any other events on `obj` yet.\n    // Setup the necessary references to track the listening callbacks.\n    if (!listening) {\n      var thisId = this._listenId || (this._listenId = _.uniqueId('l'));\n      listening = listeningTo[id] = {obj: obj, objId: id, id: thisId, listeningTo: listeningTo, count: 0};\n    }\n\n    // Bind callbacks on obj, and keep track of them on listening.\n    internalOn(obj, name, callback, this, listening);\n    return this;\n  };\n\n  // The reducing API that adds a callback to the `events` object.\n  var onApi = function(events, name, callback, options) {\n    if (callback) {\n      var handlers = events[name] || (events[name] = []);\n      var context = options.context, ctx = options.ctx, listening = options.listening;\n      if (listening) listening.count++;\n\n      handlers.push({ callback: callback, context: context, ctx: context || ctx, listening: listening });\n    }\n    return events;\n  };\n\n  // Remove one or many callbacks. If `context` is null, removes all\n  // callbacks with that function. If `callback` is null, removes all\n  // callbacks for the event. If `name` is null, removes all bound\n  // callbacks for all events.\n  Events.off =  function(name, callback, context) {\n    if (!this._events) return this;\n    this._events = eventsApi(offApi, this._events, name, callback, {\n        context: context,\n        listeners: this._listeners\n    });\n    return this;\n  };\n\n  // Tell this object to stop listening to either specific events ... or\n  // to every object it's currently listening to.\n  Events.stopListening =  function(obj, name, callback) {\n    var listeningTo = this._listeningTo;\n    if (!listeningTo) return this;\n\n    var ids = obj ? [obj._listenId] : _.keys(listeningTo);\n\n    for (var i = 0; i < ids.length; i++) {\n      var listening = listeningTo[ids[i]];\n\n      // If listening doesn't exist, this object is not currently\n      // listening to obj. Break out early.\n      if (!listening) break;\n\n      listening.obj.off(name, callback, this);\n    }\n    if (_.isEmpty(listeningTo)) this._listeningTo = void 0;\n\n    return this;\n  };\n\n  // The reducing API that removes a callback from the `events` object.\n  var offApi = function(events, name, callback, options) {\n    // No events to consider.\n    if (!events) return;\n\n    var i = 0, listening;\n    var context = options.context, listeners = options.listeners;\n\n    // Delete all events listeners and \"drop\" events.\n    if (!name && !callback && !context) {\n      var ids = _.keys(listeners);\n      for (; i < ids.length; i++) {\n        listening = listeners[ids[i]];\n        delete listeners[listening.id];\n        delete listening.listeningTo[listening.objId];\n      }\n      return;\n    }\n\n    var names = name ? [name] : _.keys(events);\n    for (; i < names.length; i++) {\n      name = names[i];\n      var handlers = events[name];\n\n      // Bail out if there are no events stored.\n      if (!handlers) break;\n\n      // Replace events if there are any remaining.  Otherwise, clean up.\n      var remaining = [];\n      for (var j = 0; j < handlers.length; j++) {\n        var handler = handlers[j];\n        if (\n          callback && callback !== handler.callback &&\n            callback !== handler.callback._callback ||\n              context && context !== handler.context\n        ) {\n          remaining.push(handler);\n        } else {\n          listening = handler.listening;\n          if (listening && --listening.count === 0) {\n            delete listeners[listening.id];\n            delete listening.listeningTo[listening.objId];\n          }\n        }\n      }\n\n      // Update tail event if the list has any events.  Otherwise, clean up.\n      if (remaining.length) {\n        events[name] = remaining;\n      } else {\n        delete events[name];\n      }\n    }\n    if (_.size(events)) return events;\n  };\n\n  // Bind an event to only be triggered a single time. After the first time\n  // the callback is invoked, it will be removed. When multiple events are\n  // passed in using the space-separated syntax, the event will fire once for every\n  // event you passed in, not once for a combination of all events\n  Events.once =  function(name, callback, context) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.off, this));\n    return this.on(events, void 0, context);\n  };\n\n  // Inversion-of-control versions of `once`.\n  Events.listenToOnce =  function(obj, name, callback) {\n    // Map the event into a `{event: once}` object.\n    var events = eventsApi(onceMap, {}, name, callback, _.bind(this.stopListening, this, obj));\n    return this.listenTo(obj, events);\n  };\n\n  // Reduces the event callbacks into a map of `{event: onceWrapper}`.\n  // `offer` unbinds the `onceWrapper` after it has been called.\n  var onceMap = function(map, name, callback, offer) {\n    if (callback) {\n      var once = map[name] = _.once(function() {\n        offer(name, once);\n        callback.apply(this, arguments);\n      });\n      once._callback = callback;\n    }\n    return map;\n  };\n\n  // Trigger one or many events, firing all bound callbacks. Callbacks are\n  // passed the same arguments as `trigger` is, apart from the event name\n  // (unless you're listening on `\"all\"`, which will cause your callback to\n  // receive the true name of the event as the first argument).\n  Events.trigger =  function(name) {\n    if (!this._events) return this;\n\n    var length = Math.max(0, arguments.length - 1);\n    var args = Array(length);\n    for (var i = 0; i < length; i++) args[i] = arguments[i + 1];\n\n    eventsApi(triggerApi, this._events, name, void 0, args);\n    return this;\n  };\n\n  // Handles triggering the appropriate event callbacks.\n  var triggerApi = function(objEvents, name, cb, args) {\n    if (objEvents) {\n      var events = objEvents[name];\n      var allEvents = objEvents.all;\n      if (events && allEvents) allEvents = allEvents.slice();\n      if (events) triggerEvents(events, args);\n      if (allEvents) triggerEvents(allEvents, [name].concat(args));\n    }\n    return objEvents;\n  };\n\n  // A difficult-to-believe, but optimized internal dispatch function for\n  // triggering events. Tries to keep the usual cases speedy (most internal\n  // Backbone events have 3 arguments).\n  var triggerEvents = function(events, args) {\n    var ev, i = -1, l = events.length, a1 = args[0], a2 = args[1], a3 = args[2];\n    switch (args.length) {\n      case 0: while (++i < l) (ev = events[i]).callback.call(ev.ctx); return;\n      case 1: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1); return;\n      case 2: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2); return;\n      case 3: while (++i < l) (ev = events[i]).callback.call(ev.ctx, a1, a2, a3); return;\n      default: while (++i < l) (ev = events[i]).callback.apply(ev.ctx, args); return;\n    }\n  };\n\n  // Aliases for backwards compatibility.\n  Events.bind   = Events.on;\n  Events.unbind = Events.off;\n\n  // Allow the `Backbone` object to serve as a global event bus, for folks who\n  // want global \"pubsub\" in a convenient place.\n  _.extend(Backbone, Events);\n\n  // Backbone.Model\n  // --------------\n\n  // Backbone **Models** are the basic data object in the framework --\n  // frequently representing a row in a table in a database on your server.\n  // A discrete chunk of data and a bunch of useful, related methods for\n  // performing computations and transformations on that data.\n\n  // Create a new model with the specified attributes. A client id (`cid`)\n  // is automatically generated and assigned for you.\n  var Model = Backbone.Model = function(attributes, options) {\n    var attrs = attributes || {};\n    options || (options = {});\n    this.cid = _.uniqueId(this.cidPrefix);\n    this.attributes = {};\n    if (options.collection) this.collection = options.collection;\n    if (options.parse) attrs = this.parse(attrs, options) || {};\n    attrs = _.defaults({}, attrs, _.result(this, 'defaults'));\n    this.set(attrs, options);\n    this.changed = {};\n    this.initialize.apply(this, arguments);\n  };\n\n  // Attach all inheritable methods to the Model prototype.\n  _.extend(Model.prototype, Events, {\n\n    // A hash of attributes whose current and previous value differ.\n    changed: null,\n\n    // The value returned during the last failed validation.\n    validationError: null,\n\n    // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\n    // CouchDB users may want to set this to `\"_id\"`.\n    idAttribute: 'id',\n\n    // The prefix is used to create the client id which is used to identify models locally.\n    // You may want to override this if you're experiencing name clashes with model ids.\n    cidPrefix: 'c',\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Return a copy of the model's `attributes` object.\n    toJSON: function(options) {\n      return _.clone(this.attributes);\n    },\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Get the value of an attribute.\n    get: function(attr) {\n      return this.attributes[attr];\n    },\n\n    // Get the HTML-escaped value of an attribute.\n    escape: function(attr) {\n      return _.escape(this.get(attr));\n    },\n\n    // Returns `true` if the attribute contains a value that is not null\n    // or undefined.\n    has: function(attr) {\n      return this.get(attr) != null;\n    },\n\n    // Special-cased proxy to underscore's `_.matches` method.\n    matches: function(attrs) {\n      return !!_.iteratee(attrs, this)(this.attributes);\n    },\n\n    // Set a hash of model attributes on the object, firing `\"change\"`. This is\n    // the core primitive operation of a model, updating the data and notifying\n    // anyone who needs to know about the change in state. The heart of the beast.\n    set: function(key, val, options) {\n      if (key == null) return this;\n\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options || (options = {});\n\n      // Run validation.\n      if (!this._validate(attrs, options)) return false;\n\n      // Extract attributes and options.\n      var unset      = options.unset;\n      var silent     = options.silent;\n      var changes    = [];\n      var changing   = this._changing;\n      this._changing = true;\n\n      if (!changing) {\n        this._previousAttributes = _.clone(this.attributes);\n        this.changed = {};\n      }\n\n      var current = this.attributes;\n      var changed = this.changed;\n      var prev    = this._previousAttributes;\n\n      // Check for changes of `id`.\n      if (this.idAttribute in attrs) this.id = attrs[this.idAttribute];\n\n      // For each `set` attribute, update or delete the current value.\n      for (var attr in attrs) {\n        val = attrs[attr];\n        if (!_.isEqual(current[attr], val)) changes.push(attr);\n        if (!_.isEqual(prev[attr], val)) {\n          changed[attr] = val;\n        } else {\n          delete changed[attr];\n        }\n        unset ? delete current[attr] : current[attr] = val;\n      }\n\n      // Trigger all relevant attribute changes.\n      if (!silent) {\n        if (changes.length) this._pending = options;\n        for (var i = 0; i < changes.length; i++) {\n          this.trigger('change:' + changes[i], this, current[changes[i]], options);\n        }\n      }\n\n      // You might be wondering why there's a `while` loop here. Changes can\n      // be recursively nested within `\"change\"` events.\n      if (changing) return this;\n      if (!silent) {\n        while (this._pending) {\n          options = this._pending;\n          this._pending = false;\n          this.trigger('change', this, options);\n        }\n      }\n      this._pending = false;\n      this._changing = false;\n      return this;\n    },\n\n    // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\n    // if the attribute doesn't exist.\n    unset: function(attr, options) {\n      return this.set(attr, void 0, _.extend({}, options, {unset: true}));\n    },\n\n    // Clear all attributes on the model, firing `\"change\"`.\n    clear: function(options) {\n      var attrs = {};\n      for (var key in this.attributes) attrs[key] = void 0;\n      return this.set(attrs, _.extend({}, options, {unset: true}));\n    },\n\n    // Determine if the model has changed since the last `\"change\"` event.\n    // If you specify an attribute name, determine if that attribute has changed.\n    hasChanged: function(attr) {\n      if (attr == null) return !_.isEmpty(this.changed);\n      return _.has(this.changed, attr);\n    },\n\n    // Return an object containing all the attributes that have changed, or\n    // false if there are no changed attributes. Useful for determining what\n    // parts of a view need to be updated and/or what attributes need to be\n    // persisted to the server. Unset attributes will be set to undefined.\n    // You can also pass an attributes object to diff against the model,\n    // determining if there *would be* a change.\n    changedAttributes: function(diff) {\n      if (!diff) return this.hasChanged() ? _.clone(this.changed) : false;\n      var old = this._changing ? this._previousAttributes : this.attributes;\n      var changed = {};\n      for (var attr in diff) {\n        var val = diff[attr];\n        if (_.isEqual(old[attr], val)) continue;\n        changed[attr] = val;\n      }\n      return _.size(changed) ? changed : false;\n    },\n\n    // Get the previous value of an attribute, recorded at the time the last\n    // `\"change\"` event was fired.\n    previous: function(attr) {\n      if (attr == null || !this._previousAttributes) return null;\n      return this._previousAttributes[attr];\n    },\n\n    // Get all of the attributes of the model at the time of the previous\n    // `\"change\"` event.\n    previousAttributes: function() {\n      return _.clone(this._previousAttributes);\n    },\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var model = this;\n      var success = options.success;\n      options.success = function(resp) {\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (!model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save: function(key, val, options) {\n      // Handle both `\"key\", value` and `{key: value}` -style arguments.\n      var attrs;\n      if (key == null || typeof key === 'object') {\n        attrs = key;\n        options = val;\n      } else {\n        (attrs = {})[key] = val;\n      }\n\n      options = _.extend({validate: true, parse: true}, options);\n      var wait = options.wait;\n\n      // If we're not waiting and attributes exist, save acts as\n      // `set(attr).save(null, opts)` with validation. Otherwise, check if\n      // the model will be valid when the attributes, if any, are set.\n      if (attrs && !wait) {\n        if (!this.set(attrs, options)) return false;\n      } else {\n        if (!this._validate(attrs, options)) return false;\n      }\n\n      // After a successful server-side save, the client is (optionally)\n      // updated with the server-side state.\n      var model = this;\n      var success = options.success;\n      var attributes = this.attributes;\n      options.success = function(resp) {\n        // Ensure attributes are restored during synchronous saves.\n        model.attributes = attributes;\n        var serverAttrs = options.parse ? model.parse(resp, options) : resp;\n        if (wait) serverAttrs = _.extend({}, attrs, serverAttrs);\n        if (serverAttrs && !model.set(serverAttrs, options)) return false;\n        if (success) success.call(options.context, model, resp, options);\n        model.trigger('sync', model, resp, options);\n      };\n      wrapError(this, options);\n\n      // Set temporary attributes if `{wait: true}` to properly find new ids.\n      if (attrs && wait) this.attributes = _.extend({}, attributes, attrs);\n\n      var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n      if (method === 'patch' && !options.attrs) options.attrs = attrs;\n      var xhr = this.sync(method, this, options);\n\n      // Restore attributes.\n      this.attributes = attributes;\n\n      return xhr;\n    },\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy: function(options) {\n      options = options ? _.clone(options) : {};\n      var model = this;\n      var success = options.success;\n      var wait = options.wait;\n\n      var destroy = function() {\n        model.stopListening();\n        model.trigger('destroy', model, model.collection, options);\n      };\n\n      options.success = function(resp) {\n        if (wait) destroy();\n        if (success) success.call(options.context, model, resp, options);\n        if (!model.isNew()) model.trigger('sync', model, resp, options);\n      };\n\n      var xhr = false;\n      if (this.isNew()) {\n        _.defer(options.success);\n      } else {\n        wrapError(this, options);\n        xhr = this.sync('delete', this, options);\n      }\n      if (!wait) destroy();\n      return xhr;\n    },\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url: function() {\n      var base =\n        _.result(this, 'urlRoot') ||\n        _.result(this.collection, 'url') ||\n        urlError();\n      if (this.isNew()) return base;\n      var id = this.get(this.idAttribute);\n      return base.replace(/[^\\/]$/, '$&/') + encodeURIComponent(id);\n    },\n\n    // **parse** converts a response into the hash of attributes to be `set` on\n    // the model. The default implementation is just to pass the response along.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new model with identical attributes to this one.\n    clone: function() {\n      return new this.constructor(this.attributes);\n    },\n\n    // A model is new if it has never been saved to the server, and lacks an id.\n    isNew: function() {\n      return !this.has(this.idAttribute);\n    },\n\n    // Check if the model is currently in a valid state.\n    isValid: function(options) {\n      return this._validate({}, _.defaults({validate: true}, options));\n    },\n\n    // Run validation against the next complete set of model attributes,\n    // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\n    _validate: function(attrs, options) {\n      if (!options.validate || !this.validate) return true;\n      attrs = _.extend({}, this.attributes, attrs);\n      var error = this.validationError = this.validate(attrs, options) || null;\n      if (!error) return true;\n      this.trigger('invalid', this, error, _.extend(options, {validationError: error}));\n      return false;\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Model.\n  var modelMethods = { keys: 1, values: 1, pairs: 1, invert: 1, pick: 0,\n      omit: 0, chain: 1, isEmpty: 1 };\n\n  // Mix in each Underscore method as a proxy to `Model#attributes`.\n  addUnderscoreMethods(Model, modelMethods, 'attributes');\n\n  // Backbone.Collection\n  // -------------------\n\n  // If models tend to represent a single row of data, a Backbone Collection is\n  // more analogous to a table full of data ... or a small slice or page of that\n  // table, or a collection of rows that belong together for a particular reason\n  // -- all of the messages in this particular folder, all of the documents\n  // belonging to this particular author, and so on. Collections maintain\n  // indexes of their models, both in order, and for lookup by `id`.\n\n  // Create a new **Collection**, perhaps to contain a specific type of `model`.\n  // If a `comparator` is specified, the Collection will maintain\n  // its models in sort order, as they're added and removed.\n  var Collection = Backbone.Collection = function(models, options) {\n    options || (options = {});\n    if (options.model) this.model = options.model;\n    if (options.comparator !== void 0) this.comparator = options.comparator;\n    this._reset();\n    this.initialize.apply(this, arguments);\n    if (models) this.reset(models, _.extend({silent: true}, options));\n  };\n\n  // Default options for `Collection#set`.\n  var setOptions = {add: true, remove: true, merge: true};\n  var addOptions = {add: true, remove: false};\n\n  // Define the Collection's inheritable methods.\n  _.extend(Collection.prototype, Events, {\n\n    // The default model for a collection is just a **Backbone.Model**.\n    // This should be overridden in most cases.\n    model: Model,\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // The JSON representation of a Collection is an array of the\n    // models' attributes.\n    toJSON: function(options) {\n      return this.map(function(model) { return model.toJSON(options); });\n    },\n\n    // Proxy `Backbone.sync` by default.\n    sync: function() {\n      return Backbone.sync.apply(this, arguments);\n    },\n\n    // Add a model, or list of models to the set.\n    add: function(models, options) {\n      return this.set(models, _.extend({merge: false}, options, addOptions));\n    },\n\n    // Remove a model, or a list of models from the set.\n    remove: function(models, options) {\n      options = _.extend({}, options);\n      var singular = !_.isArray(models);\n      models = singular ? [models] : _.clone(models);\n      var removed = this._removeModels(models, options);\n      if (!options.silent && removed) this.trigger('update', this, options);\n      return singular ? removed[0] : removed;\n    },\n\n    // Update a collection by `set`-ing a new list of models, adding new ones,\n    // removing models that are no longer present, and merging models that\n    // already exist in the collection, as necessary. Similar to **Model#set**,\n    // the core operation for updating the data contained by the collection.\n    set: function(models, options) {\n      options = _.defaults({}, options, setOptions);\n      if (options.parse && !this._isModel(models)) models = this.parse(models, options);\n      var singular = !_.isArray(models);\n      models = singular ? (models ? [models] : []) : models.slice();\n      var id, model, attrs, existing, sort;\n      var at = options.at;\n      if (at != null) at = +at;\n      if (at < 0) at += this.length + 1;\n      var sortable = this.comparator && (at == null) && options.sort !== false;\n      var sortAttr = _.isString(this.comparator) ? this.comparator : null;\n      var toAdd = [], toRemove = [], modelMap = {};\n      var add = options.add, merge = options.merge, remove = options.remove;\n      var order = !sortable && add && remove ? [] : false;\n      var orderChanged = false;\n\n      // Turn bare objects into model references, and prevent invalid models\n      // from being added.\n      for (var i = 0; i < models.length; i++) {\n        attrs = models[i];\n\n        // If a duplicate is found, prevent it from being added and\n        // optionally merge it into the existing model.\n        if (existing = this.get(attrs)) {\n          if (remove) modelMap[existing.cid] = true;\n          if (merge && attrs !== existing) {\n            attrs = this._isModel(attrs) ? attrs.attributes : attrs;\n            if (options.parse) attrs = existing.parse(attrs, options);\n            existing.set(attrs, options);\n            if (sortable && !sort && existing.hasChanged(sortAttr)) sort = true;\n          }\n          models[i] = existing;\n\n        // If this is a new, valid model, push it to the `toAdd` list.\n        } else if (add) {\n          model = models[i] = this._prepareModel(attrs, options);\n          if (!model) continue;\n          toAdd.push(model);\n          this._addReference(model, options);\n        }\n\n        // Do not add multiple models with the same `id`.\n        model = existing || model;\n        if (!model) continue;\n        id = this.modelId(model.attributes);\n        if (order && (model.isNew() || !modelMap[id])) {\n          order.push(model);\n\n          // Check to see if this is actually a new model at this index.\n          orderChanged = orderChanged || !this.models[i] || model.cid !== this.models[i].cid;\n        }\n\n        modelMap[id] = true;\n      }\n\n      // Remove nonexistent models if appropriate.\n      if (remove) {\n        for (var i = 0; i < this.length; i++) {\n          if (!modelMap[(model = this.models[i]).cid]) toRemove.push(model);\n        }\n        if (toRemove.length) this._removeModels(toRemove, options);\n      }\n\n      // See if sorting is needed, update `length` and splice in new models.\n      if (toAdd.length || orderChanged) {\n        if (sortable) sort = true;\n        this.length += toAdd.length;\n        if (at != null) {\n          for (var i = 0; i < toAdd.length; i++) {\n            this.models.splice(at + i, 0, toAdd[i]);\n          }\n        } else {\n          if (order) this.models.length = 0;\n          var orderedModels = order || toAdd;\n          for (var i = 0; i < orderedModels.length; i++) {\n            this.models.push(orderedModels[i]);\n          }\n        }\n      }\n\n      // Silently sort the collection if appropriate.\n      if (sort) this.sort({silent: true});\n\n      // Unless silenced, it's time to fire all appropriate add/sort events.\n      if (!options.silent) {\n        var addOpts = at != null ? _.clone(options) : options;\n        for (var i = 0; i < toAdd.length; i++) {\n          if (at != null) addOpts.index = at + i;\n          (model = toAdd[i]).trigger('add', model, this, addOpts);\n        }\n        if (sort || orderChanged) this.trigger('sort', this, options);\n        if (toAdd.length || toRemove.length) this.trigger('update', this, options);\n      }\n\n      // Return the added (or merged) model (or models).\n      return singular ? models[0] : models;\n    },\n\n    // When you have more items than you want to add or remove individually,\n    // you can reset the entire set with a new list of models, without firing\n    // any granular `add` or `remove` events. Fires `reset` when finished.\n    // Useful for bulk operations and optimizations.\n    reset: function(models, options) {\n      options = options ? _.clone(options) : {};\n      for (var i = 0; i < this.models.length; i++) {\n        this._removeReference(this.models[i], options);\n      }\n      options.previousModels = this.models;\n      this._reset();\n      models = this.add(models, _.extend({silent: true}, options));\n      if (!options.silent) this.trigger('reset', this, options);\n      return models;\n    },\n\n    // Add a model to the end of the collection.\n    push: function(model, options) {\n      return this.add(model, _.extend({at: this.length}, options));\n    },\n\n    // Remove a model from the end of the collection.\n    pop: function(options) {\n      var model = this.at(this.length - 1);\n      return this.remove(model, options);\n    },\n\n    // Add a model to the beginning of the collection.\n    unshift: function(model, options) {\n      return this.add(model, _.extend({at: 0}, options));\n    },\n\n    // Remove a model from the beginning of the collection.\n    shift: function(options) {\n      var model = this.at(0);\n      return this.remove(model, options);\n    },\n\n    // Slice out a sub-array of models from the collection.\n    slice: function() {\n      return slice.apply(this.models, arguments);\n    },\n\n    // Get a model from the set by id.\n    get: function(obj) {\n      if (obj == null) return void 0;\n      var id = this.modelId(this._isModel(obj) ? obj.attributes : obj);\n      return this._byId[obj] || this._byId[id] || this._byId[obj.cid];\n    },\n\n    // Get the model at the given index.\n    at: function(index) {\n      if (index < 0) index += this.length;\n      return this.models[index];\n    },\n\n    // Return models with matching attributes. Useful for simple cases of\n    // `filter`.\n    where: function(attrs, first) {\n      var matches = _.matches(attrs);\n      return this[first ? 'find' : 'filter'](function(model) {\n        return matches(model.attributes);\n      });\n    },\n\n    // Return the first model with matching attributes. Useful for simple cases\n    // of `find`.\n    findWhere: function(attrs) {\n      return this.where(attrs, true);\n    },\n\n    // Force the collection to re-sort itself. You don't need to call this under\n    // normal circumstances, as the set will maintain sort order as each item\n    // is added.\n    sort: function(options) {\n      if (!this.comparator) throw new Error('Cannot sort a set without a comparator');\n      options || (options = {});\n\n      // Run sort based on type of `comparator`.\n      if (_.isString(this.comparator) || this.comparator.length === 1) {\n        this.models = this.sortBy(this.comparator, this);\n      } else {\n        this.models.sort(_.bind(this.comparator, this));\n      }\n\n      if (!options.silent) this.trigger('sort', this, options);\n      return this;\n    },\n\n    // Pluck an attribute from each model in the collection.\n    pluck: function(attr) {\n      return _.invoke(this.models, 'get', attr);\n    },\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch: function(options) {\n      options = _.extend({parse: true}, options);\n      var success = options.success;\n      var collection = this;\n      options.success = function(resp) {\n        var method = options.reset ? 'reset' : 'set';\n        collection[method](resp, options);\n        if (success) success.call(options.context, collection, resp, options);\n        collection.trigger('sync', collection, resp, options);\n      };\n      wrapError(this, options);\n      return this.sync('read', this, options);\n    },\n\n    // Create a new instance of a model in this collection. Add the model to the\n    // collection immediately, unless `wait: true` is passed, in which case we\n    // wait for the server to agree.\n    create: function(model, options) {\n      options = options ? _.clone(options) : {};\n      var wait = options.wait;\n      model = this._prepareModel(model, options);\n      if (!model) return false;\n      if (!wait) this.add(model, options);\n      var collection = this;\n      var success = options.success;\n      options.success = function(model, resp, callbackOpts) {\n        if (wait) collection.add(model, callbackOpts);\n        if (success) success.call(callbackOpts.context, model, resp, callbackOpts);\n      };\n      model.save(null, options);\n      return model;\n    },\n\n    // **parse** converts a response into a list of models to be added to the\n    // collection. The default implementation is just to pass it through.\n    parse: function(resp, options) {\n      return resp;\n    },\n\n    // Create a new collection with an identical list of models as this one.\n    clone: function() {\n      return new this.constructor(this.models, {\n        model: this.model,\n        comparator: this.comparator\n      });\n    },\n\n    // Define how to uniquely identify models in the collection.\n    modelId: function (attrs) {\n      return attrs[this.model.prototype.idAttribute || 'id'];\n    },\n\n    // Private method to reset all internal state. Called when the collection\n    // is first initialized or reset.\n    _reset: function() {\n      this.length = 0;\n      this.models = [];\n      this._byId  = {};\n    },\n\n    // Prepare a hash of attributes (or other model) to be added to this\n    // collection.\n    _prepareModel: function(attrs, options) {\n      if (this._isModel(attrs)) {\n        if (!attrs.collection) attrs.collection = this;\n        return attrs;\n      }\n      options = options ? _.clone(options) : {};\n      options.collection = this;\n      var model = new this.model(attrs, options);\n      if (!model.validationError) return model;\n      this.trigger('invalid', this, model.validationError, options);\n      return false;\n    },\n\n    // Internal method called by both remove and set.\n    // Returns removed models, or false if nothing is removed.\n    _removeModels: function(models, options) {\n      var removed = [];\n      for (var i = 0; i < models.length; i++) {\n        var model = this.get(models[i]);\n        if (!model) continue;\n\n        var index = this.indexOf(model);\n        this.models.splice(index, 1);\n        this.length--;\n\n        if (!options.silent) {\n          options.index = index;\n          model.trigger('remove', model, this, options);\n        }\n\n        removed.push(model);\n        this._removeReference(model, options);\n      }\n      return removed.length ? removed : false;\n    },\n\n    // Method for checking whether an object should be considered a model for\n    // the purposes of adding to the collection.\n    _isModel: function (model) {\n      return model instanceof Model;\n    },\n\n    // Internal method to create a model's ties to a collection.\n    _addReference: function(model, options) {\n      this._byId[model.cid] = model;\n      var id = this.modelId(model.attributes);\n      if (id != null) this._byId[id] = model;\n      model.on('all', this._onModelEvent, this);\n    },\n\n    // Internal method to sever a model's ties to a collection.\n    _removeReference: function(model, options) {\n      delete this._byId[model.cid];\n      var id = this.modelId(model.attributes);\n      if (id != null) delete this._byId[id];\n      if (this === model.collection) delete model.collection;\n      model.off('all', this._onModelEvent, this);\n    },\n\n    // Internal method called every time a model in the set fires an event.\n    // Sets need to update their indexes when models change ids. All other\n    // events simply proxy through. \"add\" and \"remove\" events that originate\n    // in other collections are ignored.\n    _onModelEvent: function(event, model, collection, options) {\n      if ((event === 'add' || event === 'remove') && collection !== this) return;\n      if (event === 'destroy') this.remove(model, options);\n      if (event === 'change') {\n        var prevId = this.modelId(model.previousAttributes());\n        var id = this.modelId(model.attributes);\n        if (prevId !== id) {\n          if (prevId != null) delete this._byId[prevId];\n          if (id != null) this._byId[id] = model;\n        }\n      }\n      this.trigger.apply(this, arguments);\n    }\n\n  });\n\n  // Underscore methods that we want to implement on the Collection.\n  // 90% of the core usefulness of Backbone Collections is actually implemented\n  // right here:\n  var collectionMethods = { forEach: 3, each: 3, map: 3, collect: 3, reduce: 4,\n      foldl: 4, inject: 4, reduceRight: 4, foldr: 4, find: 3, detect: 3, filter: 3,\n      select: 3, reject: 3, every: 3, all: 3, some: 3, any: 3, include: 2,\n      contains: 2, invoke: 0, max: 3, min: 3, toArray: 1, size: 1, first: 3,\n      head: 3, take: 3, initial: 3, rest: 3, tail: 3, drop: 3, last: 3,\n      without: 0, difference: 0, indexOf: 3, shuffle: 1, lastIndexOf: 3,\n      isEmpty: 1, chain: 1, sample: 3, partition: 3 };\n\n  // Mix in each Underscore method as a proxy to `Collection#models`.\n  addUnderscoreMethods(Collection, collectionMethods, 'models');\n\n  // Underscore methods that take a property name as an argument.\n  var attributeMethods = ['groupBy', 'countBy', 'sortBy', 'indexBy'];\n\n  // Use attributes instead of properties.\n  _.each(attributeMethods, function(method) {\n    if (!_[method]) return;\n    Collection.prototype[method] = function(value, context) {\n      var iterator = _.isFunction(value) ? value : function(model) {\n        return model.get(value);\n      };\n      return _[method](this.models, iterator, context);\n    };\n  });\n\n  // Backbone.View\n  // -------------\n\n  // Backbone Views are almost more convention than they are actual code. A View\n  // is simply a JavaScript object that represents a logical chunk of UI in the\n  // DOM. This might be a single item, an entire list, a sidebar or panel, or\n  // even the surrounding frame which wraps your whole app. Defining a chunk of\n  // UI as a **View** allows you to define your DOM events declaratively, without\n  // having to worry about render order ... and makes it easy for the view to\n  // react to specific changes in the state of your models.\n\n  // Creating a Backbone.View creates its initial element outside of the DOM,\n  // if an existing element is not provided...\n  var View = Backbone.View = function(options) {\n    this.cid = _.uniqueId('view');\n    _.extend(this, _.pick(options, viewOptions));\n    this._ensureElement();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regex to split keys for `delegate`.\n  var delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n  // List of view options to be merged as properties.\n  var viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n  // Set up all inheritable **Backbone.View** properties and methods.\n  _.extend(View.prototype, Events, {\n\n    // The default `tagName` of a View's element is `\"div\"`.\n    tagName: 'div',\n\n    // jQuery delegate for element lookup, scoped to DOM elements within the\n    // current view. This should be preferred to global lookups where possible.\n    $: function(selector) {\n      return this.$el.find(selector);\n    },\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // **render** is the core function that your view should override, in order\n    // to populate its element (`this.el`), with the appropriate HTML. The\n    // convention is for **render** to always return `this`.\n    render: function() {\n      return this;\n    },\n\n    // Remove this view by taking the element out of the DOM, and removing any\n    // applicable Backbone.Events listeners.\n    remove: function() {\n      this._removeElement();\n      this.stopListening();\n      return this;\n    },\n\n    // Remove this view's element from the document and all event listeners\n    // attached to it. Exposed for subclasses using an alternative DOM\n    // manipulation API.\n    _removeElement: function() {\n      this.$el.remove();\n    },\n\n    // Change the view's element (`this.el` property) and re-delegate the\n    // view's events on the new element.\n    setElement: function(element) {\n      this.undelegateEvents();\n      this._setElement(element);\n      this.delegateEvents();\n      return this;\n    },\n\n    // Creates the `this.el` and `this.$el` references for this view using the\n    // given `el`. `el` can be a CSS selector or an HTML string, a jQuery\n    // context or an element. Subclasses can override this to utilize an\n    // alternative DOM manipulation API and are only required to set the\n    // `this.el` property.\n    _setElement: function(el) {\n      this.$el = el instanceof Backbone.$ ? el : Backbone.$(el);\n      this.el = this.$el[0];\n    },\n\n    // Set callbacks, where `this.events` is a hash of\n    //\n    // *{\"event selector\": \"callback\"}*\n    //\n    //     {\n    //       'mousedown .title':  'edit',\n    //       'click .button':     'save',\n    //       'click .open':       function(e) { ... }\n    //     }\n    //\n    // pairs. Callbacks will be bound to the view, with `this` set properly.\n    // Uses event delegation for efficiency.\n    // Omitting the selector binds the event to `this.el`.\n    delegateEvents: function(events) {\n      events || (events = _.result(this, 'events'));\n      if (!events) return this;\n      this.undelegateEvents();\n      for (var key in events) {\n        var method = events[key];\n        if (!_.isFunction(method)) method = this[method];\n        if (!method) continue;\n        var match = key.match(delegateEventSplitter);\n        this.delegate(match[1], match[2], _.bind(method, this));\n      }\n      return this;\n    },\n\n    // Add a single event listener to the view's element (or a child element\n    // using `selector`). This only works for delegate-able events: not `focus`,\n    // `blur`, and not `change`, `submit`, and `reset` in Internet Explorer.\n    delegate: function(eventName, selector, listener) {\n      this.$el.on(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Clears all callbacks previously bound to the view by `delegateEvents`.\n    // You usually don't need to use this, but may wish to if you have multiple\n    // Backbone views attached to the same DOM element.\n    undelegateEvents: function() {\n      if (this.$el) this.$el.off('.delegateEvents' + this.cid);\n      return this;\n    },\n\n    // A finer-grained `undelegateEvents` for removing a single delegated event.\n    // `selector` and `listener` are both optional.\n    undelegate: function(eventName, selector, listener) {\n      this.$el.off(eventName + '.delegateEvents' + this.cid, selector, listener);\n      return this;\n    },\n\n    // Produces a DOM element to be assigned to your view. Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _createElement: function(tagName) {\n      return document.createElement(tagName);\n    },\n\n    // Ensure that the View has a DOM element to render into.\n    // If `this.el` is a string, pass it through `$()`, take the first\n    // matching element, and re-assign it to `el`. Otherwise, create\n    // an element from the `id`, `className` and `tagName` properties.\n    _ensureElement: function() {\n      if (!this.el) {\n        var attrs = _.extend({}, _.result(this, 'attributes'));\n        if (this.id) attrs.id = _.result(this, 'id');\n        if (this.className) attrs['class'] = _.result(this, 'className');\n        this.setElement(this._createElement(_.result(this, 'tagName')));\n        this._setAttributes(attrs);\n      } else {\n        this.setElement(_.result(this, 'el'));\n      }\n    },\n\n    // Set attributes from a hash on this view's element.  Exposed for\n    // subclasses using an alternative DOM manipulation API.\n    _setAttributes: function(attributes) {\n      this.$el.attr(attributes);\n    }\n\n  });\n\n  // Backbone.sync\n  // -------------\n\n  // Override this function to change the manner in which Backbone persists\n  // models to the server. You will be passed the type of request, and the\n  // model in question. By default, makes a RESTful Ajax request\n  // to the model's `url()`. Some possible customizations could be:\n  //\n  // * Use `setTimeout` to batch rapid-fire updates into a single request.\n  // * Send up the models as XML instead of JSON.\n  // * Persist models via WebSockets instead of Ajax.\n  //\n  // Turn on `Backbone.emulateHTTP` in order to send `PUT` and `DELETE` requests\n  // as `POST`, with a `_method` parameter containing the true HTTP method,\n  // as well as all requests with the body as `application/x-www-form-urlencoded`\n  // instead of `application/json` with the model in a param named `model`.\n  // Useful when interfacing with server-side languages like **PHP** that make\n  // it difficult to read the body of `PUT` requests.\n  Backbone.sync = function(method, model, options) {\n    var type = methodMap[method];\n\n    // Default options, unless specified.\n    _.defaults(options || (options = {}), {\n      emulateHTTP: Backbone.emulateHTTP,\n      emulateJSON: Backbone.emulateJSON\n    });\n\n    // Default JSON-request options.\n    var params = {type: type, dataType: 'json'};\n\n    // Ensure that we have a URL.\n    if (!options.url) {\n      params.url = _.result(model, 'url') || urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if (options.data == null && model && (method === 'create' || method === 'update' || method === 'patch')) {\n      params.contentType = 'application/json';\n      params.data = JSON.stringify(options.attrs || model.toJSON(options));\n    }\n\n    // For older servers, emulate JSON by encoding the request into an HTML-form.\n    if (options.emulateJSON) {\n      params.contentType = 'application/x-www-form-urlencoded';\n      params.data = params.data ? {model: params.data} : {};\n    }\n\n    // For older servers, emulate HTTP by mimicking the HTTP method with `_method`\n    // And an `X-HTTP-Method-Override` header.\n    if (options.emulateHTTP && (type === 'PUT' || type === 'DELETE' || type === 'PATCH')) {\n      params.type = 'POST';\n      if (options.emulateJSON) params.data._method = type;\n      var beforeSend = options.beforeSend;\n      options.beforeSend = function(xhr) {\n        xhr.setRequestHeader('X-HTTP-Method-Override', type);\n        if (beforeSend) return beforeSend.apply(this, arguments);\n      };\n    }\n\n    // Don't process data on a non-GET request.\n    if (params.type !== 'GET' && !options.emulateJSON) {\n      params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error = options.error;\n    options.error = function(xhr, textStatus, errorThrown) {\n      options.textStatus = textStatus;\n      options.errorThrown = errorThrown;\n      if (error) error.call(options.context, xhr, textStatus, errorThrown);\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = Backbone.ajax(_.extend(params, options));\n    model.trigger('request', model, xhr, options);\n    return xhr;\n  };\n\n  // Map from CRUD to HTTP for our default `Backbone.sync` implementation.\n  var methodMap = {\n    'create': 'POST',\n    'update': 'PUT',\n    'patch':  'PATCH',\n    'delete': 'DELETE',\n    'read':   'GET'\n  };\n\n  // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n  // Override this if you'd like to use a different library.\n  Backbone.ajax = function() {\n    return Backbone.$.ajax.apply(Backbone.$, arguments);\n  };\n\n  // Backbone.Router\n  // ---------------\n\n  // Routers map faux-URLs to actions, and fire events when routes are\n  // matched. Creating a new one sets its `routes` hash, if not set statically.\n  var Router = Backbone.Router = function(options) {\n    options || (options = {});\n    if (options.routes) this.routes = options.routes;\n    this._bindRoutes();\n    this.initialize.apply(this, arguments);\n  };\n\n  // Cached regular expressions for matching named param parts and splatted\n  // parts of route strings.\n  var optionalParam = /\\((.*?)\\)/g;\n  var namedParam    = /(\\(\\?)?:\\w+/g;\n  var splatParam    = /\\*\\w+/g;\n  var escapeRegExp  = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n  // Set up all inheritable **Backbone.Router** properties and methods.\n  _.extend(Router.prototype, Events, {\n\n    // Initialize is an empty function by default. Override it with your own\n    // initialization logic.\n    initialize: function(){},\n\n    // Manually bind a single named route to a callback. For example:\n    //\n    //     this.route('search/:query/p:num', 'search', function(query, num) {\n    //       ...\n    //     });\n    //\n    route: function(route, name, callback) {\n      if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n      if (_.isFunction(name)) {\n        callback = name;\n        name = '';\n      }\n      if (!callback) callback = this[name];\n      var router = this;\n      Backbone.history.route(route, function(fragment) {\n        var args = router._extractParameters(route, fragment);\n        if (router.execute(callback, args, name) !== false) {\n          router.trigger.apply(router, ['route:' + name].concat(args));\n          router.trigger('route', name, args);\n          Backbone.history.trigger('route', router, name, args);\n        }\n      });\n      return this;\n    },\n\n    // Execute a route handler with the provided parameters.  This is an\n    // excellent place to do pre-route setup or post-route cleanup.\n    execute: function(callback, args, name) {\n      if (callback) callback.apply(this, args);\n    },\n\n    // Simple proxy to `Backbone.history` to save a fragment into the history.\n    navigate: function(fragment, options) {\n      Backbone.history.navigate(fragment, options);\n      return this;\n    },\n\n    // Bind all defined routes to `Backbone.history`. We have to reverse the\n    // order of the routes here to support behavior where the most general\n    // routes can be defined at the bottom of the route map.\n    _bindRoutes: function() {\n      if (!this.routes) return;\n      this.routes = _.result(this, 'routes');\n      var route, routes = _.keys(this.routes);\n      while ((route = routes.pop()) != null) {\n        this.route(route, this.routes[route]);\n      }\n    },\n\n    // Convert a route string into a regular expression, suitable for matching\n    // against the current location hash.\n    _routeToRegExp: function(route) {\n      route = route.replace(escapeRegExp, '\\\\$&')\n                   .replace(optionalParam, '(?:$1)?')\n                   .replace(namedParam, function(match, optional) {\n                     return optional ? match : '([^/?]+)';\n                   })\n                   .replace(splatParam, '([^?]*?)');\n      return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n    },\n\n    // Given a route, and a URL fragment that it matches, return the array of\n    // extracted decoded parameters. Empty or unmatched parameters will be\n    // treated as `null` to normalize cross-browser behavior.\n    _extractParameters: function(route, fragment) {\n      var params = route.exec(fragment).slice(1);\n      return _.map(params, function(param, i) {\n        // Don't decode the search params.\n        if (i === params.length - 1) return param || null;\n        return param ? decodeURIComponent(param) : null;\n      });\n    }\n\n  });\n\n  // Backbone.History\n  // ----------------\n\n  // Handles cross-browser history management, based on either\n  // [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n  // [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n  // and URL fragments. If the browser supports neither (old IE, natch),\n  // falls back to polling.\n  var History = Backbone.History = function() {\n    this.handlers = [];\n    _.bindAll(this, 'checkUrl');\n\n    // Ensure that `History` can be used outside of the browser.\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n  };\n\n  // Cached regex for stripping a leading hash/slash and trailing space.\n  var routeStripper = /^[#\\/]|\\s+$/g;\n\n  // Cached regex for stripping leading and trailing slashes.\n  var rootStripper = /^\\/+|\\/+$/g;\n\n  // Cached regex for stripping urls of hash.\n  var pathStripper = /#.*$/;\n\n  // Has the history handling already been started?\n  History.started = false;\n\n  // Set up all inheritable **Backbone.History** properties and methods.\n  _.extend(History.prototype, Events, {\n\n    // The default interval to poll for hash changes, if necessary, is\n    // twenty times a second.\n    interval: 50,\n\n    // Are we at the app root?\n    atRoot: function() {\n      var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n      return path === this.root && !this.getSearch();\n    },\n\n    // Does the pathname match the root?\n    matchRoot: function() {\n      var path = this.decodeFragment(this.location.pathname);\n      var root = path.slice(0, this.root.length - 1) + '/';\n      return root === this.root;\n    },\n\n    // Unicode characters in `location.pathname` are percent encoded so they're\n    // decoded for comparison. `%25` should not be decoded since it may be part\n    // of an encoded parameter.\n    decodeFragment: function(fragment) {\n      return decodeURI(fragment.replace(/%25/g, '%2525'));\n    },\n\n    // In IE6, the hash fragment and search params are incorrect if the\n    // fragment contains `?`.\n    getSearch: function() {\n      var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n      return match ? match[0] : '';\n    },\n\n    // Gets the true hash value. Cannot use location.hash directly due to bug\n    // in Firefox where location.hash will always be decoded.\n    getHash: function(window) {\n      var match = (window || this).location.href.match(/#(.*)$/);\n      return match ? match[1] : '';\n    },\n\n    // Get the pathname and search params, without the root.\n    getPath: function() {\n      var path = this.decodeFragment(\n        this.location.pathname + this.getSearch()\n      ).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    },\n\n    // Get the cross-browser normalized URL fragment from the path or hash.\n    getFragment: function(fragment) {\n      if (fragment == null) {\n        if (this._usePushState || !this._wantsHashChange) {\n          fragment = this.getPath();\n        } else {\n          fragment = this.getHash();\n        }\n      }\n      return fragment.replace(routeStripper, '');\n    },\n\n    // Start the hash change handling, returning `true` if the current URL matches\n    // an existing route, and `false` otherwise.\n    start: function(options) {\n      if (History.started) throw new Error('Backbone.history has already been started');\n      History.started = true;\n\n      // Figure out the initial configuration. Do we need an iframe?\n      // Is pushState desired ... is it available?\n      this.options          = _.extend({root: '/'}, this.options, options);\n      this.root             = this.options.root;\n      this._wantsHashChange = this.options.hashChange !== false;\n      this._hasHashChange   = 'onhashchange' in window;\n      this._useHashChange   = this._wantsHashChange && this._hasHashChange;\n      this._wantsPushState  = !!this.options.pushState;\n      this._hasPushState    = !!(this.history && this.history.pushState);\n      this._usePushState    = this._wantsPushState && this._hasPushState;\n      this.fragment         = this.getFragment();\n\n      // Normalize root to always include a leading and trailing slash.\n      this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n      // Transition from hashChange to pushState or vice versa if both are\n      // requested.\n      if (this._wantsHashChange && this._wantsPushState) {\n\n        // If we've started off with a route from a `pushState`-enabled\n        // browser, but we're currently in a browser that doesn't support it...\n        if (!this._hasPushState && !this.atRoot()) {\n          var root = this.root.slice(0, -1) || '/';\n          this.location.replace(root + '#' + this.getPath());\n          // Return immediately as browser will do redirect to new url\n          return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n        } else if (this._hasPushState && this.atRoot()) {\n          this.navigate(this.getHash(), {replace: true});\n        }\n\n      }\n\n      // Proxy an iframe to handle location events if the browser doesn't\n      // support the `hashchange` event, HTML5 history, or the user wants\n      // `hashChange` but not `pushState`.\n      if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n        this.iframe = document.createElement('iframe');\n        this.iframe.src = 'javascript:0';\n        this.iframe.style.display = 'none';\n        this.iframe.tabIndex = -1;\n        var body = document.body;\n        // Using `appendChild` will throw on IE < 9 if the document is not ready.\n        var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n        iWindow.document.open();\n        iWindow.document.close();\n        iWindow.location.hash = '#' + this.fragment;\n      }\n\n      // Add a cross-platform `addEventListener` shim for older browsers.\n      var addEventListener = window.addEventListener || function (eventName, listener) {\n        return attachEvent('on' + eventName, listener);\n      };\n\n      // Depending on whether we're using pushState or hashes, and whether\n      // 'onhashchange' is supported, determine how we check the URL state.\n      if (this._usePushState) {\n        addEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        addEventListener('hashchange', this.checkUrl, false);\n      } else if (this._wantsHashChange) {\n        this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n      }\n\n      if (!this.options.silent) return this.loadUrl();\n    },\n\n    // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n    // but possibly useful for unit testing Routers.\n    stop: function() {\n      // Add a cross-platform `removeEventListener` shim for older browsers.\n      var removeEventListener = window.removeEventListener || function (eventName, listener) {\n        return detachEvent('on' + eventName, listener);\n      };\n\n      // Remove window listeners.\n      if (this._usePushState) {\n        removeEventListener('popstate', this.checkUrl, false);\n      } else if (this._useHashChange && !this.iframe) {\n        removeEventListener('hashchange', this.checkUrl, false);\n      }\n\n      // Clean up the iframe if necessary.\n      if (this.iframe) {\n        document.body.removeChild(this.iframe);\n        this.iframe = null;\n      }\n\n      // Some environments will throw when clearing an undefined interval.\n      if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n      History.started = false;\n    },\n\n    // Add a route to be tested when the fragment changes. Routes added later\n    // may override previous routes.\n    route: function(route, callback) {\n      this.handlers.unshift({route: route, callback: callback});\n    },\n\n    // Checks the current URL to see if it has changed, and if it has,\n    // calls `loadUrl`, normalizing across the hidden iframe.\n    checkUrl: function(e) {\n      var current = this.getFragment();\n\n      // If the user pressed the back button, the iframe's hash will have\n      // changed and we should use that for comparison.\n      if (current === this.fragment && this.iframe) {\n        current = this.getHash(this.iframe.contentWindow);\n      }\n\n      if (current === this.fragment) return false;\n      if (this.iframe) this.navigate(current);\n      this.loadUrl();\n    },\n\n    // Attempt to load the current URL fragment. If a route succeeds with a\n    // match, returns `true`. If no defined routes matches the fragment,\n    // returns `false`.\n    loadUrl: function(fragment) {\n      // If the root doesn't match, no routes can match either.\n      if (!this.matchRoot()) return false;\n      fragment = this.fragment = this.getFragment(fragment);\n      return _.any(this.handlers, function(handler) {\n        if (handler.route.test(fragment)) {\n          handler.callback(fragment);\n          return true;\n        }\n      });\n    },\n\n    // Save a fragment into the hash history, or replace the URL state if the\n    // 'replace' option is passed. You are responsible for properly URL-encoding\n    // the fragment in advance.\n    //\n    // The options object can contain `trigger: true` if you wish to have the\n    // route callback be fired (not usually desirable), or `replace: true`, if\n    // you wish to modify the current URL without adding an entry to the history.\n    navigate: function(fragment, options) {\n      if (!History.started) return false;\n      if (!options || options === true) options = {trigger: !!options};\n\n      // Normalize the fragment.\n      fragment = this.getFragment(fragment || '');\n\n      // Don't include a trailing slash on the root.\n      var root = this.root;\n      if (fragment === '' || fragment.charAt(0) === '?') {\n        root = root.slice(0, -1) || '/';\n      }\n      var url = root + fragment;\n\n      // Strip the hash and decode for matching.\n      fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n      if (this.fragment === fragment) return;\n      this.fragment = fragment;\n\n      // If pushState is available, we use it to set the fragment as a real URL.\n      if (this._usePushState) {\n        this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n      } else if (this._wantsHashChange) {\n        this._updateHash(this.location, fragment, options.replace);\n        if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n          var iWindow = this.iframe.contentWindow;\n\n          // Opening and closing the iframe tricks IE7 and earlier to push a\n          // history entry on hash-tag change.  When replace is true, we don't\n          // want this.\n          if (!options.replace) {\n            iWindow.document.open();\n            iWindow.document.close();\n          }\n\n          this._updateHash(iWindow.location, fragment, options.replace);\n        }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n      } else {\n        return this.location.assign(url);\n      }\n      if (options.trigger) return this.loadUrl(fragment);\n    },\n\n    // Update the hash location, either replacing the current entry, or adding\n    // a new one to the browser history.\n    _updateHash: function(location, fragment, replace) {\n      if (replace) {\n        var href = location.href.replace(/(javascript:|#).*$/, '');\n        location.replace(href + '#' + fragment);\n      } else {\n        // Some browsers require that `hash` contains a leading #.\n        location.hash = '#' + fragment;\n      }\n    }\n\n  });\n\n  // Create the default Backbone.history.\n  Backbone.history = new History;\n\n  // Helpers\n  // -------\n\n  // Helper function to correctly set up the prototype chain for subclasses.\n  // Similar to `goog.inherits`, but uses a hash of prototype properties and\n  // class properties to be extended.\n  var extend = function(protoProps, staticProps) {\n    var parent = this;\n    var child;\n\n    // The constructor function for the new subclass is either defined by you\n    // (the \"constructor\" property in your `extend` definition), or defaulted\n    // by us to simply call the parent constructor.\n    if (protoProps && _.has(protoProps, 'constructor')) {\n      child = protoProps.constructor;\n    } else {\n      child = function(){ return parent.apply(this, arguments); };\n    }\n\n    // Add static properties to the constructor function, if supplied.\n    _.extend(child, parent, staticProps);\n\n    // Set the prototype chain to inherit from `parent`, without calling\n    // `parent` constructor function.\n    var Surrogate = function(){ this.constructor = child; };\n    Surrogate.prototype = parent.prototype;\n    child.prototype = new Surrogate;\n\n    // Add prototype properties (instance properties) to the subclass,\n    // if supplied.\n    if (protoProps) _.extend(child.prototype, protoProps);\n\n    // Set a convenience property in case the parent's prototype is needed\n    // later.\n    child.__super__ = parent.prototype;\n\n    return child;\n  };\n\n  // Set up inheritance for the model, collection, router, view and history.\n  Model.extend = Collection.extend = Router.extend = View.extend = History.extend = extend;\n\n  // Throw an error when a URL is needed, and none is supplied.\n  var urlError = function() {\n    throw new Error('A \"url\" property or function must be specified');\n  };\n\n  // Wrap an optional error callback with a fallback error event.\n  var wrapError = function(model, options) {\n    var error = options.error;\n    options.error = function(resp) {\n      if (error) error.call(options.context, model, resp, options);\n      model.trigger('error', model, resp, options);\n    };\n  };\n\n  return Backbone;\n\n}));\n\n","define('readium_plugin_annotations/annotations_module',['backbone'], function(Backbone) {\r\nvar EpubAnnotationsModule = function (contentDocumentDOM, bbPageSetView, annotationCSSUrl) {\r\n    \r\n    var EpubAnnotations = {};\r\n\r\n    // Rationale: The order of these matters\r\n    EpubAnnotations.TextLineInferrer = Backbone.Model.extend({\r\n\r\n    initialize : function (attributes, options) {},\r\n\r\n    // ----------------- PUBLIC INTERFACE --------------------------------------------------------------\r\n\r\n    inferLines : function (rectList) {\r\n\r\n        var inferredLines = [];\r\n        var numRects = rectList.length;\r\n        var numLines = 0;\r\n        var currLine;\r\n        var currRect;\r\n        var rectAppended;\r\n\r\n        // Iterate through each rect\r\n        for (var currRectNum = 0; currRectNum <= numRects - 1; currRectNum++) {\r\n            currRect = rectList[currRectNum];\r\n\r\n            // Check if the rect can be added to any of the current lines\r\n            rectAppended = false;\r\n            for (var currLineNum = 0; currLineNum <= numLines - 1; currLineNum++) {\r\n                currLine = inferredLines[currLineNum];\r\n\r\n                if (this.includeRectInLine(currLine, currRect.top, currRect.left, currRect.width, currRect.height)) {\r\n                    this.expandLine(currLine, currRect.left, currRect.top, currRect.width, currRect.height);\r\n                    rectAppended = true;\r\n                    break;   \r\n                }\r\n            } \r\n            \r\n            if (rectAppended) {\r\n                continue;\r\n            }\r\n            // If the rect can't be added to any existing lines, create a new line\r\n            else {\r\n                inferredLines.push(this.createNewLine(currRect.left, currRect.top, currRect.width, currRect.height));\r\n                numLines = numLines + 1; // Update the number of lines, so we're not using .length on every iteration\r\n            }\r\n        }\r\n\r\n        return inferredLines;\r\n    },\r\n\r\n\r\n    // ----------------- PRIVATE HELPERS ---------------------------------------------------------------\r\n\r\n    includeRectInLine : function (currLine, rectTop, rectLeft, rectWidth, rectHeight) {\r\n\r\n        // is on an existing line : based on vertical position\r\n        if (this.rectIsWithinLineVertically(rectTop, rectHeight, currLine.maxTop, currLine.maxBottom)) {\r\n            if (this.rectIsWithinLineHorizontally(rectLeft, rectWidth, currLine.left, currLine.width, currLine.avgHeight)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    rectIsWithinLineVertically : function (rectTop, rectHeight, currLineMaxTop, currLineMaxBottom) {\r\n\r\n        var rectBottom = rectTop + rectHeight;\r\n        var lineHeight = currLineMaxBottom - currLineMaxTop;\r\n        var lineHeightAdjustment = (lineHeight * 0.75) / 2;\r\n        var rectHeightAdjustment = (rectHeight * 0.75) / 2;\r\n\r\n        rectTop = rectTop + rectHeightAdjustment;\r\n        rectBottom = rectBottom - rectHeightAdjustment;\r\n        currLineMaxTop = currLineMaxTop + lineHeightAdjustment;\r\n        currLineMaxBottom = currLineMaxBottom - lineHeightAdjustment;\r\n\r\n        if (rectTop === currLineMaxTop && rectBottom === currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else if (rectTop < currLineMaxTop && rectBottom < currLineMaxBottom && rectBottom > currLineMaxTop) {\r\n            return true;\r\n        }\r\n        else if (rectTop > currLineMaxTop && rectBottom > currLineMaxBottom && rectTop < currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else if (rectTop > currLineMaxTop && rectBottom < currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else if (rectTop < currLineMaxTop && rectBottom > currLineMaxBottom) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    rectIsWithinLineHorizontally : function (rectLeft, rectWidth, currLineLeft, currLineWidth, currLineAvgHeight) {\r\n\r\n        var lineGapHeuristic = 2 * currLineAvgHeight;\r\n        var rectRight = rectLeft + rectWidth;\r\n        var currLineRight = rectLeft + currLineWidth;\r\n\r\n        if ((currLineLeft - rectRight) > lineGapHeuristic) {\r\n            return false;\r\n        }\r\n        else if ((rectLeft - currLineRight) > lineGapHeuristic) {\r\n            return false;\r\n        }\r\n        else {\r\n            return true;\r\n        }\r\n    },\r\n\r\n    createNewLine : function (rectLeft, rectTop, rectWidth, rectHeight) {\r\n\r\n        var maxBottom = rectTop + rectHeight;\r\n\r\n        return {\r\n            left : rectLeft,\r\n            startTop : rectTop,\r\n            width : rectWidth, \r\n            avgHeight : rectHeight, \r\n            maxTop : rectTop,\r\n            maxBottom : maxBottom,\r\n            numRects : 1\r\n        };\r\n    },\r\n\r\n    expandLine : function (currLine, rectLeft, rectTop, rectWidth, rectHeight) {\r\n\r\n        var lineOldRight = currLine.left + currLine.width; \r\n\r\n        // Update all the properties of the current line with rect dimensions\r\n        var rectRight = rectLeft + rectWidth;\r\n        var rectBottom = rectTop + rectHeight;\r\n        var numRectsPlusOne = currLine.numRects + 1;\r\n\r\n        // Average height calculation\r\n        var currSumHeights = currLine.avgHeight * currLine.numRects;\r\n        var avgHeight = ((currSumHeights + rectHeight) / numRectsPlusOne);\r\n        currLine.avgHeight = avgHeight;\r\n        currLine.numRects = numRectsPlusOne;\r\n\r\n        // Expand the line vertically\r\n        currLine = this.expandLineVertically(currLine, rectTop, rectBottom);\r\n        currLine = this.expandLineHorizontally(currLine, rectLeft, rectRight);        \r\n\r\n        return currLine;\r\n    },\r\n\r\n    expandLineVertically : function (currLine, rectTop, rectBottom) {\r\n\r\n        if (rectTop < currLine.maxTop) {\r\n            currLine.maxTop = rectTop;\r\n        } \r\n        if (rectBottom > currLine.maxBottom) {\r\n            currLine.maxBottom = rectBottom;\r\n        }\r\n\r\n        return currLine;\r\n    },\r\n\r\n    expandLineHorizontally : function (currLine, rectLeft, rectRight) {\r\n\r\n        var newLineLeft = currLine.left <= rectLeft ? currLine.left : rectLeft;\r\n        var lineRight = currLine.left + currLine.width;\r\n        var newLineRight = lineRight >= rectRight ? lineRight : rectRight;\r\n        var newLineWidth = newLineRight - newLineLeft;\r\n        currLine.left = newLineLeft;\r\n        currLine.width = newLineWidth;\r\n\r\n        return currLine;\r\n    }\r\n});\r\n    EpubAnnotations.Highlight = Backbone.Model.extend({\r\n\r\n    defaults : {\r\n        \"isVisible\" : false\r\n    },\r\n\r\n    initialize : function (attributes, options) {}\r\n});\r\n    EpubAnnotations.HighlightGroup = Backbone.Model.extend({\r\n\r\n    defaults : function () {\r\n        return {\r\n            \"selectedNodes\" : [],\r\n            \"highlightViews\" : []\r\n        };\r\n    },\r\n\r\n    initialize : function (attributes, options) {\r\n        this.set(\"scale\", attributes.scale);\r\n        this.constructHighlightViews();\r\n    },\r\n\r\n    // --------------- PRIVATE HELPERS ---------------------------------------\r\n\r\n    highlightGroupCallback : function (event) {\r\n\r\n        var that = this;\r\n        \r\n        // Trigger this event on each of the highlight views (except triggering event)\r\n        if (event.type === \"click\") {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationClicked\", \"highlight\", that.get(\"CFI\"), that.get(\"id\"), event);\r\n            return;\r\n        }\r\n\r\n\r\n        // Trigger this event on each of the highlight views (except triggering event)\r\n        if (event.type === \"contextmenu\") {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationRightClicked\", \"highlight\", that.get(\"CFI\"), that.get(\"id\"), event);\r\n            return;\r\n        }\r\n\r\n\r\n        // Events that are called on each member of the group\r\n        _.each(this.get(\"highlightViews\"), function (highlightView) {\r\n\r\n            if (event.type === \"mouseenter\") {\r\n                highlightView.setHoverHighlight();    \r\n            }\r\n            else if (event.type === \"mouseleave\") {\r\n                highlightView.setBaseHighlight();\r\n            }\r\n        });\r\n    },\r\n\r\n    constructHighlightViews : function () {\r\n\r\n        var that = this;\r\n        var rectList = [];\r\n        var inferrer;\r\n        var inferredLines;\r\n\r\n        _.each(this.get(\"selectedNodes\"), function (node, index) {\r\n\r\n            var rects;\r\n            var range = document.createRange();\r\n            range.selectNodeContents(node);\r\n            rects = range.getClientRects();\r\n\r\n            // REFACTORING CANDIDATE: Maybe a better way to append an array here\r\n            _.each(rects, function (rect) {\r\n                rectList.push(rect);\r\n            });\r\n        });\r\n\r\n        inferrer = new EpubAnnotations.TextLineInferrer();\r\n        inferredLines = inferrer.inferLines(rectList);\r\n\r\n        var scale = this.get(\"scale\");\r\n\r\n        _.each(inferredLines, function (line, index) {\r\n\r\n            var highlightTop = line.startTop / scale;;\r\n            var highlightLeft = line.left / scale;;\r\n            var highlightHeight = line.avgHeight / scale;\r\n            var highlightWidth = line.width / scale;;\r\n\r\n            var highlightView = new EpubAnnotations.HighlightView({\r\n                CFI : that.get(\"CFI\"),\r\n                top : highlightTop + that.get(\"offsetTopAddition\"),\r\n                left : highlightLeft + that.get(\"offsetLeftAddition\"),\r\n                height : highlightHeight,\r\n                width : highlightWidth,\r\n                styles : that.get('styles'),\r\n                highlightGroupCallback : that.highlightGroupCallback,\r\n                callbackContext : that\r\n            });\r\n\r\n            that.get(\"highlightViews\").push(highlightView);\r\n        });\r\n    },\r\n\r\n    resetHighlights : function (viewportElement, offsetTop, offsetLeft) {\r\n\r\n        if (offsetTop) {\r\n            this.set({ offsetTopAddition : offsetTop });\r\n        }\r\n        if (offsetLeft) {\r\n            this.set({ offsetLeftAddition : offsetLeft });\r\n        }\r\n\r\n        this.destroyCurrentHighlights();\r\n        this.constructHighlightViews();\r\n        this.renderHighlights(viewportElement);\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Ensure that event listeners are being properly cleaned up. \r\n    destroyCurrentHighlights : function () { \r\n\r\n        _.each(this.get(\"highlightViews\"), function (highlightView) {\r\n            highlightView.remove();\r\n            highlightView.off();\r\n        });\r\n\r\n        this.get(\"highlightViews\").length = 0;\r\n    },\r\n\r\n    renderHighlights : function (viewportElement) {\r\n\r\n        _.each(this.get(\"highlightViews\"), function (view, index) {\r\n            $(viewportElement).append(view.render());\r\n        });\r\n    },\r\n\r\n    toInfo : function () {\r\n\r\n        return {\r\n\r\n            id : this.get(\"id\"),\r\n            type : \"highlight\",\r\n            CFI : this.get(\"CFI\")\r\n        };\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n        var highlightViews = this.get('highlightViews');\r\n\r\n        this.set({styles : styles});\r\n\r\n        _.each(highlightViews, function(view, index) {\r\n            view.setStyles(styles);\r\n        });\r\n    }\r\n});\r\n\r\n    EpubAnnotations.Underline = Backbone.Model.extend({\r\n\r\n    defaults : {\r\n        \"isVisible\" : false\r\n    },\r\n\r\n    initialize : function (attributes, options) {}\r\n});\r\n    EpubAnnotations.UnderlineGroup = Backbone.Model.extend({\r\n\r\n    defaults : function () {\r\n        return {\r\n            \"selectedNodes\" : [],\r\n            \"underlineViews\" : []\r\n        };\r\n    },\r\n\r\n    initialize : function (attributes, options) {\r\n\r\n        this.constructUnderlineViews();\r\n    },\r\n\r\n    // --------------- PRIVATE HELPERS ---------------------------------------\r\n\r\n    underlineGroupCallback : function (event) {\r\n\r\n        var that = this;\r\n\r\n        // Trigger this event on each of the underline views (except triggering event)\r\n        if (event.type === \"click\") {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationClicked\", \"underline\", that.get(\"CFI\"), that.get(\"id\"), event);\r\n            return;\r\n        }\r\n\r\n        // Events that are called on each member of the group\r\n        _.each(this.get(\"underlineViews\"), function (underlineView) {\r\n\r\n            if (event.type === \"mouseenter\") {\r\n                underlineView.setHoverUnderline();\r\n            }\r\n            else if (event.type === \"mouseleave\") {\r\n                underlineView.setBaseUnderline();\r\n            }\r\n        });\r\n    },\r\n\r\n    constructUnderlineViews : function () {\r\n\r\n        var that = this;\r\n        var rectList = [];\r\n        var inferrer;\r\n        var inferredLines;\r\n\r\n        _.each(this.get(\"selectedNodes\"), function (node, index) {\r\n\r\n            var rects;\r\n            var range = document.createRange();\r\n            range.selectNodeContents(node);\r\n            rects = range.getClientRects();\r\n\r\n            // REFACTORING CANDIDATE: Maybe a better way to append an array here\r\n            _.each(rects, function (rect) {\r\n                rectList.push(rect);\r\n            });\r\n        });\r\n\r\n        inferrer = new EpubAnnotations.TextLineInferrer();\r\n        inferredLines = inferrer.inferLines(rectList);\r\n\r\n        _.each(inferredLines, function (line, index) {\r\n\r\n            var underlineTop = line.startTop;\r\n            var underlineLeft = line.left;\r\n            var underlineHeight = line.avgHeight;\r\n            var underlineWidth = line.width;\r\n\r\n            var underlineView = new EpubAnnotations.UnderlineView({\r\n                CFI : that.get(\"CFI\"),\r\n                top : underlineTop + that.get(\"offsetTopAddition\"),\r\n                left : underlineLeft + that.get(\"offsetLeftAddition\"),\r\n                height : underlineHeight,\r\n                width : underlineWidth,\r\n                styles : that.get(\"styles\"),\r\n                underlineGroupCallback : that.underlineGroupCallback,\r\n                callbackContext : that\r\n            });\r\n\r\n            that.get(\"underlineViews\").push(underlineView);\r\n        });\r\n    },\r\n\r\n    resetUnderlines : function (viewportElement, offsetTop, offsetLeft) {\r\n\r\n        if (offsetTop) {\r\n            this.set({ offsetTopAddition : offsetTop });\r\n        }\r\n        if (offsetLeft) {\r\n            this.set({ offsetLeftAddition : offsetLeft });\r\n        }\r\n\r\n        this.destroyCurrentUnderlines();\r\n        this.constructUnderlineViews();\r\n        this.renderUnderlines(viewportElement);\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Ensure that event listeners are being properly cleaned up. \r\n    destroyCurrentUnderlines : function () { \r\n\r\n        _.each(this.get(\"underlineViews\"), function (underlineView) {\r\n            underlineView.remove();\r\n            underlineView.off();\r\n        });\r\n\r\n        this.get(\"underlineViews\").length = 0;\r\n    },\r\n\r\n    renderUnderlines : function (viewportElement) {\r\n\r\n        _.each(this.get(\"underlineViews\"), function (view, index) {\r\n            $(viewportElement).append(view.render());\r\n        });\r\n    },\r\n\r\n    toInfo : function () {\r\n\r\n        return {\r\n\r\n            id : this.get(\"id\"),\r\n            type : \"underline\",\r\n            CFI : this.get(\"CFI\")\r\n        };\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n        \r\n        var underlineViews = this.get('underlineViews');\r\n\r\n        this.set({styles : styles});\r\n\r\n        _.each(underlineViews, function(view, index) {\r\n            view.setStyles(styles);\r\n        });\r\n    },\r\n});\r\n\r\n    EpubAnnotations.Bookmark = Backbone.Model.extend({\r\n\r\n    defaults : {\r\n        \"isVisible\" : false,\r\n        \"bookmarkCenteringAdjustment\" : 15,\r\n        \"bookmarkTopAdjustment\" : 45\r\n    },\r\n\r\n    initialize : function (attributes, options) {\r\n\r\n        // Figure out the top and left of the bookmark\r\n        // This should include the additional offset provided by the annotations object\r\n    },\r\n\r\n    getAbsoluteTop : function () {\r\n\r\n        var targetElementTop = $(this.get(\"targetElement\")).offset().top;\r\n        var bookmarkAbsoluteTop = this.get(\"offsetTopAddition\") + targetElementTop - this.get(\"bookmarkTopAdjustment\");\r\n        return bookmarkAbsoluteTop;\r\n    },\r\n\r\n    getAbsoluteLeft : function () {\r\n\r\n        var targetElementLeft = $(this.get(\"targetElement\")).offset().left;\r\n        var bookmarkAbsoluteLeft = this.get(\"offsetLeftAddition\") + targetElementLeft - this.get(\"bookmarkCenteringAdjustment\");\r\n        return bookmarkAbsoluteLeft;\r\n    },\r\n\r\n    toInfo : function () {\r\n\r\n        return {\r\n\r\n            id : this.get(\"id\"),\r\n            type : \"bookmark\",\r\n            CFI : this.get(\"CFI\")\r\n        };\r\n    }\r\n});\r\n    EpubAnnotations.ReflowableAnnotations = Backbone.Model.extend({\r\n\r\n    initialize : function (attributes, options) {\r\n        \r\n        this.epubCFI = EPUBcfi;\r\n        this.annotations = new EpubAnnotations.Annotations({\r\n            offsetTopAddition : 0, \r\n            offsetLeftAddition : 0, \r\n            readerBoundElement : $(\"html\", this.get(\"contentDocumentDOM\"))[0],\r\n            scale: 0,\r\n            bbPageSetView : this.get(\"bbPageSetView\")\r\n        });\r\n        // inject annotation CSS into iframe \r\n\r\n        \r\n        var annotationCSSUrl = this.get(\"annotationCSSUrl\");\r\n        if (annotationCSSUrl)\r\n        {\r\n            this.injectAnnotationCSS(annotationCSSUrl);\r\n        }\r\n\r\n        // emit an event when user selects some text.\r\n        var epubWindow = $(this.get(\"contentDocumentDOM\"));\r\n        var self = this;\r\n        epubWindow.on(\"mouseup\", function(event) {\r\n            var range = self.getCurrentSelectionRange();\r\n            if (range === undefined) {\r\n                return;\r\n            }\r\n            if (range.startOffset - range.endOffset) {\r\n                self.annotations.get(\"bbPageSetView\").trigger(\"textSelectionEvent\", event);\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n\r\n    // ------------------------------------------------------------------------------------ //\r\n    //  \"PUBLIC\" METHODS (THE API)                                                          //\r\n    // ------------------------------------------------------------------------------------ //\r\n\r\n    redraw : function () {\r\n\r\n        var leftAddition = -this.getPaginationLeftOffset();\r\n        this.annotations.redrawAnnotations(0, leftAddition);\r\n    },\r\n\r\n   removeHighlight: function(annotationId) {\r\n        return this.annotations.removeHighlight(annotationId)\r\n    },\r\n\r\n\r\n\r\n    addHighlight : function (CFI, id, type, styles) {\r\n\r\n        var CFIRangeInfo;\r\n        var range;\r\n        var rangeStartNode;\r\n        var rangeEndNode;\r\n        var selectedElements;\r\n        var leftAddition;\r\n        var startMarkerHtml = this.getRangeStartMarker(CFI, id);\r\n        var endMarkerHtml = this.getRangeEndMarker(CFI, id);\r\n\r\n        // TODO webkit specific?\r\n        var $html = $(this.get(\"contentDocumentDOM\"));\r\n        var matrix = $('html', $html).css('-webkit-transform');\r\n        var scale = new WebKitCSSMatrix(matrix).a;\r\n        this.set(\"scale\", scale);\r\n\r\n        try {\r\n            CFIRangeInfo = this.epubCFI.injectRangeElements(\r\n                CFI,\r\n                this.get(\"contentDocumentDOM\"),\r\n                startMarkerHtml,\r\n                endMarkerHtml,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n                );\r\n\r\n            // Get start and end marker for the id, using injected into elements\r\n            // REFACTORING CANDIDATE: Abstract range creation to account for no previous/next sibling, for different types of\r\n            //   sibiling, etc. \r\n            rangeStartNode = CFIRangeInfo.startElement.nextSibling ? CFIRangeInfo.startElement.nextSibling : CFIRangeInfo.startElement;\r\n            rangeEndNode = CFIRangeInfo.endElement.previousSibling ? CFIRangeInfo.endElement.previousSibling : CFIRangeInfo.endElement;\r\n            range = document.createRange();\r\n            range.setStart(rangeStartNode, 0);\r\n            range.setEnd(rangeEndNode, rangeEndNode.length);\r\n\r\n            selectionInfo = this.getSelectionInfo(range);\r\n            leftAddition = -this.getPaginationLeftOffset();\r\n\r\n            if (type === \"highlight\") {\r\n                this.annotations.set('scale', this.get('scale'));\r\n                this.annotations.addHighlight(CFI, selectionInfo.selectedElements, id, 0, leftAddition, CFIRangeInfo.startElement, CFIRangeInfo.endElement, styles);\r\n            }\r\n            else if (type === \"underline\") {\r\n                this.annotations.addUnderline(CFI, selectionInfo.selectedElements, id, 0, leftAddition, styles);\r\n            }\r\n\r\n            return {\r\n                CFI : CFI, \r\n                selectedElements : selectionInfo.selectedElements\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n\r\n    addBookmark : function (CFI, id, type) {\r\n\r\n        var selectedElements;\r\n        var bookmarkMarkerHtml = this.getBookmarkMarker(CFI, id);\r\n        var $injectedElement;\r\n        var leftAddition;\r\n\r\n        try {\r\n            $injectedElement = this.epubCFI.injectElement(\r\n                CFI,\r\n                this.get(\"contentDocumentDOM\"),\r\n                bookmarkMarkerHtml,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n\r\n            // Add bookmark annotation here\r\n            leftAddition = -this.getPaginationLeftOffset();\r\n            this.annotations.addBookmark(CFI, $injectedElement[0], id, 0, leftAddition, type);\r\n\r\n            return {\r\n\r\n                CFI : CFI, \r\n                selectedElements : $injectedElement[0]\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n\r\n    addImageAnnotation : function (CFI, id) {\r\n\r\n        var selectedElements;\r\n        var bookmarkMarkerHtml = this.getBookmarkMarker(CFI, id);\r\n        var $targetImage;\r\n\r\n        try {\r\n            $targetImage = this.epubCFI.getTargetElement(\r\n                CFI,\r\n                this.get(\"contentDocumentDOM\"),\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n            this.annotations.addImageAnnotation(CFI, $targetImage[0], id);\r\n\r\n            return {\r\n\r\n                CFI : CFI, \r\n                selectedElements : $targetImage[0]\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error.message);\r\n        }\r\n    },\r\n\r\n    // this returns a partial CFI only!!\r\n    getCurrentSelectionCFI: function() {\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var CFI;\r\n        if (currentSelection) {\r\n            selectionInfo = this.getSelectionInfo(currentSelection);\r\n            CFI = selectionInfo.CFI;\r\n        }\r\n\r\n        return CFI;\r\n    },\r\n\r\n    // this returns a partial CFI only!!\r\n    getCurrentSelectionOffsetCFI: function() {\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n\r\n        var CFI;\r\n        if (currentSelection) {\r\n            CFI = this.generateCharOffsetCFI(currentSelection);\r\n        }\r\n        return CFI;\r\n    },\r\n\r\n\r\n    /// TODODM refactor thhis using getCurrentSelectionCFI (above)\r\n\r\n\r\n    addSelectionHighlight : function (id, type, styles) {\r\n\r\n        var arbitraryPackageDocCFI = \"/99!\"\r\n        var generatedContentDocCFI;\r\n        var CFI;\r\n        var selectionInfo;\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var annotationInfo;\r\n\r\n        if (currentSelection) {\r\n\r\n            selectionInfo = this.getSelectionInfo(currentSelection);\r\n            generatedContentDocCFI = selectionInfo.CFI;\r\n            CFI = \"epubcfi(\" + arbitraryPackageDocCFI + generatedContentDocCFI + \")\";\r\n            if (type === \"highlight\") {\r\n                annotationInfo = this.addHighlight(CFI, id, type, styles);\r\n            }\r\n            else if (type === \"underline\") {\r\n                annotationInfo = this.addHighlight(CFI, id, type, styles);\r\n            }\r\n\r\n            // Rationale: The annotationInfo object returned from .addBookmark(...) contains the same value of \r\n            //   the CFI variable in the current scope. Since this CFI variable contains a \"hacked\" CFI value -\r\n            //   only the content document portion is valid - we want to replace the annotationInfo.CFI property with\r\n            //   the partial content document CFI portion we originally generated.\r\n            annotationInfo.CFI = generatedContentDocCFI;            \r\n            return annotationInfo;\r\n        }\r\n        else {\r\n            throw new Error(\"Nothing selected\");\r\n        }\r\n    },\r\n\r\n    addSelectionBookmark : function (id, type) {\r\n\r\n        var arbitraryPackageDocCFI = \"/99!\"\r\n        var generatedContentDocCFI;\r\n        var CFI;\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var annotationInfo;\r\n\r\n        if (currentSelection) {\r\n\r\n            generatedContentDocCFI = this.generateCharOffsetCFI(currentSelection);\r\n            CFI = \"epubcfi(\" + arbitraryPackageDocCFI + generatedContentDocCFI + \")\";\r\n            annotationInfo = this.addBookmark(CFI, id, type);\r\n\r\n            // Rationale: The annotationInfo object returned from .addBookmark(...) contains the same value of \r\n            //   the CFI variable in the current scope. Since this CFI variable contains a \"hacked\" CFI value -\r\n            //   only the content document portion is valid - we want to replace the annotationInfo.CFI property with\r\n            //   the partial content document CFI portion we originally generated.\r\n            annotationInfo.CFI = generatedContentDocCFI;\r\n            return annotationInfo;\r\n        }\r\n        else {\r\n            throw new Error(\"Nothing selected\");\r\n        }\r\n    },\r\n\r\n    addSelectionImageAnnotation : function (id) {\r\n\r\n        var arbitraryPackageDocCFI = \"/99!\"\r\n        var generatedContentDocCFI;\r\n        var CFI;\r\n        var selectionInfo;\r\n        var currentSelection = this.getCurrentSelectionRange();\r\n        var annotationInfo;\r\n        var firstSelectedImage;\r\n\r\n        if (currentSelection) {\r\n\r\n            selectionInfo = this.getSelectionInfo(currentSelection, [\"img\"]);\r\n            firstSelectedImage = selectionInfo.selectedElements[0];\r\n            generatedContentDocCFI = this.epubCFI.generateElementCFIComponent(\r\n                firstSelectedImage,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n            CFI = \"epubcfi(\" + arbitraryPackageDocCFI + generatedContentDocCFI + \")\";\r\n            annotationInfo = this.addImageAnnotation(CFI, id);\r\n\r\n            // Rationale: The annotationInfo object returned from .addBookmark(...) contains the same value of \r\n            //   the CFI variable in the current scope. Since this CFI variable contains a \"hacked\" CFI value -\r\n            //   only the content document portion is valid - we want to replace the annotationInfo.CFI property with\r\n            //   the partial content document CFI portion we originally generated.\r\n            annotationInfo.CFI = generatedContentDocCFI;\r\n            return annotationInfo;\r\n        }\r\n        else {\r\n            throw new Error(\"Nothing selected\");\r\n        }\r\n    },\r\n\r\n    updateAnnotationView : function (id, styles) {\r\n\r\n        var annotationViews = this.annotations.updateAnnotationView(id, styles);\r\n\r\n        return annotationViews;\r\n    },\r\n\r\n    // ------------------------------------------------------------------------------------ //\r\n    //  \"PRIVATE\" HELPERS                                                                   //\r\n    // ------------------------------------------------------------------------------------ //\r\n\r\n    getSelectionInfo : function (selectedRange, elementType) {\r\n\r\n        // Generate CFI for selected text\r\n        var CFI = this.generateRangeCFI(selectedRange);\r\n        var intervalState = {\r\n            startElementFound : false,\r\n            endElementFound : false\r\n        };\r\n        var selectedElements = [];\r\n\r\n        if (!elementType) {\r\n            var elementType = [\"text\"];\r\n        }\r\n\r\n        this.findSelectedElements(\r\n            selectedRange.commonAncestorContainer, \r\n            selectedRange.startContainer, \r\n            selectedRange.endContainer,\r\n            intervalState,\r\n            selectedElements, \r\n            elementType\r\n        );\r\n\r\n        // Return a list of selected text nodes and the CFI\r\n        return {\r\n            CFI : CFI,\r\n            selectedElements : selectedElements\r\n        };\r\n    },\r\n\r\n    generateRangeCFI : function (selectedRange) {\r\n\r\n        var startNode = selectedRange.startContainer;\r\n        var endNode = selectedRange.endContainer;\r\n        var startOffset;\r\n        var endOffset;\r\n        var rangeCFIComponent;\r\n\r\n        if (startNode.nodeType === Node.TEXT_NODE && endNode.nodeType === Node.TEXT_NODE) {\r\n\r\n            startOffset = selectedRange.startOffset;\r\n            endOffset = selectedRange.endOffset;\r\n\r\n            rangeCFIComponent = this.epubCFI.generateCharOffsetRangeComponent(\r\n                startNode, \r\n                startOffset, \r\n                endNode, \r\n                endOffset,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n                );\r\n            return rangeCFIComponent;\r\n        }\r\n        else {\r\n            throw new Error(\"Selection start and end must be text nodes\");\r\n        }\r\n    },\r\n\r\n    generateCharOffsetCFI : function (selectedRange) {\r\n\r\n        // Character offset\r\n        var startNode = selectedRange.startContainer;\r\n        var startOffset = selectedRange.startOffset;\r\n        var charOffsetCFI;\r\n\r\n        if (startNode.nodeType === Node.TEXT_NODE) {\r\n            charOffsetCFI = this.epubCFI.generateCharacterOffsetCFIComponent(\r\n                startNode,\r\n                startOffset,\r\n                [\"cfi-marker\", \"mo-cfi-highlight\"],\r\n                [],\r\n                [\"MathJax_Message\"]\r\n            );\r\n        }\r\n        return charOffsetCFI;\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Convert this to jquery\r\n    findSelectedElements : function (currElement, startElement, endElement, intervalState, selectedElements, elementTypes) {\r\n\r\n        if (currElement === startElement) {\r\n            intervalState.startElementFound = true;\r\n        }\r\n\r\n        if (intervalState.startElementFound === true) {\r\n            this.addElement(currElement, selectedElements, elementTypes);\r\n        }\r\n\r\n        if (currElement === endElement) {\r\n            intervalState.endElementFound = true;\r\n            return;\r\n        }\r\n\r\n        if (currElement.firstChild) {\r\n            this.findSelectedElements(currElement.firstChild, startElement, endElement, intervalState, selectedElements, elementTypes);\r\n            if (intervalState.endElementFound) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (currElement.nextSibling) {\r\n            this.findSelectedElements(currElement.nextSibling, startElement, endElement, intervalState, selectedElements, elementTypes);\r\n            if (intervalState.endElementFound) {\r\n                return;\r\n            }\r\n        }\r\n    },\r\n\r\n    addElement : function (currElement, selectedElements, elementTypes) {\r\n\r\n        // Check if the node is one of the types\r\n        _.each(elementTypes, function (elementType) {\r\n\r\n            if (elementType === \"text\") {\r\n                if (currElement.nodeType === Node.TEXT_NODE) {\r\n                    selectedElements.push(currElement);\r\n                }\r\n            }\r\n            else {\r\n                if ($(currElement).is(elementType)) {\r\n                    selectedElements.push(currElement);    \r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    // Rationale: This is a cross-browser method to get the currently selected text\r\n    getCurrentSelectionRange : function () {\r\n\r\n        var currentSelection;\r\n        var iframeDocument = this.get(\"contentDocumentDOM\");\r\n        if (iframeDocument.getSelection) {\r\n            currentSelection = iframeDocument.getSelection();\r\n\r\n            if (currentSelection && currentSelection.rangeCount && (currentSelection.anchorOffset !== currentSelection.focusOffset)) {\r\n                return currentSelection.getRangeAt(0);\r\n            }else{\r\n                return undefined;\r\n            }\r\n        }\r\n        else if (iframeDocument.selection) {\r\n            return iframeDocument.selection.createRange();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getPaginationLeftOffset : function () {\r\n\r\n        var $htmlElement = $(\"html\", this.get(\"contentDocumentDOM\"));\r\n        var offsetLeftPixels = $htmlElement.css(\"left\");\r\n        var offsetLeft = parseInt(offsetLeftPixels.replace(\"px\", \"\"));\r\n        return offsetLeft;\r\n    },\r\n\r\n    getBookmarkMarker : function (CFI, id) {\r\n\r\n        return \"<span class='bookmark-marker cfi-marker' id='\" + id + \"' data-cfi='\" + CFI + \"'></span>\";\r\n    },\r\n\r\n    getRangeStartMarker : function (CFI, id) {\r\n\r\n        return \"<span class='range-start-marker cfi-marker' id='start-\" + id + \"' data-cfi='\" + CFI + \"'></span>\";\r\n    },\r\n\r\n    getRangeEndMarker : function (CFI, id) {\r\n\r\n        return \"<span class='range-end-marker cfi-marker' id='end-\" + id + \"' data-cfi='\" + CFI + \"'></span>\";\r\n    },\r\n\r\n    injectAnnotationCSS : function (annotationCSSUrl) {\r\n\r\n        var $contentDocHead = $(\"head\", this.get(\"contentDocumentDOM\"));\r\n        $contentDocHead.append(\r\n            $(\"<link/>\", { rel : \"stylesheet\", href : annotationCSSUrl, type : \"text/css\" })\r\n        );\r\n    }\r\n});\r\n\r\n    EpubAnnotations.Annotations = Backbone.Model.extend({\r\n\r\n    defaults : function () {\r\n        return {\r\n            \"bookmarkViews\" : [],\r\n            \"highlights\" : [],\r\n            \"markers\"    : {},\r\n            \"underlines\" : [],\r\n            \"imageAnnotations\" : [],\r\n            \"annotationHash\" : {},\r\n            \"offsetTopAddition\" : 0,\r\n            \"offsetLeftAddition\" : 0,\r\n            \"readerBoundElement\" : undefined\r\n        };\r\n    },\r\n\r\n    initialize : function (attributes, options) {},\r\n\r\n\r\n    remove: function() {\r\n        var that = this;\r\n        _.each(this.get(\"highlights\"), function (highlightGroup) {\r\n            highlightGroup.remove();\r\n        });\r\n    },\r\n\r\n    redrawAnnotations : function (offsetTop, offsetLeft) {\r\n\r\n        var that = this;\r\n        // Highlights\r\n        _.each(this.get(\"highlights\"), function (highlightGroup) {\r\n            highlightGroup.resetHighlights(that.get(\"readerBoundElement\"), offsetTop, offsetLeft);\r\n        });\r\n\r\n        // Bookmarks\r\n        _.each(this.get(\"bookmarkViews\"), function (bookmarkView) {\r\n            bookmarkView.resetBookmark(offsetTop, offsetLeft);\r\n        });\r\n\r\n        // Underlines\r\n        _.each(this.get(\"underlines\"), function (underlineGroup) {\r\n            underlineGroup.resetUnderlines(that.get(\"readerBoundElement\"), offsetTop, offsetLeft);\r\n        });\r\n    },\r\n\r\n    getBookmark : function (id) {\r\n\r\n        var bookmarkView = this.get(\"annotationHash\")[id];\r\n        if (bookmarkView) {\r\n            return bookmarkView.bookmark.toInfo();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getHighlight : function (id) {\r\n\r\n        var highlight = this.get(\"annotationHash\")[id];\r\n        if (highlight) {\r\n            return highlight.toInfo();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getUnderline : function (id) {\r\n\r\n        var underline = this.get(\"annotationHash\")[id];\r\n        if (underline) {\r\n            return underline.toInfo();\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    },\r\n\r\n    getBookmarks : function () {\r\n\r\n        var bookmarks = [];\r\n        _.each(this.get(\"bookmarkViews\"), function (bookmarkView) {\r\n\r\n            bookmarks.push(bookmarkView.bookmark.toInfo());\r\n        });\r\n        return bookmarks;\r\n    },\r\n\r\n    getHighlights : function () {\r\n\r\n        var highlights = [];\r\n        _.each(this.get(\"highlights\"), function (highlight) {\r\n\r\n            highlights.push(highlight.toInfo());\r\n        });\r\n        return highlights;\r\n    },\r\n\r\n    getUnderlines : function () {\r\n\r\n        var underlines = [];\r\n        _.each(this.get(\"underlines\"), function (underline) {\r\n\r\n            underlines.push(underline.toInfo());\r\n        });\r\n        return underlines;\r\n    },\r\n\r\n    getImageAnnotations : function () {\r\n\r\n        var imageAnnotations = [];\r\n        _.each(this.get(\"imageAnnotations\"), function (imageAnnotation) {\r\n\r\n            imageAnnotations.push(imageAnnotation.toInfo());\r\n        });\r\n        return imageAnnotations;\r\n    },\r\n\r\n    addBookmark : function (CFI, targetElement, annotationId, offsetTop, offsetLeft, type) {\r\n\r\n        if (!offsetTop) {\r\n            offsetTop = this.get(\"offsetTopAddition\");\r\n        }\r\n        if (!offsetLeft) {\r\n            offsetLeft = this.get(\"offsetLeftAddition\");\r\n        }\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var bookmarkView = new EpubAnnotations.BookmarkView({\r\n            CFI : CFI,\r\n            targetElement : targetElement, \r\n            offsetTopAddition : offsetTop,\r\n            offsetLeftAddition : offsetLeft,\r\n            id : annotationId.toString(),\r\n            bbPageSetView : this.get(\"bbPageSetView\"),\r\n            type : type\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = bookmarkView;\r\n        this.get(\"bookmarkViews\").push(bookmarkView);\r\n        $(this.get(\"readerBoundElement\")).append(bookmarkView.render());\r\n    },\r\n\r\n    removeHighlight: function(annotationId) {\r\n        var annotationHash = this.get(\"annotationHash\");\r\n        var highlights = this.get(\"highlights\");\r\n        var markers = this.get(\"markers\");\r\n\r\n        if (!markers[annotationId])\r\n            return;\r\n\r\n        var startMarker =  markers[annotationId].startMarker;\r\n        var endMarker = markers[annotationId].endMarker;\r\n\r\n        startMarker.parentNode.removeChild(startMarker);\r\n        endMarker.parentNode.removeChild(endMarker);\r\n\r\n        delete markers[annotationId];\r\n\r\n        delete annotationHash[annotationId];\r\n\r\n        highlights = _.reject(highlights, \r\n                              function(obj) { \r\n                                  if (obj.id == annotationId) {\r\n                                      obj.destroyCurrentHighlights();\r\n                                      return true;\r\n                                  } else {\r\n                                      return false;\r\n                                  }\r\n                              }\r\n                             );\r\n\r\n\r\n                             this.set(\"highlights\", highlights);\r\n    },\r\n\r\n    addHighlight : function (CFI, highlightedTextNodes, annotationId, offsetTop, offsetLeft, startMarker, endMarker, styles) {\r\n        if (!offsetTop) {\r\n            offsetTop = this.get(\"offsetTopAddition\");\r\n        }\r\n        if (!offsetLeft) {\r\n            offsetLeft = this.get(\"offsetLeftAddition\");\r\n        }\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var highlightGroup = new EpubAnnotations.HighlightGroup({\r\n            CFI : CFI,\r\n            selectedNodes : highlightedTextNodes,\r\n            offsetTopAddition : offsetTop,\r\n            offsetLeftAddition : offsetLeft,\r\n            styles: styles, \r\n            id : annotationId,\r\n            bbPageSetView : this.get(\"bbPageSetView\"),\r\n            scale: this.get(\"scale\")\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = highlightGroup;\r\n        this.get(\"highlights\").push(highlightGroup);\r\n        this.get(\"markers\")[annotationId] = {\"startMarker\": startMarker, \"endMarker\":endMarker};\r\n        highlightGroup.renderHighlights(this.get(\"readerBoundElement\"));\r\n    },\r\n\r\n    addUnderline : function (CFI, underlinedTextNodes, annotationId, offsetTop, offsetLeft, styles) {\r\n\r\n        if (!offsetTop) {\r\n            offsetTop = this.get(\"offsetTopAddition\");\r\n        }\r\n        if (!offsetLeft) {\r\n            offsetLeft = this.get(\"offsetLeftAddition\");\r\n        }\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var underlineGroup = new EpubAnnotations.UnderlineGroup({\r\n            CFI : CFI,\r\n            selectedNodes : underlinedTextNodes,\r\n            offsetTopAddition : offsetTop,\r\n            offsetLeftAddition : offsetLeft,\r\n            styles: styles,\r\n            id : annotationId,\r\n            bbPageSetView : this.get(\"bbPageSetView\")\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = underlineGroup;\r\n        this.get(\"underlines\").push(underlineGroup);\r\n        underlineGroup.renderUnderlines(this.get(\"readerBoundElement\"));\r\n    },\r\n\r\n    addImageAnnotation : function (CFI, imageNode, annotationId) {\r\n\r\n        annotationId = annotationId.toString();\r\n        this.validateAnnotationId(annotationId);\r\n\r\n        var imageAnnotation = new EpubAnnotations.ImageAnnotation({\r\n            CFI : CFI,\r\n            imageNode : imageNode,\r\n            id : annotationId,\r\n            bbPageSetView : this.get(\"bbPageSetView\")\r\n        });\r\n        this.get(\"annotationHash\")[annotationId] = imageAnnotation;\r\n        this.get(\"imageAnnotations\").push(imageAnnotation);\r\n        imageAnnotation.render();\r\n    },\r\n\r\n    updateAnnotationView : function (id, styles) {\r\n        var annotationViews = this.get(\"annotationHash\")[id];\r\n\r\n        annotationViews.setStyles(styles);\r\n\r\n        return annotationViews;\r\n    },\r\n\r\n    // REFACTORING CANDIDATE: Some kind of hash lookup would be more efficient here, might want to \r\n    //   change the implementation of the annotations as an array\r\n    validateAnnotationId : function (id) {\r\n\r\n        if (this.get(\"annotationHash\")[id]) {\r\n            throw new Error(\"That annotation id already exists; annotation not added\");\r\n        }\r\n    }\r\n});\r\n\r\n    EpubAnnotations.BookmarkView = Backbone.View.extend({\r\n\r\n    el : \"<div></div>\",\r\n\r\n    events : {\r\n        \"mouseenter\" : \"setHoverBookmark\",\r\n        \"mouseleave\" : \"setBaseBookmark\",\r\n        \"click\" : \"clickHandler\"\r\n    },\r\n\r\n    initialize : function (options) {\r\n\r\n        this.bookmark = new EpubAnnotations.Bookmark({\r\n            CFI : options.CFI,\r\n            targetElement : options.targetElement, \r\n            offsetTopAddition : options.offsetTopAddition,\r\n            offsetLeftAddition : options.offsetLeftAddition,\r\n            id : options.id,\r\n            bbPageSetView : options.bbPageSetView,\r\n            type : options.type\r\n        });\r\n    },\r\n\r\n    resetBookmark : function (offsetTop, offsetLeft) {\r\n\r\n        if (offsetTop) {\r\n            this.bookmark.set({ offsetTopAddition : offsetTop });\r\n        }\r\n\r\n        if (offsetLeft) {\r\n            this.bookmark.set({ offsetLeftAddition : offsetLeft });\r\n        }\r\n        this.setCSS();\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n        return this.el;\r\n    },\r\n\r\n    setCSS : function () {\r\n\r\n        var absoluteTop;\r\n        var absoluteLeft;\r\n\r\n        if (this.bookmark.get(\"type\") === \"comment\") {\r\n            absoluteTop = this.bookmark.getAbsoluteTop();\r\n            absoluteLeft = this.bookmark.getAbsoluteLeft();\r\n            this.$el.css({ \r\n                \"top\" : absoluteTop + \"px\",\r\n                \"left\" : absoluteLeft + \"px\",\r\n                \"width\" : \"50px\",\r\n                \"height\" : \"50px\",\r\n                \"position\" : \"absolute\"\r\n            });\r\n            this.$el.addClass(\"comment\");\r\n        }\r\n        else {\r\n            this.$el.addClass(\"bookmark\");\r\n        }\r\n    },\r\n\r\n    setHoverBookmark : function (event) {\r\n\r\n        event.stopPropagation();\r\n        if (this.$el.hasClass(\"comment\")) {\r\n            this.$el.removeClass(\"comment\");\r\n            this.$el.addClass(\"hover-comment\");\r\n        }\r\n    },\r\n\r\n    setBaseBookmark : function (event) {\r\n\r\n        event.stopPropagation();\r\n        if (this.$el.hasClass(\"hover-comment\")) {\r\n            this.$el.removeClass(\"hover-comment\");\r\n            this.$el.addClass(\"comment\");\r\n        }\r\n    },\r\n\r\n    clickHandler : function (event) {\r\n\r\n        event.stopPropagation();\r\n        var type;\r\n        if (this.bookmark.get(\"type\") === \"comment\") {\r\n            type = \"comment\";\r\n        }\r\n        else {\r\n            type = \"bookmark\";\r\n        }\r\n\r\n        this.bookmark.get(\"bbPageSetView\").trigger(\"annotationClicked\", \r\n            type, \r\n            this.bookmark.get(\"CFI\"), \r\n            this.bookmark.get(\"id\"),\r\n            this.$el.css(\"top\"),\r\n            this.$el.css(\"left\"),\r\n            event\r\n        );\r\n    }\r\n});\r\n\r\n    EpubAnnotations.HighlightView = Backbone.View.extend({\r\n\r\n    el : \"<div class='highlight'></div>\",\r\n\r\n    events : {\r\n        \"mouseenter\" : \"highlightEvent\",\r\n        \"mouseleave\" : \"highlightEvent\",\r\n        \"click\" : \"highlightEvent\",\r\n        \"contextmenu\" : \"highlightEvent\"\r\n    },\r\n\r\n    initialize : function (options) {\r\n\r\n        this.highlight = new EpubAnnotations.Highlight({\r\n            CFI : options.CFI,\r\n            top : options.top,\r\n            left : options.left,\r\n            height : options.height,\r\n            width : options.width,\r\n            styles: options.styles,\r\n            highlightGroupCallback : options.highlightGroupCallback,\r\n            callbackContext : options.callbackContext\r\n        });\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n        return this.el;\r\n    },\r\n\r\n    resetPosition : function (top, left, height, width) {\r\n\r\n        this.highlight.set({\r\n            top : top,\r\n            left : left,\r\n            height : height,\r\n            width : width\r\n        });\r\n        this.setCSS();\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n\r\n        this.highlight.set({\r\n            styles : styles,\r\n        });\r\n        this.render();\r\n    },\r\n\r\n    setCSS : function () {\r\n\r\n        var styles = this.highlight.get(\"styles\") || {};\r\n        \r\n        this.$el.css({ \r\n            \"top\" : this.highlight.get(\"top\") + \"px\",\r\n            \"left\" : this.highlight.get(\"left\") + \"px\",\r\n            \"height\" : this.highlight.get(\"height\") + \"px\",\r\n            \"width\" : this.highlight.get(\"width\") + \"px\",\r\n            \"background-color\" : styles.fill_color || \"normal\",\r\n        });\r\n    },\r\n\r\n    setBaseHighlight : function () {\r\n\r\n        this.$el.addClass(\"highlight\");\r\n        this.$el.removeClass(\"hover-highlight\");\r\n    },\r\n\r\n    setHoverHighlight : function () {\r\n\r\n        this.$el.addClass(\"hover-highlight\");\r\n        this.$el.removeClass(\"highlight\");\r\n    },\r\n\r\n    highlightEvent : function (event) {\r\n\r\n        event.stopPropagation();\r\n        var highlightGroupCallback = this.highlight.get(\"highlightGroupCallback\");\r\n        var highlightGroupContext = this.highlight.get(\"callbackContext\");\r\n        highlightGroupContext.highlightGroupCallback(event);\r\n    }\r\n});\r\n\r\n    EpubAnnotations.UnderlineView = Backbone.View.extend({\r\n\r\n    el : \"<div class='underline-range'> \\\r\n             <div class='transparent-part'></div> \\\r\n             <div class='underline-part'></div> \\\r\n          </div>\",\r\n\r\n    events : {\r\n        \"mouseenter\" : \"underlineEvent\",\r\n        \"mouseleave\" : \"underlineEvent\",\r\n        \"click\" : \"underlineEvent\"\r\n    },\r\n\r\n    initialize : function (options) {\r\n\r\n        this.underline = new EpubAnnotations.Underline({\r\n            CFI : options.CFI,\r\n            top : options.top,\r\n            left : options.left,\r\n            height : options.height,\r\n            width : options.width,\r\n            styles : options.styles,\r\n            underlineGroupCallback : options.underlineGroupCallback,\r\n            callbackContext : options.callbackContext\r\n        });\r\n\r\n        this.$transparentElement = $(\".transparent-part\", this.$el);\r\n        this.$underlineElement = $(\".underline-part\", this.$el);\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n        return this.el;\r\n    },\r\n\r\n    resetPosition : function (top, left, height, width) {\r\n\r\n        this.underline.set({\r\n            top : top,\r\n            left : left,\r\n            height : height,\r\n            width : width\r\n        });\r\n        this.setCSS();\r\n    },\r\n\r\n    setStyles : function (styles) {\r\n\r\n        this.underline.set({\r\n            styles : styles,\r\n        });\r\n        this.render();\r\n    },\r\n\r\n    setCSS : function () {\r\n        var styles = this.underline.get(\"styles\") || {};\r\n        \r\n        this.$el.css({ \r\n            \"top\" : this.underline.get(\"top\") + \"px\",\r\n            \"left\" : this.underline.get(\"left\") + \"px\",\r\n            \"height\" : this.underline.get(\"height\") + \"px\",\r\n            \"width\" : this.underline.get(\"width\") + \"px\",\r\n        });\r\n\r\n        // Underline part\r\n        this.$underlineElement.css({\r\n            \"background-color\" : styles.fill_color || \"normal\",\r\n        });\r\n\r\n        \r\n        this.$underlineElement.addClass(\"underline\");\r\n    },\r\n\r\n    underlineEvent : function (event) {\r\n\r\n        event.stopPropagation();\r\n        var underlineGroupCallback = this.underline.get(\"underlineGroupCallback\");\r\n        var underlineGroupContext = this.underline.get(\"callbackContext\");\r\n        underlineGroupContext.underlineGroupCallback(event);\r\n    },\r\n\r\n    setBaseUnderline : function () {\r\n\r\n        this.$underlineElement.addClass(\"underline\");\r\n        this.$underlineElement.removeClass(\"hover-underline\");\r\n    },\r\n\r\n    setHoverUnderline : function () {\r\n\r\n        this.$underlineElement.addClass(\"hover-underline\");\r\n        this.$underlineElement.removeClass(\"underline\");\r\n    },\r\n});\r\n\r\n    // Rationale: An image annotation does NOT have a view, as we don't know the state of an image element within an EPUB; it's entirely\r\n//   possible that an EPUB image element could have a backbone view associated with it already, which would cause problems if we \r\n//   tried to associate another backbone view. As such, this model modifies CSS properties for an annotated image element.\r\n//   \r\n//   An image annotation view that manages an absolutely position element (similar to bookmarks, underlines and highlights) can be\r\n//   added if more functionality is required. \r\n\r\nEpubAnnotations.ImageAnnotation = Backbone.Model.extend({\r\n\r\n    initialize : function (attributes, options) {\r\n\r\n        // Set handlers here. Can use jquery handlers\r\n        var that = this;\r\n        var $imageElement = $(this.get(\"imageNode\"));\r\n        $imageElement.on(\"mouseenter\", function () {\r\n            that.setMouseenterBorder();\r\n        });\r\n        $imageElement.on(\"mouseleave\", function () {\r\n            that.setMouseleaveBorder();\r\n        });\r\n        $imageElement.on(\"click\", function () {\r\n            that.get(\"bbPageSetView\").trigger(\"annotationClicked\", \"image\", that.get(\"CFI\"), that.get(\"id\"),event);\r\n        });\r\n    },\r\n\r\n    render : function () {\r\n\r\n        this.setCSS();\r\n    },\r\n\r\n    setCSS : function () {\r\n        \r\n        $(this.get(\"imageNode\")).css({\r\n            \"border\" : \"5px solid rgb(255, 0, 0)\",\r\n            \"border\" : \"5px solid rgba(255, 0, 0, 0.2)\",\r\n            \"-webkit-background-clip\" : \"padding-box\",\r\n            \"background-clip\" : \"padding-box\"\r\n        });\r\n    },\r\n\r\n    setMouseenterBorder : function () {\r\n\r\n        $(this.get(\"imageNode\")).css({\r\n            \"border\" : \"5px solid rgba(255, 0, 0, 0.4)\"\r\n        });\r\n    },\r\n\r\n    setMouseleaveBorder : function () {\r\n\r\n        $(this.get(\"imageNode\")).css({\r\n            \"border\" : \"5px solid rgba(255, 0, 0, 0.2)\"\r\n        });\r\n    }\r\n});\r\n\r\n\r\n\r\n    var reflowableAnnotations = new EpubAnnotations.ReflowableAnnotations({\r\n        contentDocumentDOM : contentDocumentDOM, \r\n        bbPageSetView : bbPageSetView,\r\n        annotationCSSUrl : annotationCSSUrl,\r\n    });\r\n\r\n    // Description: The public interface\r\n    return {\r\n\r\n        addSelectionHighlight : function (id, type, styles) { \r\n            return reflowableAnnotations.addSelectionHighlight(id, type, styles); \r\n        },\r\n        addSelectionBookmark : function (id, type) { \r\n            return reflowableAnnotations.addSelectionBookmark(id, type); \r\n        },\r\n        addSelectionImageAnnotation : function (id) {\r\n            return reflowableAnnotations.addSelectionImageAnnotation(id);\r\n        },\r\n        addHighlight : function (CFI, id, type, styles) { \r\n            return reflowableAnnotations.addHighlight(CFI, id, type, styles); \r\n        },\r\n        addBookmark : function (CFI, id, type) { \r\n            return reflowableAnnotations.addBookmark(CFI, id, type);\r\n        },\r\n        addImageAnnotation : function (CFI, id) { \r\n            return reflowableAnnotations.addImageAnnotation(CFI, id); \r\n        },\r\n        updateAnnotationView : function (id, styles) {\r\n            return reflowableAnnotations.updateAnnotationView(id, styles);\r\n        },\r\n        redraw : function () { \r\n            return reflowableAnnotations.redraw(); \r\n        },\r\n        getBookmark : function (id) { \r\n            return reflowableAnnotations.annotations.getBookmark(id); \r\n        },\r\n        getBookmarks : function () { \r\n            return reflowableAnnotations.annotations.getBookmarks(); \r\n        }, \r\n        getHighlight : function (id) { \r\n            return reflowableAnnotations.annotations.getHighlight(id); \r\n        },\r\n        getHighlights : function () { \r\n            return reflowableAnnotations.annotations.getHighlights(); \r\n        },\r\n        getUnderline : function (id) { \r\n            return reflowableAnnotations.annotations.getUnderline(id); \r\n        },\r\n        getUnderlines : function () { \r\n            return reflowableAnnotations.annotations.getUnderlines();\r\n        },\r\n        getImageAnnotation : function () {\r\n\r\n        },\r\n        getImageAnnotations : function () {\r\n\r\n        }, \r\n        removeAnnotation: function (annotationId) {\r\n            return reflowableAnnotations.remove(annotationId);\r\n        },\r\n        getCurrentSelectionCFI: function () {\r\n            return reflowableAnnotations.getCurrentSelectionCFI();\r\n        },\r\n        getCurrentSelectionOffsetCFI: function () {\r\n            return reflowableAnnotations.getCurrentSelectionOffsetCFI();\r\n        },\r\n        removeHighlight: function (annotationId) {\r\n            return reflowableAnnotations.removeHighlight(annotationId);\r\n        }\r\n    };\r\n};\r\n\r\n    return EpubAnnotationsModule;\r\n});\n","//  Created by Dmitry Markushevich (dmitrym@evidentpoint.com)\r\n// \r\n//  Copyright (c) 2014 Readium Foundation and/or its licensees. All rights reserved.\r\n//  \r\n//  Redistribution and use in source and binary forms, with or without modification, \r\n//  are permitted provided that the following conditions are met:\r\n//  1. Redistributions of source code must retain the above copyright notice, this \r\n//  list of conditions and the following disclaimer.\r\n//  2. Redistributions in binary form must reproduce the above copyright notice, \r\n//  this list of conditions and the following disclaimer in the documentation and/or \r\n//  other materials provided with the distribution.\r\n//  3. Neither the name of the organization nor the names of its contributors may be \r\n//  used to endorse or promote products derived from this software without specific \r\n//  prior written permission.\r\n//  \r\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND \r\n//  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \r\n//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. \r\n//  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, \r\n//  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, \r\n//  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, \r\n//  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF \r\n//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE \r\n//  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED \r\n//  OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n/*\r\n\r\n\r\n\r\n# Highlighting in Readium - A primer\r\n\r\nPlease note:\r\n\r\n- only simple text highlighting is currently supported\r\n- it's the job of the reading system to keep track of annotations. readium-js simply displays your annotations.\r\n- full CFIs for annotations are not currently available. We use so called \"partial CFI\"s, a tuple containing idref of the spine item and the CFI definition relative to the root of the spine item.\r\n\r\nCurrently, the API exposed via `ReaderView` exposes 4 functions and 1 even which should be sufficient for a simple highlighting workflow.\r\n\r\n\r\n# API\r\n\r\nFor the purposes of the examples below, `RReader` is a previously instantiated `ReaderView` instance.\r\n\r\n\r\n## Is anything selected (getCurrentSelectionCfi())\r\n\r\nBefore proceeding with the highlighting workflow it is sometimes necessary to determine whether the user has in fact selected anything. This can be accomplished with the following:\r\n\r\n\r\n\t> RReader.getCurrentSelectionCfi()\r\n\tObject {idref: \"id-id2604743\", cfi: \"/4/2/6,/1:74,/1:129\"}\r\n\r\nThe response contains a partial CFI that is sufficient to create a highlight based on selection. If nothing is selected *undefined* is returned. \r\n\r\nYou can also use partial Cfi with `openSpineItemElementCfi()` to navigate to where this selection is later.\r\n\r\n## Highlighting (addHighlight and addSelectionHighlight)\r\n\r\nOnce we've determined what needs to be highlighted (by generating a partial CFI from a selection, or having an existing partial CFI stored externally) we can add it to the reader by calling `addHighlight()`:\r\n\r\n\t> RReader.addHighlight('id-id2604743', \"/4/2/6,/1:74,/1:129\", 123, \"highlight\")\r\n\tObject {CFI: \"/4/2/6,/1:74,/1:129\", selectedElements: Array[1], idref: \"id-id2604743\"}\r\n\r\n*addHighligh*t takes the following parameters:\r\n\r\n- *id-id2604743* - `idref` is the idref value from `getCurrentSelectionCfi()\r\n- * /4/2/6,/1:74,/1:129* - `cfi` is the cfi value from `getCurrentSelectionCfi()\r\n- *123* - `id` is the unique id that defines this annotation\r\n- *highlight* - 'type' of annotation. only 'highlight' is currently supported.\r\n\r\n### addSelectioHighlight\r\n\r\nAlternatively, you can call addSelectionHighlight(). It combines both getCurrentSelectionCfi() and addHighlight into one call:\r\n\r\n\t> RReader.addSelectionHighlight(124, \"highlight\")\r\n\tObject {CFI: \"/4/2/4,/1:437,/1:503\", selectedElements: Array[1], idref: \"id-id2604743\"}\r\n\r\nNote that it provides no validation. If nothing is selected, `undefined` is returned.\r\n\r\n\r\n## Removing highlights \r\n\r\nTo remove the highlight, call `removeHighlight`:\r\n\r\n\t> RReader.removeHighlight(123)\r\n\tundefined\r\n\r\n\r\n# Handling annotation click events\r\n\r\nWhen a user clicks on a highlight `annotationClicked` event is dispatched with the following arguments:\r\n\r\n- type of annotation\r\n- idref of the spine item\r\n- partial Cfi of the annotation\r\n- annotationdId\r\n\r\n\r\n\t> RReader.on('annotationClicked', function(type, idref, cfi, annotationId) { console.log (type, idref, cfi, annotationId)});\r\n\tViews.ReaderView {on: function, once: function, off: function, trigger: function, listenTo: function???}\r\n\t\r\nThen when the user clicks on the highlight the following will show up in the console:\r\n\r\n\thighlight id-id2604743 /4/2/6,/1:74,/1:129 123 \r\n\t\r\n\r\n*/\r\ndefine('readium_plugin_annotations/annotations_manager',['jquery', 'underscore', 'eventEmitter', './annotations_module'], function($, _, EventEmitter, EpubAnnotationsModule) {\r\n/**\r\n *\r\n * @param proxyObj\r\n * @param options\r\n * @constructor\r\n */\r\nvar AnnotationsManager = function (proxyObj, options) {\r\n\r\n    var self = this;\r\n    var liveAnnotations = {};\r\n    var spines = {};\r\n    var proxy = proxyObj; \r\n    var annotationCSSUrl = options.annotationCSSUrl;\r\n\r\n    if (!annotationCSSUrl) {\r\n        console.warn(\"WARNING! Annotations CSS not supplied. Highlighting is not going to work.\");\r\n    }\r\n\r\n    _.extend(this, new EventEmitter());\r\n\r\n    // we want to bubble up all of the events that annotations module may trigger up.\r\n    // this.on(\"all\", function() {\r\n    // });\r\n    //TODO: EventEmitter3 does not support \"all\" or \"*\" (catch-all event sink)\r\n    //https://github.com/primus/eventemitter3/blob/master/index.js#L61\r\n    //...so instead we patch trigger() and emit() (which are synonymous, see Bootstrapper.js EventEmitter.prototype.trigger = EventEmitter.prototype.emit;)\r\n        \r\n    var originalEmit = self['emit'];\r\n    \r\n    var triggerEmitPatch = function() {\r\n        var args = Array.prototype.slice.call(arguments);\r\nconsole.debug(args);\r\n\r\n        // mangle annotationClicked event. What really needs to happen is, the annotation_module needs to return a \r\n        // bare Cfi, and this class should append the idref.\r\n        var annotationClickedEvent = 'annotationClicked';\r\n        if (args.length && args[0] === annotationClickedEvent) {\r\n            for (var spineIndex in liveAnnotations)\r\n            {\r\n                var jQueryEvent = args[4];\r\n                var annotationId = args[3];\r\n                var fullFakeCfi = args[2];\r\n                var type = args[1];\r\n                if (liveAnnotations[spineIndex].getHighlight(annotationId)) {\r\n                    var idref = spines[spineIndex].idref;\r\n                    var partialCfi = getPartialCfi(fullFakeCfi);\r\n                    args = [annotationClickedEvent, type, idref, partialCfi, annotationId, jQueryEvent];\r\n                    \r\nconsole.debug(\"Corrected CFI:\");\r\nconsole.debug(args);\r\n                }\r\n            }\r\n        }\r\n        \r\n        originalEmit.apply(this, args);\r\n        originalEmit.apply(proxy, args);\r\n    };\r\n\r\n    this.trigger = triggerEmitPatch;\r\n    this.emit = triggerEmitPatch;\r\n\r\n    this.attachAnnotations = function($iframe, spineItem) {\r\n        var epubDocument = $iframe[0].contentDocument;\r\n        liveAnnotations[spineItem.index] = new EpubAnnotationsModule(epubDocument, self, annotationCSSUrl);\r\n        spines[spineItem.index] = spineItem;\r\n\r\n        // check to see which spine indecies can be culled depending on the distance from current spine item\r\n        for(var spineIndex in liveAnnotations) {\r\n            if (Math.abs(spineIndex - spineIndex.index) > 3) {\r\n                delete liveAnnotations[spineIndex];\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    this.getCurrentSelectionCfi = function() {\r\n        for(var spine in liveAnnotations) {\r\n            var annotationsForView = liveAnnotations[spine]; \r\n            var partialCfi = annotationsForView.getCurrentSelectionCFI();\r\n            if (partialCfi) {\r\n                return {\"idref\":spines[spine].idref, \"cfi\":partialCfi};\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    this.addSelectionHighlight = function(id, type) {\r\n        for(spine in liveAnnotations) {\r\n            var annotationsForView = liveAnnotations[spine]; \r\n            if (annotationsForView.getCurrentSelectionCFI()) {\r\n                var annotation = annotationsForView.addSelectionHighlight(id, type);\r\n                annotation.idref = spines[spine].idref;\r\n                return annotation;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    this.addHighlight = function(spineIdRef, partialCfi, id, type, styles) {\r\n        for(var spine in liveAnnotations) {\r\n            if (spines[spine].idref === spineIdRef) {\r\n                var fakeCfi = \"epubcfi(/99!\" + partialCfi + \")\";\r\n                var annotationsForView = liveAnnotations[spine]; \r\n                var annotation = annotationsForView.addHighlight(fakeCfi, id, type, styles);\r\n                annotation.idref = spineIdRef;\r\n                annotation.CFI = getPartialCfi(annotation.CFI);\r\n                return annotation;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n\r\n    this.removeHighlight = function(id) {\r\n        var result = undefined;\r\n        for(var spine in liveAnnotations) {\r\n            var annotationsForView = liveAnnotations[spine]; \r\n            result  = annotationsForView.removeHighlight(id);\r\n        }\r\n        return result;\r\n    };\r\n\r\n\r\n\r\n    function getPartialCfi(CFI) {\r\n        var cfiWrapperPattern = new RegExp(\"^.*!\")\r\n        // remove epubcfi( and indirection step\r\n        var partiallyNakedCfi = CFI.replace(cfiWrapperPattern, \"\");\r\n        // remove last paren\r\n        var nakedCfi = partiallyNakedCfi.substring(0, partiallyNakedCfi.length -1);\r\n        return nakedCfi;\r\n    }\r\n\r\n\r\n};\r\n\r\nreturn AnnotationsManager;\r\n});\n","define('readium_plugin_annotations/main',['readium_plugins', './annotations_manager'], function (Plugins, AnnotationsManager) {\r\n    var config = {};\r\n\r\n    Plugins.register(\"annotations\", function (api) {\r\n        var _annotationsManager, _annotationsApi, _initialized = false, _initializedLate = false;\r\n\r\n        var self = this;\r\n\r\n        function isInitialized() {\r\n            if (!_initialized) {\r\n                api.plugin.warn('Not initialized!')\r\n            }\r\n            return _initialized;\r\n        }\r\n\r\n        this.initialize = function (options) {\r\n            if (_initialized) {\r\n                api.plugin.warn('Already initialized!');\r\n                return;\r\n            }\r\n\r\n            _annotationsManager = new AnnotationsManager(self, options);\r\n\r\n            if (_initializedLate) {\r\n                api.plugin.warn('Unable to attach to currently loaded content document.\\n' +\r\n                'Initialize the plugin before loading a content document.');\r\n            }\r\n\r\n            _initialized = true;\r\n        };\r\n\r\n        /**\r\n         * Returns current selection partial Cfi, useful for workflows that need to check whether the user has selected something.\r\n         *\r\n         * @method getCurrentSelectionCfi\r\n         * @returns {object | undefined} partial cfi object or undefined if nothing is selected\r\n         *\r\n         */\r\n        this.getCurrentSelectionCfi = function () {\r\n            if (!isInitialized()) {\r\n                return\r\n            }\r\n\r\n            return _annotationsManager.getCurrentSelectionCfi();\r\n        };\r\n\r\n        /**\r\n         * Creates a higlight based on given parameters\r\n         *\r\n         * @method addHighlight\r\n         * @param {string} spineIdRef spine idref that defines the partial Cfi\r\n         * @param {string} CFI partial CFI (withouth the indirection step) relative to the spine index\r\n         * @param {string} id id of the highlight. must be unique\r\n         * @param {string} type currently \"highlight\" only\r\n         *\r\n         * @returns {object | undefined} partial cfi object of the created highlight\r\n         *\r\n         */\r\n        this.addHighlight = function (spineIdRef, Cfi, id, type, styles) {\r\n            if (!isInitialized()) {\r\n                return\r\n            }\r\n\r\n            return _annotationsManager.addHighlight(spineIdRef, Cfi, id, type, styles);\r\n        };\r\n\r\n\r\n        /**\r\n         * Creates a higlight based on current selection\r\n         *\r\n         * @method addSelectionHighlight\r\n         * @param {string} id id of the highlight. must be unique\r\n         * @param {string} type currently \"highlight\" only\r\n         *\r\n         * @returns {object | undefined} partial cfi object of the created highlight\r\n         *\r\n         */\r\n        this.addSelectionHighlight = function (id, type) {\r\n            if (!isInitialized()) {\r\n                return\r\n            }\r\n\r\n            return _annotationsManager.addSelectionHighlight(id, type);\r\n        };\r\n\r\n        /**\r\n         * Removes given highlight\r\n         *\r\n         * @method removeHighlight\r\n         * @param {string} id id of the highlight.\r\n         *\r\n         * @returns {undefined}\r\n         *\r\n         */\r\n        this.removeHighlight = function (id) {\r\n            if (!isInitialized()) {\r\n                return\r\n            }\r\n\r\n            return _annotationsManager.removeHighlight(id);\r\n        };\r\n\r\n\r\n        api.reader.on(ReadiumSDK.Events.CONTENT_DOCUMENT_LOADED, function ($iframe, spineItem) {\r\n            if (_initialized) {\r\n                _annotationsManager.attachAnnotations($iframe, spineItem);\r\n            } else {\r\n                _initializedLate = true;\r\n            }\r\n        });\r\n\r\n    });\r\n\r\n    return config;\r\n});\r\n\ndefine('readium_plugin_annotations', ['readium_plugin_annotations/main'], function (main) { return main; });\n\n"]}