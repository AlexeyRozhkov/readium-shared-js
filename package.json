{
  "/*": "----------------------------------------------------------------------------",
  "..": "This package.json (JSON) is automatically generated from package.cson (CSON)",
  ".-": "DO NOT invoke 'npm init' or 'npm install --save' ('--save-dev' / '--save-optional')",
  "._": "as this would overwrite / update the JSON, not the master CSON!",
  "*/": "----------------------------------------------------------------------------",
  "name": "readium-shared-js",
  "version": "0.19.0-alpha",
  "description": "Readium - shared javascript module",
  "keywords": [
    "readium",
    "epub",
    "epub3"
  ],
  "author": {
    "name": "Readium (Daniel Weck)",
    "email": "daniel.weck@gmail.com",
    "url": "http://github.com/readium"
  },
  "licenses": [
    {
      "type": "BSD-3-Clause",
      "url": "http://opensource.org/licenses/BSD-3-Clause"
    }
  ],
  "homepage": "http://github.com/readium/readium-shared-js",
  "bugs": {
    "url": "http://github.com/readium/readium-shared-js/issues",
    "email": "daniel.weck@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/readium/readium-shared-js.git"
  },
  "files": [
    "build-output/",
    "build-output-usage-example/",
    "license.txt",
    "README.md"
  ],
  "dependencies": {
    "parallelshell": "latest",
    "http-server": "latest",
    "opener": "latest"
  },
  "devDependencies": {
    "backbone": "latest",
    "underscore": "latest",
    "URIjs": "latest",
    "jquerySizes": "bramstein/jsizes",
    "eventemitter3": "latest",
    "domReady": "requirejs/domReady",
    "cson": "latest",
    "jshint": "latest",
    "glob": "latest",
    "rimraf": "latest",
    "mkdirp": "latest",
    "watch": "latest",
    "live-reload": "latest"
  },
  "scripts": {
    "env": "env",
    "echo": "echo \"\"",
    "cson2json": "node node_modules/cson/bin/cson2json package.cson && node node_modules/cson/bin/cson2json package.cson > package.json",
    "prepare": "npm run prepare:submodule && npm run prepare:dependencies && npm run prepare:patch",
    "prepare:dependencies": "npm install && npm update",
    "prepare:submodule": "cd readium-cfi-js && npm run prepare && cd .. && ls",
    "prepare:patch": "rimraf node_modules/eventemitter3/_rjs/** && node readium-cfi-js/node_modules/requirejs/bin/r.js -convert node_modules/eventemitter3/ node_modules/eventemitter3/_rjs/",
    "clean": "node --version && npm --version && rimraf build-output/*",
    "prebuild": "npm run clean",
    "build": "npm run build:styles && npm run build:scripts",
    "lint": "node readium-cfi-js/readium-build-tools/jshint_glob.js js/**.js",
    "build:scripts": "npm run build:scripts:multiple && npm run build:scripts:single",
    "build:scripts:multiple": "node readium-cfi-js/node_modules/requirejs/bin/r.js -o readium-cfi-js/readium-build-tools/RequireJS_config.js --rjs_bundle=multiple",
    "build:scripts:single": "node readium-cfi-js/node_modules/requirejs/bin/r.js -o readium-cfi-js/readium-build-tools/RequireJS_config.js --rjs_bundle=single",
    "prebuild:styles": "mkdirp build-output/css/",
    "build:styles": "cp static/sdk.css build-output/css/",
    "example:dev": "npm run clean && echo > open_webbrowser.js && parallelshell \"npm run live-reload\" \"npm run watch\" \"npm run http\"",
    "example": "parallelshell \"npm run http\" \"npm run webbrowser\"",
    "watch": "parallelshell \"npm run watch:build\"",
    "watch:build": "watch \"npm run build && node readium-cfi-js/readium-build-tools/webbrowser.js && npm run webbrowser && rimraf open_webbrowser.js\" build-output-usage-example/",
    "http": "http-server -p 9090 ./",
    "live-reload": "live-reload --port 9091 --delay 1000 build-output/",
    "webbrowser": "opener http://localhost:9090/build-output-usage-example/"
  }
}